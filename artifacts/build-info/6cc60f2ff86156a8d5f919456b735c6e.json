{"id":"6cc60f2ff86156a8d5f919456b735c6e","_format":"hh-sol-build-info-1","solcVersion":"0.8.1","solcLongVersion":"0.8.1+commit.df193b15","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/IERC1271.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (interfaces/IERC1271.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC1271 standard signature validation method for\n * contracts as defined in https://eips.ethereum.org/EIPS/eip-1271[ERC-1271].\n *\n * _Available since v4.1._\n */\ninterface IERC1271 {\n    /**\n     * @dev Should return whether the signature provided is valid for the provided data\n     * @param hash      Hash of the data to be signed\n     * @param signature Signature byte array associated with _data\n     */\n    function isValidSignature(bytes32 hash, bytes memory signature) external view returns (bytes4 magicValue);\n}\n"},"@openzeppelin/contracts/security/Pausable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../Strings.sol\";\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS,\n        InvalidSignatureV // Deprecated in v4.8\n    }\n\n    function _throwError(RecoverError error) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert(\"ECDSA: invalid signature\");\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert(\"ECDSA: invalid signature length\");\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert(\"ECDSA: invalid signature 's' value\");\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature` or error string. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength);\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, signature);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address, RecoverError) {\n        bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n        uint8 v = uint8((uint256(vs) >> 255) + 27);\n        return tryRecover(hash, v, r, s);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     *\n     * _Available since v4.2._\n     */\n    function recover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, r, vs);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address, RecoverError) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature);\n        }\n\n        return (signer, RecoverError.NoError);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, v, r, s);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from a `hash`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32) {\n        // 32 is the length in bytes of hash,\n        // enforced by the type signature above\n        return keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", hash));\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from `s`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes memory s) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n\", Strings.toString(s.length), s));\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Typed Data, created from a\n     * `domainSeparator` and a `structHash`. This produces hash corresponding\n     * to the one signed with the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n     * JSON-RPC method as part of EIP-712.\n     *\n     * See {recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash));\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/cryptography/SignatureChecker.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./ECDSA.sol\";\nimport \"../Address.sol\";\nimport \"../../interfaces/IERC1271.sol\";\n\n/**\n * @dev Signature verification helper that can be used instead of `ECDSA.recover` to seamlessly support both ECDSA\n * signatures from externally owned accounts (EOAs) as well as ERC1271 signatures from smart contract wallets like\n * Argent and Gnosis Safe.\n *\n * _Available since v4.1._\n */\nlibrary SignatureChecker {\n    /**\n     * @dev Checks if a signature is valid for a given signer and data hash. If the signer is a smart contract, the\n     * signature is validated against that smart contract using ERC1271, otherwise it's validated using `ECDSA.recover`.\n     *\n     * NOTE: Unlike ECDSA signatures, contract signatures are revocable, and the outcome of this function can thus\n     * change through time. It could return true at block N and false at block N+1 (or the opposite).\n     */\n    function isValidSignatureNow(\n        address signer,\n        bytes32 hash,\n        bytes memory signature\n    ) internal view returns (bool) {\n        (address recovered, ECDSA.RecoverError error) = ECDSA.tryRecover(hash, signature);\n        if (error == ECDSA.RecoverError.NoError && recovered == signer) {\n            return true;\n        }\n\n        (bool success, bytes memory result) = signer.staticcall(\n            abi.encodeWithSelector(IERC1271.isValidSignature.selector, hash, signature)\n        );\n        return (success &&\n            result.length == 32 &&\n            abi.decode(result, (bytes32)) == bytes32(IERC1271.isValidSignature.selector));\n    }\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator\n    ) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1);\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator,\n        Rounding rounding\n    ) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10**64) {\n                value /= 10**64;\n                result += 64;\n            }\n            if (value >= 10**32) {\n                value /= 10**32;\n                result += 32;\n            }\n            if (value >= 10**16) {\n                value /= 10**16;\n                result += 16;\n            }\n            if (value >= 10**8) {\n                value /= 10**8;\n                result += 8;\n            }\n            if (value >= 10**4) {\n                value /= 10**4;\n                result += 4;\n            }\n            if (value >= 10**2) {\n                value /= 10**2;\n                result += 2;\n            }\n            if (value >= 10**1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n}\n"},"contracts/GPURegistration.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.1;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\nimport \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\";\n\ncontract GPURegistration is Ownable, Pausable {\n    struct GPU {\n        string uniqueIdentifier;\n        address owner;\n        bool isRegistered;\n    }\n\n    mapping(string => GPU) public gpus;\n\n    event GPURegistered(string uniqueIdentifier, address owner);\n    event GPUTransferred(string uniqueIdentifier, address from, address to);\n\n    // A valid ECDSA signature is a pair of two numbers usually referred to as r and s. An invalid s value error means that the s component of the ECDSA signature you provided doesn't match the expected format or constraints.\n    // To generate a valid signature, you need a private key and a message (in this case the GPU ID). However, generating such a signature just for simulation is not straightforward and could potentially pose a security risk if not handled properly.\n\n\n\n    //  It no longer uses ECDSA to validate the signature but instead expects the signature passed to the registerGPU function to be the keccak256 hash of the _uniqueIdentifier (i.e., the GPU ID). This is a simpler form of validation and should work for your testing purposes.\n\n    function registerGPU(\n        string memory _uniqueIdentifier,\n        bytes32 signature\n    ) public whenNotPaused {\n        require(\n            !gpus[_uniqueIdentifier].isRegistered,\n            \"This GPU is already registered.\"\n        );\n\n        // Check that the signature matches the expected value (the hash of the GPU ID)\n        bytes32 expectedSignature = keccak256(\n            abi.encodePacked(_uniqueIdentifier)\n        );\n        require(\n            signature == expectedSignature,\n            \"Signature does not match the expected value.\"\n        );\n\n        gpus[_uniqueIdentifier] = GPU(_uniqueIdentifier, msg.sender, true);\n        emit GPURegistered(_uniqueIdentifier, msg.sender);\n    }\n\n    function transferGPU(\n        string memory _uniqueIdentifier,\n        address _newOwner\n    ) public whenNotPaused {\n        require(\n            gpus[_uniqueIdentifier].owner == msg.sender,\n            \"Only the current owner can transfer the GPU.\"\n        );\n        gpus[_uniqueIdentifier].owner = _newOwner;\n        emit GPUTransferred(_uniqueIdentifier, msg.sender, _newOwner);\n    }\n\n    function verifyGPU(\n        string memory _uniqueIdentifier\n    ) public view returns (bool, address) {\n        return (\n            gpus[_uniqueIdentifier].isRegistered,\n            gpus[_uniqueIdentifier].owner\n        );\n    }\n\n    function pause() public onlyOwner {\n        _pause();\n    }\n\n    function unpause() public onlyOwner {\n        _unpause();\n    }\n}\n"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"errors":[{"component":"general","errorCode":"8261","formattedMessage":"Warning: Variable is shadowed in inline assembly by an instruction of the same name\n   --> @openzeppelin/contracts/utils/math/Math.sol:205:5:\n    |\n205 |     function log2(uint256 value) internal pure returns (uint256) {\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Variable is shadowed in inline assembly by an instruction of the same name","severity":"warning","sourceLocation":{"end":9366,"file":"@openzeppelin/contracts/utils/math/Math.sol","start":8383},"type":"Warning"},{"component":"general","errorCode":"8261","formattedMessage":"Warning: Variable is shadowed in inline assembly by an instruction of the same name\n   --> @openzeppelin/contracts/utils/math/Math.sol:247:5:\n    |\n247 |     function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Variable is shadowed in inline assembly by an instruction of the same name","severity":"warning","sourceLocation":{"end":9764,"file":"@openzeppelin/contracts/utils/math/Math.sol","start":9519},"type":"Warning"},{"component":"general","errorCode":"8261","formattedMessage":"Warning: Variable is shadowed in inline assembly by an instruction of the same name\n   --> @openzeppelin/contracts/utils/math/Math.sol:205:5:\n    |\n205 |     function log2(uint256 value) internal pure returns (uint256) {\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Variable is shadowed in inline assembly by an instruction of the same name","severity":"warning","sourceLocation":{"end":9366,"file":"@openzeppelin/contracts/utils/math/Math.sol","start":8383},"type":"Warning"},{"component":"general","errorCode":"8261","formattedMessage":"Warning: Variable is shadowed in inline assembly by an instruction of the same name\n   --> @openzeppelin/contracts/utils/math/Math.sol:247:5:\n    |\n247 |     function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Variable is shadowed in inline assembly by an instruction of the same name","severity":"warning","sourceLocation":{"end":9764,"file":"@openzeppelin/contracts/utils/math/Math.sol","start":9519},"type":"Warning"},{"component":"general","errorCode":"8261","formattedMessage":"Warning: Variable is shadowed in inline assembly by an instruction of the same name\n   --> @openzeppelin/contracts/utils/math/Math.sol:205:5:\n    |\n205 |     function log2(uint256 value) internal pure returns (uint256) {\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Variable is shadowed in inline assembly by an instruction of the same name","severity":"warning","sourceLocation":{"end":9366,"file":"@openzeppelin/contracts/utils/math/Math.sol","start":8383},"type":"Warning"},{"component":"general","errorCode":"8261","formattedMessage":"Warning: Variable is shadowed in inline assembly by an instruction of the same name\n   --> @openzeppelin/contracts/utils/math/Math.sol:247:5:\n    |\n247 |     function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Variable is shadowed in inline assembly by an instruction of the same name","severity":"warning","sourceLocation":{"end":9764,"file":"@openzeppelin/contracts/utils/math/Math.sol","start":9519},"type":"Warning"},{"component":"general","errorCode":"6321","formattedMessage":"Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n   --> @openzeppelin/contracts/utils/Address.sol:200:30:\n    |\n200 |     ) internal view returns (bytes memory) {\n    |                              ^^^^^^^^^^^^\n\n","message":"Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.","severity":"warning","sourceLocation":{"end":7658,"file":"@openzeppelin/contracts/utils/Address.sol","start":7646},"type":"Warning"},{"component":"general","errorCode":"6321","formattedMessage":"Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n   --> @openzeppelin/contracts/utils/Address.sol:223:30:\n    |\n223 |     ) internal pure returns (bytes memory) {\n    |                              ^^^^^^^^^^^^\n\n","message":"Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.","severity":"warning","sourceLocation":{"end":8473,"file":"@openzeppelin/contracts/utils/Address.sol","start":8461},"type":"Warning"}],"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[586],"Ownable":[112]},"id":113,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":2,"nodeType":"ImportDirective","scope":113,"sourceUnit":587,"src":"127:30:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":586,"src":"683:7:0"},"id":5,"nodeType":"InheritanceSpecifier","src":"683:7:0"}],"contractDependencies":[586],"contractKind":"contract","documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"159:494:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":112,"linearizedBaseContracts":[112,586],"name":"Ownable","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":7,"mutability":"mutable","name":"_owner","nodeType":"VariableDeclaration","scope":112,"src":"697:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"id":13,"name":"OwnershipTransferred","nodeType":"EventDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9,"indexed":true,"mutability":"mutable","name":"previousOwner","nodeType":"VariableDeclaration","scope":13,"src":"753:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11,"indexed":true,"mutability":"mutable","name":"newOwner","nodeType":"VariableDeclaration","scope":13,"src":"784:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:0"},"src":"726:84:0"},{"body":{"id":22,"nodeType":"Block","src":"926:49:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":18,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":576,"src":"955:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":19,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"955:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":17,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"936:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":20,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"936:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":21,"nodeType":"ExpressionStatement","src":"936:32:0"}]},"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"816:91:0","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":23,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nodeType":"FunctionDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[],"src":"923:2:0"},"returnParameters":{"id":16,"nodeType":"ParameterList","parameters":[],"src":"926:0:0"},"scope":112,"src":"912:63:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":30,"nodeType":"Block","src":"1084:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":26,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"1094:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":27,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1094:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":28,"nodeType":"ExpressionStatement","src":"1094:13:0"},{"id":29,"nodeType":"PlaceholderStatement","src":"1117:1:0"}]},"documentation":{"id":24,"nodeType":"StructuredDocumentation","src":"981:77:0","text":" @dev Throws if called by any account other than the owner."},"id":31,"name":"onlyOwner","nodeType":"ModifierDefinition","parameters":{"id":25,"nodeType":"ParameterList","parameters":[],"src":"1081:2:0"},"src":"1063:62:0","virtual":false,"visibility":"internal"},{"body":{"id":39,"nodeType":"Block","src":"1256:30:0","statements":[{"expression":{"id":37,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"1273:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":36,"id":38,"nodeType":"Return","src":"1266:13:0"}]},"documentation":{"id":32,"nodeType":"StructuredDocumentation","src":"1131:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":40,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nodeType":"FunctionDefinition","parameters":{"id":33,"nodeType":"ParameterList","parameters":[],"src":"1215:2:0"},"returnParameters":{"id":36,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":40,"src":"1247:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":34,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:0"},"scope":112,"src":"1201:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":53,"nodeType":"Block","src":"1404:85:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":49,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":45,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"1422:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":46,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1422:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":47,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":576,"src":"1433:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":48,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1433:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":50,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":44,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1414:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1414:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":52,"nodeType":"ExpressionStatement","src":"1414:68:0"}]},"documentation":{"id":41,"nodeType":"StructuredDocumentation","src":"1292:62:0","text":" @dev Throws if the sender is not the owner."},"id":54,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nodeType":"FunctionDefinition","parameters":{"id":42,"nodeType":"ParameterList","parameters":[],"src":"1379:2:0"},"returnParameters":{"id":43,"nodeType":"ParameterList","parameters":[],"src":"1404:0:0"},"scope":112,"src":"1359:130:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":67,"nodeType":"Block","src":"1885:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":63,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1922:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":62,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1914:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1914:7:0","typeDescriptions":{}}},"id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1914:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":60,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"1895:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":65,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1895:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":66,"nodeType":"ExpressionStatement","src":"1895:30:0"}]},"documentation":{"id":55,"nodeType":"StructuredDocumentation","src":"1495:331:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."},"functionSelector":"715018a6","id":68,"implemented":true,"kind":"function","modifiers":[{"id":58,"modifierName":{"id":57,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"1875:9:0"},"nodeType":"ModifierInvocation","src":"1875:9:0"}],"name":"renounceOwnership","nodeType":"FunctionDefinition","parameters":{"id":56,"nodeType":"ParameterList","parameters":[],"src":"1857:2:0"},"returnParameters":{"id":59,"nodeType":"ParameterList","parameters":[],"src":"1885:0:0"},"scope":112,"src":"1831:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":90,"nodeType":"Block","src":"2151:128:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":82,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":77,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2169:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":80,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2189:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":79,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2181:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":78,"name":"address","nodeType":"ElementaryTypeName","src":"2181:7:0","typeDescriptions":{}}},"id":81,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2181:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2169:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":83,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2193:40:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":76,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2161:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":84,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2161:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":85,"nodeType":"ExpressionStatement","src":"2161:73:0"},{"expression":{"arguments":[{"id":87,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2263:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":86,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"2244:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2244:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":89,"nodeType":"ExpressionStatement","src":"2244:28:0"}]},"documentation":{"id":69,"nodeType":"StructuredDocumentation","src":"1938:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":91,"implemented":true,"kind":"function","modifiers":[{"id":74,"modifierName":{"id":73,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"2141:9:0"},"nodeType":"ModifierInvocation","src":"2141:9:0"}],"name":"transferOwnership","nodeType":"FunctionDefinition","parameters":{"id":72,"nodeType":"ParameterList","parameters":[{"constant":false,"id":71,"mutability":"mutable","name":"newOwner","nodeType":"VariableDeclaration","scope":91,"src":"2108:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":70,"name":"address","nodeType":"ElementaryTypeName","src":"2108:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2107:18:0"},"returnParameters":{"id":75,"nodeType":"ParameterList","parameters":[],"src":"2151:0:0"},"scope":112,"src":"2081:198:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":110,"nodeType":"Block","src":"2496:124:0","statements":[{"assignments":[98],"declarations":[{"constant":false,"id":98,"mutability":"mutable","name":"oldOwner","nodeType":"VariableDeclaration","scope":110,"src":"2506:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"2506:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":100,"initialValue":{"id":99,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2525:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2506:25:0"},{"expression":{"id":103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":101,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2541:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":102,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2550:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2541:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":104,"nodeType":"ExpressionStatement","src":"2541:17:0"},{"eventCall":{"arguments":[{"id":106,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"2594:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":107,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2604:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":105,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"2573:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2573:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":109,"nodeType":"EmitStatement","src":"2568:45:0"}]},"documentation":{"id":92,"nodeType":"StructuredDocumentation","src":"2285:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":111,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nodeType":"FunctionDefinition","parameters":{"id":95,"nodeType":"ParameterList","parameters":[{"constant":false,"id":94,"mutability":"mutable","name":"newOwner","nodeType":"VariableDeclaration","scope":111,"src":"2461:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":93,"name":"address","nodeType":"ElementaryTypeName","src":"2461:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2460:18:0"},"returnParameters":{"id":96,"nodeType":"ParameterList","parameters":[],"src":"2496:0:0"},"scope":112,"src":"2433:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":113,"src":"654:1968:0"}],"src":"102:2521:0"},"id":0},"@openzeppelin/contracts/interfaces/IERC1271.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1271.sol","exportedSymbols":{"IERC1271":[126]},"id":127,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":114,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"92:23:1"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":115,"nodeType":"StructuredDocumentation","src":"117:189:1","text":" @dev Interface of the ERC1271 standard signature validation method for\n contracts as defined in https://eips.ethereum.org/EIPS/eip-1271[ERC-1271].\n _Available since v4.1._"},"fullyImplemented":false,"id":126,"linearizedBaseContracts":[126],"name":"IERC1271","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":116,"nodeType":"StructuredDocumentation","src":"332:220:1","text":" @dev Should return whether the signature provided is valid for the provided data\n @param hash      Hash of the data to be signed\n @param signature Signature byte array associated with _data"},"functionSelector":"1626ba7e","id":125,"implemented":false,"kind":"function","modifiers":[],"name":"isValidSignature","nodeType":"FunctionDefinition","parameters":{"id":121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":118,"mutability":"mutable","name":"hash","nodeType":"VariableDeclaration","scope":125,"src":"583:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":117,"name":"bytes32","nodeType":"ElementaryTypeName","src":"583:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":120,"mutability":"mutable","name":"signature","nodeType":"VariableDeclaration","scope":125,"src":"597:22:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":119,"name":"bytes","nodeType":"ElementaryTypeName","src":"597:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"582:38:1"},"returnParameters":{"id":124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":123,"mutability":"mutable","name":"magicValue","nodeType":"VariableDeclaration","scope":125,"src":"644:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":122,"name":"bytes4","nodeType":"ElementaryTypeName","src":"644:6:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"643:19:1"},"scope":126,"src":"557:106:1","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":127,"src":"307:358:1"}],"src":"92:574:1"},"id":1},"@openzeppelin/contracts/security/Pausable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/security/Pausable.sol","exportedSymbols":{"Context":[586],"Pausable":[234]},"id":235,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":128,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:2"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":129,"nodeType":"ImportDirective","scope":235,"sourceUnit":587,"src":"130:30:2","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":131,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":586,"src":"632:7:2"},"id":132,"nodeType":"InheritanceSpecifier","src":"632:7:2"}],"contractDependencies":[586],"contractKind":"contract","documentation":{"id":130,"nodeType":"StructuredDocumentation","src":"162:439:2","text":" @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."},"fullyImplemented":true,"id":234,"linearizedBaseContracts":[234,586],"name":"Pausable","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":133,"nodeType":"StructuredDocumentation","src":"646:73:2","text":" @dev Emitted when the pause is triggered by `account`."},"id":137,"name":"Paused","nodeType":"EventDefinition","parameters":{"id":136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":135,"indexed":false,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":137,"src":"737:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":134,"name":"address","nodeType":"ElementaryTypeName","src":"737:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"736:17:2"},"src":"724:30:2"},{"anonymous":false,"documentation":{"id":138,"nodeType":"StructuredDocumentation","src":"760:70:2","text":" @dev Emitted when the pause is lifted by `account`."},"id":142,"name":"Unpaused","nodeType":"EventDefinition","parameters":{"id":141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":140,"indexed":false,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":142,"src":"850:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":139,"name":"address","nodeType":"ElementaryTypeName","src":"850:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"849:17:2"},"src":"835:32:2"},{"constant":false,"id":144,"mutability":"mutable","name":"_paused","nodeType":"VariableDeclaration","scope":234,"src":"873:20:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":143,"name":"bool","nodeType":"ElementaryTypeName","src":"873:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"body":{"id":152,"nodeType":"Block","src":"986:32:2","statements":[{"expression":{"id":150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":148,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":144,"src":"996:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1006:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"996:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":151,"nodeType":"ExpressionStatement","src":"996:15:2"}]},"documentation":{"id":145,"nodeType":"StructuredDocumentation","src":"900:67:2","text":" @dev Initializes the contract in unpaused state."},"id":153,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nodeType":"FunctionDefinition","parameters":{"id":146,"nodeType":"ParameterList","parameters":[],"src":"983:2:2"},"returnParameters":{"id":147,"nodeType":"ParameterList","parameters":[],"src":"986:0:2"},"scope":234,"src":"972:46:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":160,"nodeType":"Block","src":"1229:47:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":156,"name":"_requireNotPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":190,"src":"1239:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1239:19:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":158,"nodeType":"ExpressionStatement","src":"1239:19:2"},{"id":159,"nodeType":"PlaceholderStatement","src":"1268:1:2"}]},"documentation":{"id":154,"nodeType":"StructuredDocumentation","src":"1024:175:2","text":" @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."},"id":161,"name":"whenNotPaused","nodeType":"ModifierDefinition","parameters":{"id":155,"nodeType":"ParameterList","parameters":[],"src":"1226:2:2"},"src":"1204:72:2","virtual":false,"visibility":"internal"},{"body":{"id":168,"nodeType":"Block","src":"1476:44:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":164,"name":"_requirePaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":201,"src":"1486:14:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1486:16:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":166,"nodeType":"ExpressionStatement","src":"1486:16:2"},{"id":167,"nodeType":"PlaceholderStatement","src":"1512:1:2"}]},"documentation":{"id":162,"nodeType":"StructuredDocumentation","src":"1282:167:2","text":" @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."},"id":169,"name":"whenPaused","nodeType":"ModifierDefinition","parameters":{"id":163,"nodeType":"ParameterList","parameters":[],"src":"1473:2:2"},"src":"1454:66:2","virtual":false,"visibility":"internal"},{"body":{"id":177,"nodeType":"Block","src":"1668:31:2","statements":[{"expression":{"id":175,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":144,"src":"1685:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":174,"id":176,"nodeType":"Return","src":"1678:14:2"}]},"documentation":{"id":170,"nodeType":"StructuredDocumentation","src":"1526:84:2","text":" @dev Returns true if the contract is paused, and false otherwise."},"functionSelector":"5c975abb","id":178,"implemented":true,"kind":"function","modifiers":[],"name":"paused","nodeType":"FunctionDefinition","parameters":{"id":171,"nodeType":"ParameterList","parameters":[],"src":"1630:2:2"},"returnParameters":{"id":174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":173,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":178,"src":"1662:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":172,"name":"bool","nodeType":"ElementaryTypeName","src":"1662:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1661:6:2"},"scope":234,"src":"1615:84:2","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":189,"nodeType":"Block","src":"1818:55:2","statements":[{"expression":{"arguments":[{"id":185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1836:9:2","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":183,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":178,"src":"1837:6:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1837:8:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061757361626c653a20706175736564","id":186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1847:18:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a","typeString":"literal_string \"Pausable: paused\""},"value":"Pausable: paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a","typeString":"literal_string \"Pausable: paused\""}],"id":182,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1828:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1828:38:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":188,"nodeType":"ExpressionStatement","src":"1828:38:2"}]},"documentation":{"id":179,"nodeType":"StructuredDocumentation","src":"1705:57:2","text":" @dev Throws if the contract is paused."},"id":190,"implemented":true,"kind":"function","modifiers":[],"name":"_requireNotPaused","nodeType":"FunctionDefinition","parameters":{"id":180,"nodeType":"ParameterList","parameters":[],"src":"1793:2:2"},"returnParameters":{"id":181,"nodeType":"ParameterList","parameters":[],"src":"1818:0:2"},"scope":234,"src":"1767:106:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":200,"nodeType":"Block","src":"1993:58:2","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":195,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":178,"src":"2011:6:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2011:8:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061757361626c653a206e6f7420706175736564","id":197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2021:22:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a","typeString":"literal_string \"Pausable: not paused\""},"value":"Pausable: not paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a","typeString":"literal_string \"Pausable: not paused\""}],"id":194,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2003:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2003:41:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":199,"nodeType":"ExpressionStatement","src":"2003:41:2"}]},"documentation":{"id":191,"nodeType":"StructuredDocumentation","src":"1879:61:2","text":" @dev Throws if the contract is not paused."},"id":201,"implemented":true,"kind":"function","modifiers":[],"name":"_requirePaused","nodeType":"FunctionDefinition","parameters":{"id":192,"nodeType":"ParameterList","parameters":[],"src":"1968:2:2"},"returnParameters":{"id":193,"nodeType":"ParameterList","parameters":[],"src":"1993:0:2"},"scope":234,"src":"1945:106:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":216,"nodeType":"Block","src":"2235:66:2","statements":[{"expression":{"id":209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":207,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":144,"src":"2245:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2255:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2245:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":210,"nodeType":"ExpressionStatement","src":"2245:14:2"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":212,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":576,"src":"2281:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2281:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":211,"name":"Paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":137,"src":"2274:6:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2274:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":215,"nodeType":"EmitStatement","src":"2269:25:2"}]},"documentation":{"id":202,"nodeType":"StructuredDocumentation","src":"2057:124:2","text":" @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."},"id":217,"implemented":true,"kind":"function","modifiers":[{"id":205,"modifierName":{"id":204,"name":"whenNotPaused","nodeType":"IdentifierPath","referencedDeclaration":161,"src":"2221:13:2"},"nodeType":"ModifierInvocation","src":"2221:13:2"}],"name":"_pause","nodeType":"FunctionDefinition","parameters":{"id":203,"nodeType":"ParameterList","parameters":[],"src":"2201:2:2"},"returnParameters":{"id":206,"nodeType":"ParameterList","parameters":[],"src":"2235:0:2"},"scope":234,"src":"2186:115:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":232,"nodeType":"Block","src":"2481:69:2","statements":[{"expression":{"id":225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":223,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":144,"src":"2491:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2501:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"2491:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":226,"nodeType":"ExpressionStatement","src":"2491:15:2"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":228,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":576,"src":"2530:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2530:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":227,"name":"Unpaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":142,"src":"2521:8:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2521:22:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":231,"nodeType":"EmitStatement","src":"2516:27:2"}]},"documentation":{"id":218,"nodeType":"StructuredDocumentation","src":"2307:121:2","text":" @dev Returns to normal state.\n Requirements:\n - The contract must be paused."},"id":233,"implemented":true,"kind":"function","modifiers":[{"id":221,"modifierName":{"id":220,"name":"whenPaused","nodeType":"IdentifierPath","referencedDeclaration":169,"src":"2470:10:2"},"nodeType":"ModifierInvocation","src":"2470:10:2"}],"name":"_unpause","nodeType":"FunctionDefinition","parameters":{"id":219,"nodeType":"ParameterList","parameters":[],"src":"2450:2:2"},"returnParameters":{"id":222,"nodeType":"ParameterList","parameters":[],"src":"2481:0:2"},"scope":234,"src":"2433:117:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":235,"src":"602:1950:2"}],"src":"105:2448:2"},"id":2},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[564]},"id":565,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":236,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:3"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":237,"nodeType":"StructuredDocumentation","src":"126:67:3","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":564,"linearizedBaseContracts":[564],"name":"Address","nodeType":"ContractDefinition","nodes":[{"body":{"id":251,"nodeType":"Block","src":"1241:254:3","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":245,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":240,"src":"1465:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"code","nodeType":"MemberAccess","src":"1465:12:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1465:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1487:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1465:23:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":244,"id":250,"nodeType":"Return","src":"1458:30:3"}]},"documentation":{"id":238,"nodeType":"StructuredDocumentation","src":"216:954:3","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":252,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nodeType":"FunctionDefinition","parameters":{"id":241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":240,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":252,"src":"1195:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":239,"name":"address","nodeType":"ElementaryTypeName","src":"1195:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1194:17:3"},"returnParameters":{"id":244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":243,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":252,"src":"1235:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":242,"name":"bool","nodeType":"ElementaryTypeName","src":"1235:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1234:6:3"},"scope":564,"src":"1175:320:3","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":285,"nodeType":"Block","src":"2483:241:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":263,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2509:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$564","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$564","typeString":"library Address"}],"id":262,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2501:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":261,"name":"address","nodeType":"ElementaryTypeName","src":"2501:7:3","typeDescriptions":{}}},"id":264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2501:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"2501:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":266,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"2526:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2501:31:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2534:31:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":260,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2493:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2493:73:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":270,"nodeType":"ExpressionStatement","src":"2493:73:3"},{"assignments":[272,null],"declarations":[{"constant":false,"id":272,"mutability":"mutable","name":"success","nodeType":"VariableDeclaration","scope":285,"src":"2578:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":271,"name":"bool","nodeType":"ElementaryTypeName","src":"2578:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":279,"initialValue":{"arguments":[{"hexValue":"","id":277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2626:2:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":273,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":255,"src":"2596:9:3","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"2596:14:3","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":275,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"2618:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2596:29:3","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2596:33:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2577:52:3"},{"expression":{"arguments":[{"id":281,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"2647:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2656:60:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":280,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2639:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2639:78:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":284,"nodeType":"ExpressionStatement","src":"2639:78:3"}]},"documentation":{"id":253,"nodeType":"StructuredDocumentation","src":"1501:906:3","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":286,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nodeType":"FunctionDefinition","parameters":{"id":258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":255,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":286,"src":"2431:25:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":254,"name":"address","nodeType":"ElementaryTypeName","src":"2431:15:3","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":257,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":286,"src":"2458:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":256,"name":"uint256","nodeType":"ElementaryTypeName","src":"2458:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2430:43:3"},"returnParameters":{"id":259,"nodeType":"ParameterList","parameters":[],"src":"2483:0:3"},"scope":564,"src":"2412:312:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":303,"nodeType":"Block","src":"3555:96:3","statements":[{"expression":{"arguments":[{"id":297,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":289,"src":"3594:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":298,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":291,"src":"3602:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3608:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3611:32:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":296,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[344,388],"referencedDeclaration":388,"src":"3572:21:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3572:72:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":295,"id":302,"nodeType":"Return","src":"3565:79:3"}]},"documentation":{"id":287,"nodeType":"StructuredDocumentation","src":"2730:731:3","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":304,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nodeType":"FunctionDefinition","parameters":{"id":292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":289,"mutability":"mutable","name":"target","nodeType":"VariableDeclaration","scope":304,"src":"3488:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":288,"name":"address","nodeType":"ElementaryTypeName","src":"3488:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":291,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":304,"src":"3504:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":290,"name":"bytes","nodeType":"ElementaryTypeName","src":"3504:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3487:35:3"},"returnParameters":{"id":295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":294,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":304,"src":"3541:12:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":293,"name":"bytes","nodeType":"ElementaryTypeName","src":"3541:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3540:14:3"},"scope":564,"src":"3466:185:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":323,"nodeType":"Block","src":"4020:76:3","statements":[{"expression":{"arguments":[{"id":317,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"4059:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":318,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"4067:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4073:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":320,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":311,"src":"4076:12:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":316,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[344,388],"referencedDeclaration":388,"src":"4037:21:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4037:52:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":315,"id":322,"nodeType":"Return","src":"4030:59:3"}]},"documentation":{"id":305,"nodeType":"StructuredDocumentation","src":"3657:211:3","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":324,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nodeType":"FunctionDefinition","parameters":{"id":312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":307,"mutability":"mutable","name":"target","nodeType":"VariableDeclaration","scope":324,"src":"3904:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":306,"name":"address","nodeType":"ElementaryTypeName","src":"3904:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":309,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":324,"src":"3928:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":308,"name":"bytes","nodeType":"ElementaryTypeName","src":"3928:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":311,"mutability":"mutable","name":"errorMessage","nodeType":"VariableDeclaration","scope":324,"src":"3955:26:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":310,"name":"string","nodeType":"ElementaryTypeName","src":"3955:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3894:93:3"},"returnParameters":{"id":315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":314,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":324,"src":"4006:12:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":313,"name":"bytes","nodeType":"ElementaryTypeName","src":"4006:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4005:14:3"},"scope":564,"src":"3873:223:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":343,"nodeType":"Block","src":"4601:111:3","statements":[{"expression":{"arguments":[{"id":337,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"4640:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":338,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":329,"src":"4648:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":339,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":331,"src":"4654:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4661:43:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":336,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[344,388],"referencedDeclaration":388,"src":"4618:21:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4618:87:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":335,"id":342,"nodeType":"Return","src":"4611:94:3"}]},"documentation":{"id":325,"nodeType":"StructuredDocumentation","src":"4102:351:3","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":344,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nodeType":"FunctionDefinition","parameters":{"id":332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":327,"mutability":"mutable","name":"target","nodeType":"VariableDeclaration","scope":344,"src":"4498:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":326,"name":"address","nodeType":"ElementaryTypeName","src":"4498:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":329,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":344,"src":"4522:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":328,"name":"bytes","nodeType":"ElementaryTypeName","src":"4522:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":331,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":344,"src":"4549:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":330,"name":"uint256","nodeType":"ElementaryTypeName","src":"4549:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4488:80:3"},"returnParameters":{"id":335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":334,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":344,"src":"4587:12:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":333,"name":"bytes","nodeType":"ElementaryTypeName","src":"4587:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4586:14:3"},"scope":564,"src":"4458:254:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":387,"nodeType":"Block","src":"5139:267:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":361,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5165:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$564","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$564","typeString":"library Address"}],"id":360,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5157:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":359,"name":"address","nodeType":"ElementaryTypeName","src":"5157:7:3","typeDescriptions":{}}},"id":362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5157:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"5157:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":364,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"5182:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5157:30:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5189:40:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":358,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5149:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5149:81:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":368,"nodeType":"ExpressionStatement","src":"5149:81:3"},{"assignments":[370,372],"declarations":[{"constant":false,"id":370,"mutability":"mutable","name":"success","nodeType":"VariableDeclaration","scope":387,"src":"5241:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":369,"name":"bool","nodeType":"ElementaryTypeName","src":"5241:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":372,"mutability":"mutable","name":"returndata","nodeType":"VariableDeclaration","scope":387,"src":"5255:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":371,"name":"bytes","nodeType":"ElementaryTypeName","src":"5255:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":379,"initialValue":{"arguments":[{"id":377,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"5308:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":373,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":347,"src":"5282:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"5282:11:3","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":375,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"5301:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5282:25:3","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5282:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5240:73:3"},{"expression":{"arguments":[{"id":381,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":347,"src":"5357:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":382,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":370,"src":"5365:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":383,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":372,"src":"5374:10:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":384,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":353,"src":"5386:12:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":380,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"5330:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5330:69:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":357,"id":386,"nodeType":"Return","src":"5323:76:3"}]},"documentation":{"id":345,"nodeType":"StructuredDocumentation","src":"4718:237:3","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":388,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nodeType":"FunctionDefinition","parameters":{"id":354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":347,"mutability":"mutable","name":"target","nodeType":"VariableDeclaration","scope":388,"src":"5000:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":346,"name":"address","nodeType":"ElementaryTypeName","src":"5000:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":349,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":388,"src":"5024:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":348,"name":"bytes","nodeType":"ElementaryTypeName","src":"5024:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":351,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":388,"src":"5051:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":350,"name":"uint256","nodeType":"ElementaryTypeName","src":"5051:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":353,"mutability":"mutable","name":"errorMessage","nodeType":"VariableDeclaration","scope":388,"src":"5074:26:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":352,"name":"string","nodeType":"ElementaryTypeName","src":"5074:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4990:116:3"},"returnParameters":{"id":357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":356,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":388,"src":"5125:12:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":355,"name":"bytes","nodeType":"ElementaryTypeName","src":"5125:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5124:14:3"},"scope":564,"src":"4960:446:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":404,"nodeType":"Block","src":"5683:97:3","statements":[{"expression":{"arguments":[{"id":399,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":391,"src":"5719:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":400,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":393,"src":"5727:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5733:39:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":398,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[405,434],"referencedDeclaration":434,"src":"5700:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5700:73:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":397,"id":403,"nodeType":"Return","src":"5693:80:3"}]},"documentation":{"id":389,"nodeType":"StructuredDocumentation","src":"5412:166:3","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":405,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nodeType":"FunctionDefinition","parameters":{"id":394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":391,"mutability":"mutable","name":"target","nodeType":"VariableDeclaration","scope":405,"src":"5611:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":390,"name":"address","nodeType":"ElementaryTypeName","src":"5611:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":393,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":405,"src":"5627:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":392,"name":"bytes","nodeType":"ElementaryTypeName","src":"5627:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5610:35:3"},"returnParameters":{"id":397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":396,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":405,"src":"5669:12:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":395,"name":"bytes","nodeType":"ElementaryTypeName","src":"5669:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5668:14:3"},"scope":564,"src":"5583:197:3","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":433,"nodeType":"Block","src":"6122:168:3","statements":[{"assignments":[418,420],"declarations":[{"constant":false,"id":418,"mutability":"mutable","name":"success","nodeType":"VariableDeclaration","scope":433,"src":"6133:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":417,"name":"bool","nodeType":"ElementaryTypeName","src":"6133:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":420,"mutability":"mutable","name":"returndata","nodeType":"VariableDeclaration","scope":433,"src":"6147:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":419,"name":"bytes","nodeType":"ElementaryTypeName","src":"6147:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":425,"initialValue":{"arguments":[{"id":423,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":410,"src":"6192:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":421,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"6174:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"staticcall","nodeType":"MemberAccess","src":"6174:17:3","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6174:23:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6132:65:3"},{"expression":{"arguments":[{"id":427,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"6241:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":428,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":418,"src":"6249:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":429,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":420,"src":"6258:10:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":430,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":412,"src":"6270:12:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":426,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"6214:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6214:69:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":416,"id":432,"nodeType":"Return","src":"6207:76:3"}]},"documentation":{"id":406,"nodeType":"StructuredDocumentation","src":"5786:173:3","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":434,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nodeType":"FunctionDefinition","parameters":{"id":413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":408,"mutability":"mutable","name":"target","nodeType":"VariableDeclaration","scope":434,"src":"6001:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":407,"name":"address","nodeType":"ElementaryTypeName","src":"6001:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":410,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":434,"src":"6025:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":409,"name":"bytes","nodeType":"ElementaryTypeName","src":"6025:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":412,"mutability":"mutable","name":"errorMessage","nodeType":"VariableDeclaration","scope":434,"src":"6052:26:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":411,"name":"string","nodeType":"ElementaryTypeName","src":"6052:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5991:93:3"},"returnParameters":{"id":416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":415,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":434,"src":"6108:12:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":414,"name":"bytes","nodeType":"ElementaryTypeName","src":"6108:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6107:14:3"},"scope":564,"src":"5964:326:3","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":450,"nodeType":"Block","src":"6566:101:3","statements":[{"expression":{"arguments":[{"id":445,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":437,"src":"6604:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":446,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":439,"src":"6612:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6618:41:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":444,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[451,480],"referencedDeclaration":480,"src":"6583:20:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6583:77:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":443,"id":449,"nodeType":"Return","src":"6576:84:3"}]},"documentation":{"id":435,"nodeType":"StructuredDocumentation","src":"6296:168:3","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":451,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nodeType":"FunctionDefinition","parameters":{"id":440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":437,"mutability":"mutable","name":"target","nodeType":"VariableDeclaration","scope":451,"src":"6499:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":436,"name":"address","nodeType":"ElementaryTypeName","src":"6499:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":439,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":451,"src":"6515:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":438,"name":"bytes","nodeType":"ElementaryTypeName","src":"6515:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6498:35:3"},"returnParameters":{"id":443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":442,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":451,"src":"6552:12:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":441,"name":"bytes","nodeType":"ElementaryTypeName","src":"6552:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6551:14:3"},"scope":564,"src":"6469:198:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":479,"nodeType":"Block","src":"7008:170:3","statements":[{"assignments":[464,466],"declarations":[{"constant":false,"id":464,"mutability":"mutable","name":"success","nodeType":"VariableDeclaration","scope":479,"src":"7019:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":463,"name":"bool","nodeType":"ElementaryTypeName","src":"7019:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":466,"mutability":"mutable","name":"returndata","nodeType":"VariableDeclaration","scope":479,"src":"7033:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":465,"name":"bytes","nodeType":"ElementaryTypeName","src":"7033:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":471,"initialValue":{"arguments":[{"id":469,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":456,"src":"7080:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":467,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":454,"src":"7060:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"delegatecall","nodeType":"MemberAccess","src":"7060:19:3","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7060:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7018:67:3"},{"expression":{"arguments":[{"id":473,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":454,"src":"7129:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":474,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":464,"src":"7137:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":475,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":466,"src":"7146:10:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":476,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":458,"src":"7158:12:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":472,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"7102:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7102:69:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":462,"id":478,"nodeType":"Return","src":"7095:76:3"}]},"documentation":{"id":452,"nodeType":"StructuredDocumentation","src":"6673:175:3","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":480,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nodeType":"FunctionDefinition","parameters":{"id":459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":454,"mutability":"mutable","name":"target","nodeType":"VariableDeclaration","scope":480,"src":"6892:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":453,"name":"address","nodeType":"ElementaryTypeName","src":"6892:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":456,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":480,"src":"6916:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":455,"name":"bytes","nodeType":"ElementaryTypeName","src":"6916:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":458,"mutability":"mutable","name":"errorMessage","nodeType":"VariableDeclaration","scope":480,"src":"6943:26:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":457,"name":"string","nodeType":"ElementaryTypeName","src":"6943:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6882:93:3"},"returnParameters":{"id":462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":461,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":480,"src":"6994:12:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":460,"name":"bytes","nodeType":"ElementaryTypeName","src":"6994:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6993:14:3"},"scope":564,"src":"6853:325:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":518,"nodeType":"Block","src":"7660:434:3","statements":[{"condition":{"id":494,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"7674:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":516,"nodeType":"Block","src":"8030:58:3","statements":[{"expression":{"arguments":[{"id":512,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":487,"src":"8052:10:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":513,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"8064:12:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":511,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":563,"src":"8044:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8044:33:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":515,"nodeType":"ExpressionStatement","src":"8044:33:3"}]},"id":517,"nodeType":"IfStatement","src":"7670:418:3","trueBody":{"id":510,"nodeType":"Block","src":"7683:341:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":495,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":487,"src":"7701:10:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"7701:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7722:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7701:22:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":507,"nodeType":"IfStatement","src":"7697:286:3","trueBody":{"id":506,"nodeType":"Block","src":"7725:258:3","statements":[{"expression":{"arguments":[{"arguments":[{"id":501,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":483,"src":"7927:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":500,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":252,"src":"7916:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7916:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7936:31:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":499,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7908:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7908:60:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":505,"nodeType":"ExpressionStatement","src":"7908:60:3"}]}},{"expression":{"id":508,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":487,"src":"8003:10:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":493,"id":509,"nodeType":"Return","src":"7996:17:3"}]}}]},"documentation":{"id":481,"nodeType":"StructuredDocumentation","src":"7184:277:3","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":519,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nodeType":"FunctionDefinition","parameters":{"id":490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":483,"mutability":"mutable","name":"target","nodeType":"VariableDeclaration","scope":519,"src":"7511:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":482,"name":"address","nodeType":"ElementaryTypeName","src":"7511:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":485,"mutability":"mutable","name":"success","nodeType":"VariableDeclaration","scope":519,"src":"7535:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":484,"name":"bool","nodeType":"ElementaryTypeName","src":"7535:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":487,"mutability":"mutable","name":"returndata","nodeType":"VariableDeclaration","scope":519,"src":"7557:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":486,"name":"bytes","nodeType":"ElementaryTypeName","src":"7557:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":489,"mutability":"mutable","name":"errorMessage","nodeType":"VariableDeclaration","scope":519,"src":"7590:26:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":488,"name":"string","nodeType":"ElementaryTypeName","src":"7590:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7501:121:3"},"returnParameters":{"id":493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":492,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":519,"src":"7646:12:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":491,"name":"bytes","nodeType":"ElementaryTypeName","src":"7646:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7645:14:3"},"scope":564,"src":"7466:628:3","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":542,"nodeType":"Block","src":"8475:135:3","statements":[{"condition":{"id":531,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"8489:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":540,"nodeType":"Block","src":"8546:58:3","statements":[{"expression":{"arguments":[{"id":536,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":524,"src":"8568:10:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":537,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":526,"src":"8580:12:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":535,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":563,"src":"8560:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8560:33:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":539,"nodeType":"ExpressionStatement","src":"8560:33:3"}]},"id":541,"nodeType":"IfStatement","src":"8485:119:3","trueBody":{"id":534,"nodeType":"Block","src":"8498:42:3","statements":[{"expression":{"id":532,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":524,"src":"8519:10:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":530,"id":533,"nodeType":"Return","src":"8512:17:3"}]}}]},"documentation":{"id":520,"nodeType":"StructuredDocumentation","src":"8100:210:3","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":543,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nodeType":"FunctionDefinition","parameters":{"id":527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":522,"mutability":"mutable","name":"success","nodeType":"VariableDeclaration","scope":543,"src":"8350:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":521,"name":"bool","nodeType":"ElementaryTypeName","src":"8350:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":524,"mutability":"mutable","name":"returndata","nodeType":"VariableDeclaration","scope":543,"src":"8372:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":523,"name":"bytes","nodeType":"ElementaryTypeName","src":"8372:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":526,"mutability":"mutable","name":"errorMessage","nodeType":"VariableDeclaration","scope":543,"src":"8405:26:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":525,"name":"string","nodeType":"ElementaryTypeName","src":"8405:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8340:97:3"},"returnParameters":{"id":530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":529,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":543,"src":"8461:12:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":528,"name":"bytes","nodeType":"ElementaryTypeName","src":"8461:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8460:14:3"},"scope":564,"src":"8315:295:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":562,"nodeType":"Block","src":"8699:457:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":550,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":545,"src":"8775:10:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"8775:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8795:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8775:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":560,"nodeType":"Block","src":"9105:45:3","statements":[{"expression":{"arguments":[{"id":557,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"9126:12:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":556,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9119:6:3","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9119:20:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":559,"nodeType":"ExpressionStatement","src":"9119:20:3"}]},"id":561,"nodeType":"IfStatement","src":"8771:379:3","trueBody":{"id":555,"nodeType":"Block","src":"8798:301:3","statements":[{"AST":{"nodeType":"YulBlock","src":"8956:133:3","statements":[{"nodeType":"YulVariableDeclaration","src":"8974:40:3","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"9003:10:3"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8997:5:3"},"nodeType":"YulFunctionCall","src":"8997:17:3"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"8978:15:3","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9042:2:3","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"9046:10:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9038:3:3"},"nodeType":"YulFunctionCall","src":"9038:19:3"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"9059:15:3"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9031:6:3"},"nodeType":"YulFunctionCall","src":"9031:44:3"},"nodeType":"YulExpressionStatement","src":"9031:44:3"}]},"evmVersion":"istanbul","externalReferences":[{"declaration":545,"isOffset":false,"isSlot":false,"src":"9003:10:3","valueSize":1},{"declaration":545,"isOffset":false,"isSlot":false,"src":"9046:10:3","valueSize":1}],"id":554,"nodeType":"InlineAssembly","src":"8947:142:3"}]}}]},"id":563,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nodeType":"FunctionDefinition","parameters":{"id":548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":545,"mutability":"mutable","name":"returndata","nodeType":"VariableDeclaration","scope":563,"src":"8633:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":544,"name":"bytes","nodeType":"ElementaryTypeName","src":"8633:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":547,"mutability":"mutable","name":"errorMessage","nodeType":"VariableDeclaration","scope":563,"src":"8658:26:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":546,"name":"string","nodeType":"ElementaryTypeName","src":"8658:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8632:53:3"},"returnParameters":{"id":549,"nodeType":"ParameterList","parameters":[],"src":"8699:0:3"},"scope":564,"src":"8616:540:3","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":565,"src":"194:8964:3"}],"src":"101:9058:3"},"id":3},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[586]},"id":587,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":566,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:4"},{"abstract":true,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":{"id":567,"nodeType":"StructuredDocumentation","src":"111:496:4","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":586,"linearizedBaseContracts":[586],"name":"Context","nodeType":"ContractDefinition","nodes":[{"body":{"id":575,"nodeType":"Block","src":"702:34:4","statements":[{"expression":{"expression":{"id":572,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"719:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":571,"id":574,"nodeType":"Return","src":"712:17:4"}]},"id":576,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nodeType":"FunctionDefinition","parameters":{"id":568,"nodeType":"ParameterList","parameters":[],"src":"659:2:4"},"returnParameters":{"id":571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":570,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":576,"src":"693:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":569,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:4"},"scope":586,"src":"640:96:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":584,"nodeType":"Block","src":"809:32:4","statements":[{"expression":{"expression":{"id":581,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","src":"826:8:4","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":580,"id":583,"nodeType":"Return","src":"819:15:4"}]},"id":585,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nodeType":"FunctionDefinition","parameters":{"id":577,"nodeType":"ParameterList","parameters":[],"src":"759:2:4"},"returnParameters":{"id":580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":579,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":585,"src":"793:14:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":578,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:4"},"scope":586,"src":"742:99:4","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":587,"src":"608:235:4"}],"src":"86:758:4"},"id":4},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[2070],"Strings":[761]},"id":762,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":588,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:5"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":589,"nodeType":"ImportDirective","scope":762,"sourceUnit":2071,"src":"126:25:5","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":590,"nodeType":"StructuredDocumentation","src":"153:34:5","text":" @dev String operations."},"fullyImplemented":true,"id":761,"linearizedBaseContracts":[761],"name":"Strings","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":593,"mutability":"constant","name":"_SYMBOLS","nodeType":"VariableDeclaration","scope":761,"src":"210:54:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":591,"name":"bytes16","nodeType":"ElementaryTypeName","src":"210:7:5","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"246:18:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":596,"mutability":"constant","name":"_ADDRESS_LENGTH","nodeType":"VariableDeclaration","scope":761,"src":"270:43:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":594,"name":"uint8","nodeType":"ElementaryTypeName","src":"270:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"311:2:5","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"body":{"id":643,"nodeType":"Block","src":"486:625:5","statements":[{"id":642,"nodeType":"UncheckedBlock","src":"496:609:5","statements":[{"assignments":[605],"declarations":[{"constant":false,"id":605,"mutability":"mutable","name":"length","nodeType":"VariableDeclaration","scope":642,"src":"520:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":604,"name":"uint256","nodeType":"ElementaryTypeName","src":"520:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":612,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":608,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":599,"src":"548:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":606,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2070,"src":"537:4:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$2070_$","typeString":"type(library Math)"}},"id":607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":1907,"src":"537:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"537:17:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"557:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"537:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"520:38:5"},{"assignments":[614],"declarations":[{"constant":false,"id":614,"mutability":"mutable","name":"buffer","nodeType":"VariableDeclaration","scope":642,"src":"572:20:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":613,"name":"string","nodeType":"ElementaryTypeName","src":"572:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":619,"initialValue":{"arguments":[{"id":617,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"606:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":616,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"595:10:5","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":615,"name":"string","nodeType":"ElementaryTypeName","src":"599:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"595:18:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"572:41:5"},{"assignments":[621],"declarations":[{"constant":false,"id":621,"mutability":"mutable","name":"ptr","nodeType":"VariableDeclaration","scope":642,"src":"627:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":620,"name":"uint256","nodeType":"ElementaryTypeName","src":"627:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":622,"nodeType":"VariableDeclarationStatement","src":"627:11:5"},{"AST":{"nodeType":"YulBlock","src":"708:67:5","statements":[{"nodeType":"YulAssignment","src":"726:35:5","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"737:6:5"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"749:2:5","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"753:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"745:3:5"},"nodeType":"YulFunctionCall","src":"745:15:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"733:3:5"},"nodeType":"YulFunctionCall","src":"733:28:5"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"726:3:5"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":614,"isOffset":false,"isSlot":false,"src":"737:6:5","valueSize":1},{"declaration":605,"isOffset":false,"isSlot":false,"src":"753:6:5","valueSize":1},{"declaration":621,"isOffset":false,"isSlot":false,"src":"726:3:5","valueSize":1}],"id":623,"nodeType":"InlineAssembly","src":"699:76:5"},{"body":{"id":638,"nodeType":"Block","src":"801:267:5","statements":[{"expression":{"id":626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"819:5:5","subExpression":{"id":625,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":621,"src":"819:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":627,"nodeType":"ExpressionStatement","src":"819:5:5"},{"AST":{"nodeType":"YulBlock","src":"902:84:5","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"932:3:5"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"946:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"953:2:5","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"942:3:5"},"nodeType":"YulFunctionCall","src":"942:14:5"},{"name":"_SYMBOLS","nodeType":"YulIdentifier","src":"958:8:5"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"937:4:5"},"nodeType":"YulFunctionCall","src":"937:30:5"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"924:7:5"},"nodeType":"YulFunctionCall","src":"924:44:5"},"nodeType":"YulExpressionStatement","src":"924:44:5"}]},"evmVersion":"istanbul","externalReferences":[{"declaration":593,"isOffset":false,"isSlot":false,"src":"958:8:5","valueSize":1},{"declaration":621,"isOffset":false,"isSlot":false,"src":"932:3:5","valueSize":1},{"declaration":599,"isOffset":false,"isSlot":false,"src":"946:5:5","valueSize":1}],"id":628,"nodeType":"InlineAssembly","src":"893:93:5"},{"expression":{"id":631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":629,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":599,"src":"1003:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1012:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1003:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":632,"nodeType":"ExpressionStatement","src":"1003:11:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":633,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":599,"src":"1036:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1045:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1036:10:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":637,"nodeType":"IfStatement","src":"1032:21:5","trueBody":{"id":636,"nodeType":"Break","src":"1048:5:5"}}]},"condition":{"hexValue":"74727565","id":624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"795:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":639,"nodeType":"WhileStatement","src":"788:280:5"},{"expression":{"id":640,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":614,"src":"1088:6:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":603,"id":641,"nodeType":"Return","src":"1081:13:5"}]}]},"documentation":{"id":597,"nodeType":"StructuredDocumentation","src":"320:90:5","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":644,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nodeType":"FunctionDefinition","parameters":{"id":600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":599,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":644,"src":"433:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":598,"name":"uint256","nodeType":"ElementaryTypeName","src":"433:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"432:15:5"},"returnParameters":{"id":603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":602,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":644,"src":"471:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":601,"name":"string","nodeType":"ElementaryTypeName","src":"471:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"470:15:5"},"scope":761,"src":"415:696:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":663,"nodeType":"Block","src":"1290:100:5","statements":[{"id":662,"nodeType":"UncheckedBlock","src":"1300:84:5","statements":[{"expression":{"arguments":[{"id":653,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":647,"src":"1343:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":656,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":647,"src":"1362:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":654,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2070,"src":"1350:4:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$2070_$","typeString":"type(library Math)"}},"id":655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":2030,"src":"1350:11:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1350:18:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1371:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1350:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":652,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[664,740,760],"referencedDeclaration":740,"src":"1331:11:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1331:42:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":651,"id":661,"nodeType":"Return","src":"1324:49:5"}]}]},"documentation":{"id":645,"nodeType":"StructuredDocumentation","src":"1117:94:5","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":664,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nodeType":"FunctionDefinition","parameters":{"id":648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":647,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":664,"src":"1237:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":646,"name":"uint256","nodeType":"ElementaryTypeName","src":"1237:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1236:15:5"},"returnParameters":{"id":651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":650,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":664,"src":"1275:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":649,"name":"string","nodeType":"ElementaryTypeName","src":"1275:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1274:15:5"},"scope":761,"src":"1216:174:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":739,"nodeType":"Block","src":"1603:347:5","statements":[{"assignments":[675],"declarations":[{"constant":false,"id":675,"mutability":"mutable","name":"buffer","nodeType":"VariableDeclaration","scope":739,"src":"1613:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":674,"name":"bytes","nodeType":"ElementaryTypeName","src":"1613:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":684,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1645:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":679,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":669,"src":"1649:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1645:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1658:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1645:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":677,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1635:9:5","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":676,"name":"bytes","nodeType":"ElementaryTypeName","src":"1639:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1635:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1613:47:5"},{"expression":{"id":689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":685,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":675,"src":"1670:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":687,"indexExpression":{"hexValue":"30","id":686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1670:9:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1682:3:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"1670:15:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":690,"nodeType":"ExpressionStatement","src":"1670:15:5"},{"expression":{"id":695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":691,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":675,"src":"1695:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":693,"indexExpression":{"hexValue":"31","id":692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1702:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1695:9:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1707:3:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"1695:15:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":696,"nodeType":"ExpressionStatement","src":"1695:15:5"},{"body":{"id":725,"nodeType":"Block","src":"1765:83:5","statements":[{"expression":{"id":719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":711,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":675,"src":"1779:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":713,"indexExpression":{"id":712,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":698,"src":"1786:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1779:9:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":714,"name":"_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"1791:8:5","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":718,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":715,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":667,"src":"1800:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1808:3:5","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"1800:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1791:21:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"1779:33:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":720,"nodeType":"ExpressionStatement","src":"1779:33:5"},{"expression":{"id":723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":721,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":667,"src":"1826:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1836:1:5","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"1826:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":724,"nodeType":"ExpressionStatement","src":"1826:11:5"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":705,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":698,"src":"1753:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1757:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1753:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":726,"initializationExpression":{"assignments":[698],"declarations":[{"constant":false,"id":698,"mutability":"mutable","name":"i","nodeType":"VariableDeclaration","scope":726,"src":"1725:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":697,"name":"uint256","nodeType":"ElementaryTypeName","src":"1725:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":704,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1737:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":700,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":669,"src":"1741:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1737:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1750:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1737:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1725:26:5"},"loopExpression":{"expression":{"id":709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"1760:3:5","subExpression":{"id":708,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":698,"src":"1762:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":710,"nodeType":"ExpressionStatement","src":"1760:3:5"},"nodeType":"ForStatement","src":"1720:128:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":728,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":667,"src":"1865:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1874:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1865:10:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1877:34:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":727,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1857:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1857:55:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":733,"nodeType":"ExpressionStatement","src":"1857:55:5"},{"expression":{"arguments":[{"id":736,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":675,"src":"1936:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":735,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1929:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":734,"name":"string","nodeType":"ElementaryTypeName","src":"1929:6:5","typeDescriptions":{}}},"id":737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1929:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":673,"id":738,"nodeType":"Return","src":"1922:21:5"}]},"documentation":{"id":665,"nodeType":"StructuredDocumentation","src":"1396:112:5","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":740,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nodeType":"FunctionDefinition","parameters":{"id":670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":667,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":740,"src":"1534:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":666,"name":"uint256","nodeType":"ElementaryTypeName","src":"1534:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":669,"mutability":"mutable","name":"length","nodeType":"VariableDeclaration","scope":740,"src":"1549:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":668,"name":"uint256","nodeType":"ElementaryTypeName","src":"1549:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1533:31:5"},"returnParameters":{"id":673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":672,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":740,"src":"1588:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":671,"name":"string","nodeType":"ElementaryTypeName","src":"1588:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1587:15:5"},"scope":761,"src":"1513:437:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":759,"nodeType":"Block","src":"2175:76:5","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":753,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":743,"src":"2220:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":752,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2212:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":751,"name":"uint160","nodeType":"ElementaryTypeName","src":"2212:7:5","typeDescriptions":{}}},"id":754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2212:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":750,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2204:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":749,"name":"uint256","nodeType":"ElementaryTypeName","src":"2204:7:5","typeDescriptions":{}}},"id":755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2204:22:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":756,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":596,"src":"2228:15:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":748,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[664,740,760],"referencedDeclaration":740,"src":"2192:11:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2192:52:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":747,"id":758,"nodeType":"Return","src":"2185:59:5"}]},"documentation":{"id":741,"nodeType":"StructuredDocumentation","src":"1956:141:5","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"id":760,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nodeType":"FunctionDefinition","parameters":{"id":744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":743,"mutability":"mutable","name":"addr","nodeType":"VariableDeclaration","scope":760,"src":"2123:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":742,"name":"address","nodeType":"ElementaryTypeName","src":"2123:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2122:14:5"},"returnParameters":{"id":747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":746,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":760,"src":"2160:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":745,"name":"string","nodeType":"ElementaryTypeName","src":"2160:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2159:15:5"},"scope":761,"src":"2102:149:5","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":762,"src":"188:2065:5"}],"src":"101:2153:5"},"id":5},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[1122],"Math":[2070],"Strings":[761]},"id":1123,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":763,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:6"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":764,"nodeType":"ImportDirective","scope":1123,"sourceUnit":762,"src":"137:24:6","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":765,"nodeType":"StructuredDocumentation","src":"163:205:6","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":1122,"linearizedBaseContracts":[1122],"name":"ECDSA","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":771,"members":[{"id":766,"name":"NoError","nodeType":"EnumValue","src":"417:7:6"},{"id":767,"name":"InvalidSignature","nodeType":"EnumValue","src":"434:16:6"},{"id":768,"name":"InvalidSignatureLength","nodeType":"EnumValue","src":"460:22:6"},{"id":769,"name":"InvalidSignatureS","nodeType":"EnumValue","src":"492:17:6"},{"id":770,"name":"InvalidSignatureV","nodeType":"EnumValue","src":"519:17:6"}],"name":"RecoverError","nodeType":"EnumDefinition","src":"389:175:6"},{"body":{"id":814,"nodeType":"Block","src":"624:457:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$771","typeString":"enum ECDSA.RecoverError"},"id":780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":777,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":774,"src":"638:5:6","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$771","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":778,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":771,"src":"647:12:6","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$771_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":779,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"NoError","nodeType":"MemberAccess","src":"647:20:6","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$771","typeString":"enum ECDSA.RecoverError"}},"src":"638:29:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$771","typeString":"enum ECDSA.RecoverError"},"id":786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":783,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":774,"src":"734:5:6","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$771","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":784,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":771,"src":"743:12:6","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$771_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":785,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignature","nodeType":"MemberAccess","src":"743:29:6","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$771","typeString":"enum ECDSA.RecoverError"}},"src":"734:38:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$771","typeString":"enum ECDSA.RecoverError"},"id":795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":792,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":774,"src":"843:5:6","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$771","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":793,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":771,"src":"852:12:6","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$771_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":794,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignatureLength","nodeType":"MemberAccess","src":"852:35:6","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$771","typeString":"enum ECDSA.RecoverError"}},"src":"843:44:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$771","typeString":"enum ECDSA.RecoverError"},"id":804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":801,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":774,"src":"965:5:6","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$771","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":802,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":771,"src":"974:12:6","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$771_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":803,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignatureS","nodeType":"MemberAccess","src":"974:30:6","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$771","typeString":"enum ECDSA.RecoverError"}},"src":"965:39:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":810,"nodeType":"IfStatement","src":"961:114:6","trueBody":{"id":809,"nodeType":"Block","src":"1006:69:6","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265202773272076616c7565","id":806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1027:36:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","typeString":"literal_string \"ECDSA: invalid signature 's' value\""},"value":"ECDSA: invalid signature 's' value"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","typeString":"literal_string \"ECDSA: invalid signature 's' value\""}],"id":805,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"1020:6:6","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1020:44:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":808,"nodeType":"ExpressionStatement","src":"1020:44:6"}]}},"id":811,"nodeType":"IfStatement","src":"839:236:6","trueBody":{"id":800,"nodeType":"Block","src":"889:66:6","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265206c656e677468","id":797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"910:33:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","typeString":"literal_string \"ECDSA: invalid signature length\""},"value":"ECDSA: invalid signature length"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","typeString":"literal_string \"ECDSA: invalid signature length\""}],"id":796,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"903:6:6","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"903:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":799,"nodeType":"ExpressionStatement","src":"903:41:6"}]}},"id":812,"nodeType":"IfStatement","src":"730:345:6","trueBody":{"id":791,"nodeType":"Block","src":"774:59:6","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265","id":788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"795:26:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","typeString":"literal_string \"ECDSA: invalid signature\""},"value":"ECDSA: invalid signature"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","typeString":"literal_string \"ECDSA: invalid signature\""}],"id":787,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"788:6:6","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"788:34:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":790,"nodeType":"ExpressionStatement","src":"788:34:6"}]}},"id":813,"nodeType":"IfStatement","src":"634:441:6","trueBody":{"id":782,"nodeType":"Block","src":"669:55:6","statements":[{"functionReturnParameters":776,"id":781,"nodeType":"Return","src":"683:7:6"}]}}]},"id":815,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nodeType":"FunctionDefinition","parameters":{"id":775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":774,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","scope":815,"src":"591:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$771","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":773,"nodeType":"UserDefinedTypeName","pathNode":{"id":772,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":771,"src":"591:12:6"},"referencedDeclaration":771,"src":"591:12:6","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$771","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"590:20:6"},"returnParameters":{"id":776,"nodeType":"ParameterList","parameters":[],"src":"624:0:6"},"scope":1122,"src":"570:511:6","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":860,"nodeType":"Block","src":"2249:626:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":828,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":820,"src":"2263:9:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2263:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":830,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2283:2:6","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2263:22:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":858,"nodeType":"Block","src":"2788:81:6","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2818:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":851,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2810:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":850,"name":"address","nodeType":"ElementaryTypeName","src":"2810:7:6","typeDescriptions":{}}},"id":853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2810:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":854,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":771,"src":"2822:12:6","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$771_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":855,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignatureLength","nodeType":"MemberAccess","src":"2822:35:6","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$771","typeString":"enum ECDSA.RecoverError"}}],"id":856,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2809:49:6","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$771_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":827,"id":857,"nodeType":"Return","src":"2802:56:6"}]},"id":859,"nodeType":"IfStatement","src":"2259:610:6","trueBody":{"id":849,"nodeType":"Block","src":"2287:495:6","statements":[{"assignments":[833],"declarations":[{"constant":false,"id":833,"mutability":"mutable","name":"r","nodeType":"VariableDeclaration","scope":849,"src":"2301:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":832,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2301:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":834,"nodeType":"VariableDeclarationStatement","src":"2301:9:6"},{"assignments":[836],"declarations":[{"constant":false,"id":836,"mutability":"mutable","name":"s","nodeType":"VariableDeclaration","scope":849,"src":"2324:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":835,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2324:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":837,"nodeType":"VariableDeclarationStatement","src":"2324:9:6"},{"assignments":[839],"declarations":[{"constant":false,"id":839,"mutability":"mutable","name":"v","nodeType":"VariableDeclaration","scope":849,"src":"2347:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":838,"name":"uint8","nodeType":"ElementaryTypeName","src":"2347:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":840,"nodeType":"VariableDeclarationStatement","src":"2347:7:6"},{"AST":{"nodeType":"YulBlock","src":"2555:171:6","statements":[{"nodeType":"YulAssignment","src":"2573:32:6","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2588:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"2599:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2584:3:6"},"nodeType":"YulFunctionCall","src":"2584:20:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2578:5:6"},"nodeType":"YulFunctionCall","src":"2578:27:6"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"2573:1:6"}]},{"nodeType":"YulAssignment","src":"2622:32:6","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2637:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"2648:4:6","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2633:3:6"},"nodeType":"YulFunctionCall","src":"2633:20:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2627:5:6"},"nodeType":"YulFunctionCall","src":"2627:27:6"},"variableNames":[{"name":"s","nodeType":"YulIdentifier","src":"2622:1:6"}]},{"nodeType":"YulAssignment","src":"2671:41:6","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2681:1:6","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2694:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"2705:4:6","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2690:3:6"},"nodeType":"YulFunctionCall","src":"2690:20:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2684:5:6"},"nodeType":"YulFunctionCall","src":"2684:27:6"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"2676:4:6"},"nodeType":"YulFunctionCall","src":"2676:36:6"},"variableNames":[{"name":"v","nodeType":"YulIdentifier","src":"2671:1:6"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":833,"isOffset":false,"isSlot":false,"src":"2573:1:6","valueSize":1},{"declaration":836,"isOffset":false,"isSlot":false,"src":"2622:1:6","valueSize":1},{"declaration":820,"isOffset":false,"isSlot":false,"src":"2588:9:6","valueSize":1},{"declaration":820,"isOffset":false,"isSlot":false,"src":"2637:9:6","valueSize":1},{"declaration":820,"isOffset":false,"isSlot":false,"src":"2694:9:6","valueSize":1},{"declaration":839,"isOffset":false,"isSlot":false,"src":"2671:1:6","valueSize":1}],"id":841,"nodeType":"InlineAssembly","src":"2546:180:6"},{"expression":{"arguments":[{"id":843,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":818,"src":"2757:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":844,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"2763:1:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":845,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":833,"src":"2766:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":846,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":836,"src":"2769:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":842,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[861,935,1029],"referencedDeclaration":1029,"src":"2746:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$771_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2746:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$771_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":827,"id":848,"nodeType":"Return","src":"2739:32:6"}]}}]},"documentation":{"id":816,"nodeType":"StructuredDocumentation","src":"1087:1053:6","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature` or error string. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n _Available since v4.3._"},"id":861,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nodeType":"FunctionDefinition","parameters":{"id":821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":818,"mutability":"mutable","name":"hash","nodeType":"VariableDeclaration","scope":861,"src":"2165:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":817,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2165:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":820,"mutability":"mutable","name":"signature","nodeType":"VariableDeclaration","scope":861,"src":"2179:22:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":819,"name":"bytes","nodeType":"ElementaryTypeName","src":"2179:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2164:38:6"},"returnParameters":{"id":827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":823,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":861,"src":"2226:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":822,"name":"address","nodeType":"ElementaryTypeName","src":"2226:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":826,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":861,"src":"2235:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$771","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":825,"nodeType":"UserDefinedTypeName","pathNode":{"id":824,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":771,"src":"2235:12:6"},"referencedDeclaration":771,"src":"2235:12:6","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$771","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"2225:23:6"},"scope":1122,"src":"2145:730:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":887,"nodeType":"Block","src":"3748:140:6","statements":[{"assignments":[872,875],"declarations":[{"constant":false,"id":872,"mutability":"mutable","name":"recovered","nodeType":"VariableDeclaration","scope":887,"src":"3759:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":871,"name":"address","nodeType":"ElementaryTypeName","src":"3759:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":875,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","scope":887,"src":"3778:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$771","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":874,"nodeType":"UserDefinedTypeName","pathNode":{"id":873,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":771,"src":"3778:12:6"},"referencedDeclaration":771,"src":"3778:12:6","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$771","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":880,"initialValue":{"arguments":[{"id":877,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":864,"src":"3811:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":878,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":866,"src":"3817:9:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":876,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[861,935,1029],"referencedDeclaration":861,"src":"3800:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$771_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError)"}},"id":879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3800:27:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$771_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"3758:69:6"},{"expression":{"arguments":[{"id":882,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":875,"src":"3849:5:6","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$771","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$771","typeString":"enum ECDSA.RecoverError"}],"id":881,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":815,"src":"3837:11:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$771_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3837:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":884,"nodeType":"ExpressionStatement","src":"3837:18:6"},{"expression":{"id":885,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":872,"src":"3872:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":870,"id":886,"nodeType":"Return","src":"3865:16:6"}]},"documentation":{"id":862,"nodeType":"StructuredDocumentation","src":"2881:775:6","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it."},"id":888,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nodeType":"FunctionDefinition","parameters":{"id":867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":864,"mutability":"mutable","name":"hash","nodeType":"VariableDeclaration","scope":888,"src":"3678:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":863,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3678:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":866,"mutability":"mutable","name":"signature","nodeType":"VariableDeclaration","scope":888,"src":"3692:22:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":865,"name":"bytes","nodeType":"ElementaryTypeName","src":"3692:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3677:38:6"},"returnParameters":{"id":870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":869,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":888,"src":"3739:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":868,"name":"address","nodeType":"ElementaryTypeName","src":"3739:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3738:9:6"},"scope":1122,"src":"3661:227:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":934,"nodeType":"Block","src":"4275:203:6","statements":[{"assignments":[904],"declarations":[{"constant":false,"id":904,"mutability":"mutable","name":"s","nodeType":"VariableDeclaration","scope":934,"src":"4285:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":903,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4285:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":911,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":905,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":895,"src":"4297:2:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4310:66:6","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":907,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4302:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":906,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4302:7:6","typeDescriptions":{}}},"id":909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4302:75:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4297:80:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4285:92:6"},{"assignments":[913],"declarations":[{"constant":false,"id":913,"mutability":"mutable","name":"v","nodeType":"VariableDeclaration","scope":934,"src":"4387:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":912,"name":"uint8","nodeType":"ElementaryTypeName","src":"4387:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":926,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":918,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":895,"src":"4412:2:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":917,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4404:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":916,"name":"uint256","nodeType":"ElementaryTypeName","src":"4404:7:6","typeDescriptions":{}}},"id":919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4404:11:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4419:3:6","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4404:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":922,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4403:20:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4426:2:6","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4403:25:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":915,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4397:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":914,"name":"uint8","nodeType":"ElementaryTypeName","src":"4397:5:6","typeDescriptions":{}}},"id":925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4397:32:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4387:42:6"},{"expression":{"arguments":[{"id":928,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":891,"src":"4457:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":929,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":913,"src":"4463:1:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":930,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":893,"src":"4466:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":931,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":904,"src":"4469:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":927,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[861,935,1029],"referencedDeclaration":1029,"src":"4446:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$771_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4446:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$771_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":902,"id":933,"nodeType":"Return","src":"4439:32:6"}]},"documentation":{"id":889,"nodeType":"StructuredDocumentation","src":"3894:243:6","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n _Available since v4.3._"},"id":935,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nodeType":"FunctionDefinition","parameters":{"id":896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":891,"mutability":"mutable","name":"hash","nodeType":"VariableDeclaration","scope":935,"src":"4171:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":890,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4171:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":893,"mutability":"mutable","name":"r","nodeType":"VariableDeclaration","scope":935,"src":"4193:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":892,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4193:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":895,"mutability":"mutable","name":"vs","nodeType":"VariableDeclaration","scope":935,"src":"4212:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":894,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4212:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4161:67:6"},"returnParameters":{"id":902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":898,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":935,"src":"4252:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":897,"name":"address","nodeType":"ElementaryTypeName","src":"4252:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":901,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":935,"src":"4261:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$771","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":900,"nodeType":"UserDefinedTypeName","pathNode":{"id":899,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":771,"src":"4261:12:6"},"referencedDeclaration":771,"src":"4261:12:6","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$771","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"4251:23:6"},"scope":1122,"src":"4142:336:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":964,"nodeType":"Block","src":"4759:136:6","statements":[{"assignments":[948,951],"declarations":[{"constant":false,"id":948,"mutability":"mutable","name":"recovered","nodeType":"VariableDeclaration","scope":964,"src":"4770:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":947,"name":"address","nodeType":"ElementaryTypeName","src":"4770:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":951,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","scope":964,"src":"4789:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$771","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":950,"nodeType":"UserDefinedTypeName","pathNode":{"id":949,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":771,"src":"4789:12:6"},"referencedDeclaration":771,"src":"4789:12:6","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$771","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":957,"initialValue":{"arguments":[{"id":953,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":938,"src":"4822:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":954,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":940,"src":"4828:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":955,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":942,"src":"4831:2:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":952,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[861,935,1029],"referencedDeclaration":935,"src":"4811:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$771_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4811:23:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$771_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"4769:65:6"},{"expression":{"arguments":[{"id":959,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":951,"src":"4856:5:6","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$771","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$771","typeString":"enum ECDSA.RecoverError"}],"id":958,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":815,"src":"4844:11:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$771_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4844:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":961,"nodeType":"ExpressionStatement","src":"4844:18:6"},{"expression":{"id":962,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":948,"src":"4879:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":946,"id":963,"nodeType":"Return","src":"4872:16:6"}]},"documentation":{"id":936,"nodeType":"StructuredDocumentation","src":"4484:154:6","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n _Available since v4.2._"},"id":965,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nodeType":"FunctionDefinition","parameters":{"id":943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":938,"mutability":"mutable","name":"hash","nodeType":"VariableDeclaration","scope":965,"src":"4669:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":937,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4669:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":940,"mutability":"mutable","name":"r","nodeType":"VariableDeclaration","scope":965,"src":"4691:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":939,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4691:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":942,"mutability":"mutable","name":"vs","nodeType":"VariableDeclaration","scope":965,"src":"4710:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":941,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4710:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4659:67:6"},"returnParameters":{"id":946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":945,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":965,"src":"4750:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":944,"name":"address","nodeType":"ElementaryTypeName","src":"4750:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4749:9:6"},"scope":1122,"src":"4643:252:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1028,"nodeType":"Block","src":"5218:1345:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":984,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":974,"src":"6114:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":983,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6106:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":982,"name":"uint256","nodeType":"ElementaryTypeName","src":"6106:7:6","typeDescriptions":{}}},"id":985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6106:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6119:66:6","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6106:79:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":997,"nodeType":"IfStatement","src":"6102:161:6","trueBody":{"id":996,"nodeType":"Block","src":"6187:76:6","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6217:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":989,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6209:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":988,"name":"address","nodeType":"ElementaryTypeName","src":"6209:7:6","typeDescriptions":{}}},"id":991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6209:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":992,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":771,"src":"6221:12:6","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$771_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":993,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignatureS","nodeType":"MemberAccess","src":"6221:30:6","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$771","typeString":"enum ECDSA.RecoverError"}}],"id":994,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6208:44:6","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$771_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":981,"id":995,"nodeType":"Return","src":"6201:51:6"}]}},{"assignments":[999],"declarations":[{"constant":false,"id":999,"mutability":"mutable","name":"signer","nodeType":"VariableDeclaration","scope":1028,"src":"6357:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":998,"name":"address","nodeType":"ElementaryTypeName","src":"6357:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1006,"initialValue":{"arguments":[{"id":1001,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":968,"src":"6384:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1002,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":970,"src":"6390:1:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1003,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":972,"src":"6393:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1004,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":974,"src":"6396:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1000,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6374:9:6","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":1005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6374:24:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6357:41:6"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1007,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":999,"src":"6412:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6430:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1009,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6422:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1008,"name":"address","nodeType":"ElementaryTypeName","src":"6422:7:6","typeDescriptions":{}}},"id":1011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6422:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6412:20:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1022,"nodeType":"IfStatement","src":"6408:101:6","trueBody":{"id":1021,"nodeType":"Block","src":"6434:75:6","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":1015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6464:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1014,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6456:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1013,"name":"address","nodeType":"ElementaryTypeName","src":"6456:7:6","typeDescriptions":{}}},"id":1016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6456:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1017,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":771,"src":"6468:12:6","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$771_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1018,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignature","nodeType":"MemberAccess","src":"6468:29:6","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$771","typeString":"enum ECDSA.RecoverError"}}],"id":1019,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6455:43:6","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$771_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":981,"id":1020,"nodeType":"Return","src":"6448:50:6"}]}},{"expression":{"components":[{"id":1023,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":999,"src":"6527:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1024,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":771,"src":"6535:12:6","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$771_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1025,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"NoError","nodeType":"MemberAccess","src":"6535:20:6","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$771","typeString":"enum ECDSA.RecoverError"}}],"id":1026,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6526:30:6","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$771_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":981,"id":1027,"nodeType":"Return","src":"6519:37:6"}]},"documentation":{"id":966,"nodeType":"StructuredDocumentation","src":"4901:163:6","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately.\n _Available since v4.3._"},"id":1029,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nodeType":"FunctionDefinition","parameters":{"id":975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":968,"mutability":"mutable","name":"hash","nodeType":"VariableDeclaration","scope":1029,"src":"5098:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":967,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5098:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":970,"mutability":"mutable","name":"v","nodeType":"VariableDeclaration","scope":1029,"src":"5120:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":969,"name":"uint8","nodeType":"ElementaryTypeName","src":"5120:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":972,"mutability":"mutable","name":"r","nodeType":"VariableDeclaration","scope":1029,"src":"5137:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":971,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5137:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":974,"mutability":"mutable","name":"s","nodeType":"VariableDeclaration","scope":1029,"src":"5156:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":973,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5156:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5088:83:6"},"returnParameters":{"id":981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":977,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1029,"src":"5195:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":976,"name":"address","nodeType":"ElementaryTypeName","src":"5195:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":980,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1029,"src":"5204:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$771","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":979,"nodeType":"UserDefinedTypeName","pathNode":{"id":978,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":771,"src":"5204:12:6"},"referencedDeclaration":771,"src":"5204:12:6","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$771","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"5194:23:6"},"scope":1122,"src":"5069:1494:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1061,"nodeType":"Block","src":"6828:138:6","statements":[{"assignments":[1044,1047],"declarations":[{"constant":false,"id":1044,"mutability":"mutable","name":"recovered","nodeType":"VariableDeclaration","scope":1061,"src":"6839:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1043,"name":"address","nodeType":"ElementaryTypeName","src":"6839:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1047,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","scope":1061,"src":"6858:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$771","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1046,"nodeType":"UserDefinedTypeName","pathNode":{"id":1045,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":771,"src":"6858:12:6"},"referencedDeclaration":771,"src":"6858:12:6","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$771","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":1054,"initialValue":{"arguments":[{"id":1049,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1032,"src":"6891:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1050,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1034,"src":"6897:1:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1051,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1036,"src":"6900:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1052,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1038,"src":"6903:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1048,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[861,935,1029],"referencedDeclaration":1029,"src":"6880:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$771_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":1053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6880:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$771_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"6838:67:6"},{"expression":{"arguments":[{"id":1056,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1047,"src":"6927:5:6","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$771","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$771","typeString":"enum ECDSA.RecoverError"}],"id":1055,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":815,"src":"6915:11:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$771_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":1057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6915:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1058,"nodeType":"ExpressionStatement","src":"6915:18:6"},{"expression":{"id":1059,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1044,"src":"6950:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1042,"id":1060,"nodeType":"Return","src":"6943:16:6"}]},"documentation":{"id":1030,"nodeType":"StructuredDocumentation","src":"6569:122:6","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":1062,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nodeType":"FunctionDefinition","parameters":{"id":1039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1032,"mutability":"mutable","name":"hash","nodeType":"VariableDeclaration","scope":1062,"src":"6722:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1031,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6722:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1034,"mutability":"mutable","name":"v","nodeType":"VariableDeclaration","scope":1062,"src":"6744:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1033,"name":"uint8","nodeType":"ElementaryTypeName","src":"6744:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1036,"mutability":"mutable","name":"r","nodeType":"VariableDeclaration","scope":1062,"src":"6761:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1035,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6761:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1038,"mutability":"mutable","name":"s","nodeType":"VariableDeclaration","scope":1062,"src":"6780:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1037,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6780:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6712:83:6"},"returnParameters":{"id":1042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1041,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1062,"src":"6819:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1040,"name":"address","nodeType":"ElementaryTypeName","src":"6819:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6818:9:6"},"scope":1122,"src":"6696:270:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1078,"nodeType":"Block","src":"7334:187:6","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","id":1073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7472:34:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""},"value":"\u0019Ethereum Signed Message:\n32"},{"id":1074,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"7508:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1071,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7455:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1072,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"7455:16:6","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7455:58:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1070,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7445:9:6","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7445:69:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1069,"id":1077,"nodeType":"Return","src":"7438:76:6"}]},"documentation":{"id":1063,"nodeType":"StructuredDocumentation","src":"6972:279:6","text":" @dev Returns an Ethereum Signed Message, created from a `hash`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."},"id":1079,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nodeType":"FunctionDefinition","parameters":{"id":1066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1065,"mutability":"mutable","name":"hash","nodeType":"VariableDeclaration","scope":1079,"src":"7288:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1064,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7288:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7287:14:6"},"returnParameters":{"id":1069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1068,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1079,"src":"7325:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1067,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7325:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7324:9:6"},"scope":1122,"src":"7256:265:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1100,"nodeType":"Block","src":"7886:116:6","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":1090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7930:32:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"expression":{"id":1093,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1082,"src":"7981:1:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"7981:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1091,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"7964:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$761_$","typeString":"type(library Strings)"}},"id":1092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":644,"src":"7964:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1095,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7964:26:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1096,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1082,"src":"7992:1:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1088,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7913:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1089,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"7913:16:6","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7913:81:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1087,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7903:9:6","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7903:92:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1086,"id":1099,"nodeType":"Return","src":"7896:99:6"}]},"documentation":{"id":1080,"nodeType":"StructuredDocumentation","src":"7527:274:6","text":" @dev Returns an Ethereum Signed Message, created from `s`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."},"id":1101,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nodeType":"FunctionDefinition","parameters":{"id":1083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1082,"mutability":"mutable","name":"s","nodeType":"VariableDeclaration","scope":1101,"src":"7838:14:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1081,"name":"bytes","nodeType":"ElementaryTypeName","src":"7838:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7837:16:6"},"returnParameters":{"id":1086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1085,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1101,"src":"7877:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1084,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7877:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7876:9:6"},"scope":1122,"src":"7806:196:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1120,"nodeType":"Block","src":"8443:92:6","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1901","id":1114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8487:10:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","typeString":"literal_string hex\"1901\""},"value":"\u0019\u0001"},{"id":1115,"name":"domainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1104,"src":"8499:15:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1116,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1106,"src":"8516:10:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","typeString":"literal_string hex\"1901\""},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1112,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"8470:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1113,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"8470:16:6","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8470:57:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1111,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"8460:9:6","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8460:68:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1110,"id":1119,"nodeType":"Return","src":"8453:75:6"}]},"documentation":{"id":1102,"nodeType":"StructuredDocumentation","src":"8008:328:6","text":" @dev Returns an Ethereum Signed Typed Data, created from a\n `domainSeparator` and a `structHash`. This produces hash corresponding\n to the one signed with the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n JSON-RPC method as part of EIP-712.\n See {recover}."},"id":1121,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nodeType":"FunctionDefinition","parameters":{"id":1107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1104,"mutability":"mutable","name":"domainSeparator","nodeType":"VariableDeclaration","scope":1121,"src":"8366:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1103,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8366:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1106,"mutability":"mutable","name":"structHash","nodeType":"VariableDeclaration","scope":1121,"src":"8391:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1105,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8391:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8365:45:6"},"returnParameters":{"id":1110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1109,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1121,"src":"8434:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1108,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8434:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8433:9:6"},"scope":1122,"src":"8341:194:6","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1123,"src":"369:8168:6"}],"src":"112:8426:6"},"id":6},"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol","exportedSymbols":{"Address":[564],"ECDSA":[1122],"IERC1271":[126],"Math":[2070],"SignatureChecker":[1205],"Strings":[761]},"id":1206,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1124,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"123:23:7"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"./ECDSA.sol","id":1125,"nodeType":"ImportDirective","scope":1206,"sourceUnit":1123,"src":"148:21:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../Address.sol","id":1126,"nodeType":"ImportDirective","scope":1206,"sourceUnit":565,"src":"170:24:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1271.sol","file":"../../interfaces/IERC1271.sol","id":1127,"nodeType":"ImportDirective","scope":1206,"sourceUnit":127,"src":"195:39:7","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":1128,"nodeType":"StructuredDocumentation","src":"236:294:7","text":" @dev Signature verification helper that can be used instead of `ECDSA.recover` to seamlessly support both ECDSA\n signatures from externally owned accounts (EOAs) as well as ERC1271 signatures from smart contract wallets like\n Argent and Gnosis Safe.\n _Available since v4.1._"},"fullyImplemented":true,"id":1205,"linearizedBaseContracts":[1205],"name":"SignatureChecker","nodeType":"ContractDefinition","nodes":[{"body":{"id":1203,"nodeType":"Block","src":"1181:525:7","statements":[{"assignments":[1141,1144],"declarations":[{"constant":false,"id":1141,"mutability":"mutable","name":"recovered","nodeType":"VariableDeclaration","scope":1203,"src":"1192:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1140,"name":"address","nodeType":"ElementaryTypeName","src":"1192:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1144,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","scope":1203,"src":"1211:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$771","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1143,"nodeType":"UserDefinedTypeName","pathNode":{"id":1142,"name":"ECDSA.RecoverError","nodeType":"IdentifierPath","referencedDeclaration":771,"src":"1211:18:7"},"referencedDeclaration":771,"src":"1211:18:7","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$771","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":1150,"initialValue":{"arguments":[{"id":1147,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1133,"src":"1256:4:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1148,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1135,"src":"1262:9:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1145,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1122,"src":"1239:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$1122_$","typeString":"type(library ECDSA)"}},"id":1146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"tryRecover","nodeType":"MemberAccess","referencedDeclaration":861,"src":"1239:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$771_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError)"}},"id":1149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1239:33:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$771_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"1191:81:7"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$771","typeString":"enum ECDSA.RecoverError"},"id":1155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1151,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1144,"src":"1286:5:7","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$771","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":1152,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1122,"src":"1295:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$1122_$","typeString":"type(library ECDSA)"}},"id":1153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"RecoverError","nodeType":"MemberAccess","referencedDeclaration":771,"src":"1295:18:7","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$771_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1154,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"NoError","nodeType":"MemberAccess","src":"1295:26:7","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$771","typeString":"enum ECDSA.RecoverError"}},"src":"1286:35:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1156,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1141,"src":"1325:9:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1157,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1131,"src":"1338:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1325:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1286:58:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1163,"nodeType":"IfStatement","src":"1282:100:7","trueBody":{"id":1162,"nodeType":"Block","src":"1346:36:7","statements":[{"expression":{"hexValue":"74727565","id":1160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1367:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1139,"id":1161,"nodeType":"Return","src":"1360:11:7"}]}},{"assignments":[1165,1167],"declarations":[{"constant":false,"id":1165,"mutability":"mutable","name":"success","nodeType":"VariableDeclaration","scope":1203,"src":"1393:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1164,"name":"bool","nodeType":"ElementaryTypeName","src":"1393:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1167,"mutability":"mutable","name":"result","nodeType":"VariableDeclaration","scope":1203,"src":"1407:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1166,"name":"bytes","nodeType":"ElementaryTypeName","src":"1407:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1179,"initialValue":{"arguments":[{"arguments":[{"expression":{"expression":{"id":1172,"name":"IERC1271","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":126,"src":"1484:8:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1271_$126_$","typeString":"type(contract IERC1271)"}},"id":1173,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"isValidSignature","nodeType":"MemberAccess","referencedDeclaration":125,"src":"1484:25:7","typeDescriptions":{"typeIdentifier":"t_function_declaration_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function IERC1271.isValidSignature(bytes32,bytes memory) view returns (bytes4)"}},"id":1174,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"1484:34:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1175,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1133,"src":"1520:4:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1176,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1135,"src":"1526:9:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1170,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1461:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1171,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1461:22:7","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1461:75:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1168,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1131,"src":"1430:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"staticcall","nodeType":"MemberAccess","src":"1430:17:7","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":1178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1430:116:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1392:154:7"},{"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1180,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"1564:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1181,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"1587:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1587:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3332","id":1183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1604:2:7","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"1587:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1564:42:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1188,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"1633:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":1190,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1642:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1189,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1642:7:7","typeDescriptions":{}}}],"id":1191,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1641:9:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"}],"expression":{"id":1186,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1622:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1187,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"decode","nodeType":"MemberAccess","src":"1622:10:7","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":1192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1622:29:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"expression":{"expression":{"id":1195,"name":"IERC1271","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":126,"src":"1663:8:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1271_$126_$","typeString":"type(contract IERC1271)"}},"id":1196,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"isValidSignature","nodeType":"MemberAccess","referencedDeclaration":125,"src":"1663:25:7","typeDescriptions":{"typeIdentifier":"t_function_declaration_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function IERC1271.isValidSignature(bytes32,bytes memory) view returns (bytes4)"}},"id":1197,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"1663:34:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":1194,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1655:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1193,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1655:7:7","typeDescriptions":{}}},"id":1198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1655:43:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1622:76:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1564:134:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1201,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1563:136:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1139,"id":1202,"nodeType":"Return","src":"1556:143:7"}]},"documentation":{"id":1129,"nodeType":"StructuredDocumentation","src":"562:472:7","text":" @dev Checks if a signature is valid for a given signer and data hash. If the signer is a smart contract, the\n signature is validated against that smart contract using ERC1271, otherwise it's validated using `ECDSA.recover`.\n NOTE: Unlike ECDSA signatures, contract signatures are revocable, and the outcome of this function can thus\n change through time. It could return true at block N and false at block N+1 (or the opposite)."},"id":1204,"implemented":true,"kind":"function","modifiers":[],"name":"isValidSignatureNow","nodeType":"FunctionDefinition","parameters":{"id":1136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1131,"mutability":"mutable","name":"signer","nodeType":"VariableDeclaration","scope":1204,"src":"1077:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1130,"name":"address","nodeType":"ElementaryTypeName","src":"1077:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1133,"mutability":"mutable","name":"hash","nodeType":"VariableDeclaration","scope":1204,"src":"1101:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1132,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1101:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1135,"mutability":"mutable","name":"signature","nodeType":"VariableDeclaration","scope":1204,"src":"1123:22:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1134,"name":"bytes","nodeType":"ElementaryTypeName","src":"1123:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1067:84:7"},"returnParameters":{"id":1139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1138,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1204,"src":"1175:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1137,"name":"bool","nodeType":"ElementaryTypeName","src":"1175:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1174:6:7"},"scope":1205,"src":"1039:667:7","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1206,"src":"531:1177:7"}],"src":"123:1586:7"},"id":7},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[2070]},"id":2071,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1207,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"103:23:8"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":1208,"nodeType":"StructuredDocumentation","src":"128:73:8","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":2070,"linearizedBaseContracts":[2070],"name":"Math","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":1212,"members":[{"id":1209,"name":"Down","nodeType":"EnumValue","src":"245:4:8"},{"id":1210,"name":"Up","nodeType":"EnumValue","src":"287:2:8"},{"id":1211,"name":"Zero","nodeType":"EnumValue","src":"318:4:8"}],"name":"Rounding","nodeType":"EnumDefinition","src":"221:122:8"},{"body":{"id":1229,"nodeType":"Block","src":"480:37:8","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1222,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1215,"src":"497:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1223,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"501:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"497:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1226,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"509:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"497:13:8","trueExpression":{"id":1225,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1215,"src":"505:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1221,"id":1228,"nodeType":"Return","src":"490:20:8"}]},"documentation":{"id":1213,"nodeType":"StructuredDocumentation","src":"349:59:8","text":" @dev Returns the largest of two numbers."},"id":1230,"implemented":true,"kind":"function","modifiers":[],"name":"max","nodeType":"FunctionDefinition","parameters":{"id":1218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1215,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":1230,"src":"426:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1214,"name":"uint256","nodeType":"ElementaryTypeName","src":"426:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1217,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":1230,"src":"437:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1216,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"425:22:8"},"returnParameters":{"id":1221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1220,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1230,"src":"471:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1219,"name":"uint256","nodeType":"ElementaryTypeName","src":"471:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"470:9:8"},"scope":2070,"src":"413:104:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1247,"nodeType":"Block","src":"655:37:8","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1240,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1233,"src":"672:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1241,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1235,"src":"676:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"672:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1244,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1235,"src":"684:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"672:13:8","trueExpression":{"id":1243,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1233,"src":"680:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1239,"id":1246,"nodeType":"Return","src":"665:20:8"}]},"documentation":{"id":1231,"nodeType":"StructuredDocumentation","src":"523:60:8","text":" @dev Returns the smallest of two numbers."},"id":1248,"implemented":true,"kind":"function","modifiers":[],"name":"min","nodeType":"FunctionDefinition","parameters":{"id":1236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1233,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":1248,"src":"601:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1232,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1235,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":1248,"src":"612:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1234,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:8"},"returnParameters":{"id":1239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1238,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1248,"src":"646:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1237,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:9:8"},"scope":2070,"src":"588:104:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1270,"nodeType":"Block","src":"876:82:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1258,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1251,"src":"931:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":1259,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1253,"src":"935:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"931:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1261,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"930:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1262,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1251,"src":"941:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":1263,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1253,"src":"945:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"941:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1265,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"940:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":1266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"950:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"940:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"930:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1257,"id":1269,"nodeType":"Return","src":"923:28:8"}]},"documentation":{"id":1249,"nodeType":"StructuredDocumentation","src":"698:102:8","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":1271,"implemented":true,"kind":"function","modifiers":[],"name":"average","nodeType":"FunctionDefinition","parameters":{"id":1254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1251,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":1271,"src":"822:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1250,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1253,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":1271,"src":"833:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1252,"name":"uint256","nodeType":"ElementaryTypeName","src":"833:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:22:8"},"returnParameters":{"id":1257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1256,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1271,"src":"867:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1255,"name":"uint256","nodeType":"ElementaryTypeName","src":"867:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"866:9:8"},"scope":2070,"src":"805:153:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1295,"nodeType":"Block","src":"1228:123:8","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1281,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1274,"src":"1316:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1321:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1316:6:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1285,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1274,"src":"1330:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1334:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1330:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1288,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1329:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1289,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1276,"src":"1339:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1329:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1343:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1329:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1316:28:8","trueExpression":{"hexValue":"30","id":1284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1325:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1280,"id":1294,"nodeType":"Return","src":"1309:35:8"}]},"documentation":{"id":1272,"nodeType":"StructuredDocumentation","src":"964:188:8","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."},"id":1296,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nodeType":"FunctionDefinition","parameters":{"id":1277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1274,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":1296,"src":"1174:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1273,"name":"uint256","nodeType":"ElementaryTypeName","src":"1174:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1276,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":1296,"src":"1185:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1275,"name":"uint256","nodeType":"ElementaryTypeName","src":"1185:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1173:22:8"},"returnParameters":{"id":1280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1279,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1296,"src":"1219:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1278,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1218:9:8"},"scope":2070,"src":"1157:194:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1417,"nodeType":"Block","src":"1795:3797:8","statements":[{"id":1416,"nodeType":"UncheckedBlock","src":"1805:3781:8","statements":[{"assignments":[1309],"declarations":[{"constant":false,"id":1309,"mutability":"mutable","name":"prod0","nodeType":"VariableDeclaration","scope":1416,"src":"2126:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1308,"name":"uint256","nodeType":"ElementaryTypeName","src":"2126:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1310,"nodeType":"VariableDeclarationStatement","src":"2126:13:8"},{"assignments":[1312],"declarations":[{"constant":false,"id":1312,"mutability":"mutable","name":"prod1","nodeType":"VariableDeclaration","scope":1416,"src":"2198:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1311,"name":"uint256","nodeType":"ElementaryTypeName","src":"2198:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1313,"nodeType":"VariableDeclarationStatement","src":"2198:13:8"},{"AST":{"nodeType":"YulBlock","src":"2278:157:8","statements":[{"nodeType":"YulVariableDeclaration","src":"2296:30:8","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2313:1:8"},{"name":"y","nodeType":"YulIdentifier","src":"2316:1:8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2323:1:8","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2319:3:8"},"nodeType":"YulFunctionCall","src":"2319:6:8"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"2306:6:8"},"nodeType":"YulFunctionCall","src":"2306:20:8"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"2300:2:8","type":""}]},{"nodeType":"YulAssignment","src":"2343:18:8","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2356:1:8"},{"name":"y","nodeType":"YulIdentifier","src":"2359:1:8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2352:3:8"},"nodeType":"YulFunctionCall","src":"2352:9:8"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"2343:5:8"}]},{"nodeType":"YulAssignment","src":"2378:43:8","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2395:2:8"},{"name":"prod0","nodeType":"YulIdentifier","src":"2399:5:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2391:3:8"},"nodeType":"YulFunctionCall","src":"2391:14:8"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2410:2:8"},{"name":"prod0","nodeType":"YulIdentifier","src":"2414:5:8"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2407:2:8"},"nodeType":"YulFunctionCall","src":"2407:13:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2387:3:8"},"nodeType":"YulFunctionCall","src":"2387:34:8"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"2378:5:8"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":1309,"isOffset":false,"isSlot":false,"src":"2343:5:8","valueSize":1},{"declaration":1309,"isOffset":false,"isSlot":false,"src":"2399:5:8","valueSize":1},{"declaration":1309,"isOffset":false,"isSlot":false,"src":"2414:5:8","valueSize":1},{"declaration":1312,"isOffset":false,"isSlot":false,"src":"2378:5:8","valueSize":1},{"declaration":1299,"isOffset":false,"isSlot":false,"src":"2313:1:8","valueSize":1},{"declaration":1299,"isOffset":false,"isSlot":false,"src":"2356:1:8","valueSize":1},{"declaration":1301,"isOffset":false,"isSlot":false,"src":"2316:1:8","valueSize":1},{"declaration":1301,"isOffset":false,"isSlot":false,"src":"2359:1:8","valueSize":1}],"id":1314,"nodeType":"InlineAssembly","src":"2269:166:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1315,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1312,"src":"2516:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2525:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2516:10:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1323,"nodeType":"IfStatement","src":"2512:75:8","trueBody":{"id":1322,"nodeType":"Block","src":"2528:59:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1318,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1309,"src":"2553:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1319,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1303,"src":"2561:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2553:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1307,"id":1321,"nodeType":"Return","src":"2546:26:8"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1325,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1303,"src":"2697:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1326,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1312,"src":"2711:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2697:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1324,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2689:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":1328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2689:28:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1329,"nodeType":"ExpressionStatement","src":"2689:28:8"},{"assignments":[1331],"declarations":[{"constant":false,"id":1331,"mutability":"mutable","name":"remainder","nodeType":"VariableDeclaration","scope":1416,"src":"2973:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1330,"name":"uint256","nodeType":"ElementaryTypeName","src":"2973:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1332,"nodeType":"VariableDeclarationStatement","src":"2973:17:8"},{"AST":{"nodeType":"YulBlock","src":"3013:291:8","statements":[{"nodeType":"YulAssignment","src":"3082:38:8","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3102:1:8"},{"name":"y","nodeType":"YulIdentifier","src":"3105:1:8"},{"name":"denominator","nodeType":"YulIdentifier","src":"3108:11:8"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"3095:6:8"},"nodeType":"YulFunctionCall","src":"3095:25:8"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"3082:9:8"}]},{"nodeType":"YulAssignment","src":"3202:41:8","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"3215:5:8"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"3225:9:8"},{"name":"prod0","nodeType":"YulIdentifier","src":"3236:5:8"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3222:2:8"},"nodeType":"YulFunctionCall","src":"3222:20:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3211:3:8"},"nodeType":"YulFunctionCall","src":"3211:32:8"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"3202:5:8"}]},{"nodeType":"YulAssignment","src":"3260:30:8","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3273:5:8"},{"name":"remainder","nodeType":"YulIdentifier","src":"3280:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3269:3:8"},"nodeType":"YulFunctionCall","src":"3269:21:8"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3260:5:8"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":1303,"isOffset":false,"isSlot":false,"src":"3108:11:8","valueSize":1},{"declaration":1309,"isOffset":false,"isSlot":false,"src":"3236:5:8","valueSize":1},{"declaration":1309,"isOffset":false,"isSlot":false,"src":"3260:5:8","valueSize":1},{"declaration":1309,"isOffset":false,"isSlot":false,"src":"3273:5:8","valueSize":1},{"declaration":1312,"isOffset":false,"isSlot":false,"src":"3202:5:8","valueSize":1},{"declaration":1312,"isOffset":false,"isSlot":false,"src":"3215:5:8","valueSize":1},{"declaration":1331,"isOffset":false,"isSlot":false,"src":"3082:9:8","valueSize":1},{"declaration":1331,"isOffset":false,"isSlot":false,"src":"3225:9:8","valueSize":1},{"declaration":1331,"isOffset":false,"isSlot":false,"src":"3280:9:8","valueSize":1},{"declaration":1299,"isOffset":false,"isSlot":false,"src":"3102:1:8","valueSize":1},{"declaration":1301,"isOffset":false,"isSlot":false,"src":"3105:1:8","valueSize":1}],"id":1333,"nodeType":"InlineAssembly","src":"3004:300:8"},{"assignments":[1335],"declarations":[{"constant":false,"id":1335,"mutability":"mutable","name":"twos","nodeType":"VariableDeclaration","scope":1416,"src":"3611:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1334,"name":"uint256","nodeType":"ElementaryTypeName","src":"3611:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1343,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1336,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1303,"src":"3626:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"3641:12:8","subExpression":{"id":1337,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1303,"src":"3642:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3656:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3641:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1341,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3640:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3626:32:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3611:47:8"},{"AST":{"nodeType":"YulBlock","src":"3681:362:8","statements":[{"nodeType":"YulAssignment","src":"3746:37:8","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"3765:11:8"},{"name":"twos","nodeType":"YulIdentifier","src":"3778:4:8"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3761:3:8"},"nodeType":"YulFunctionCall","src":"3761:22:8"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"3746:11:8"}]},{"nodeType":"YulAssignment","src":"3850:25:8","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3863:5:8"},{"name":"twos","nodeType":"YulIdentifier","src":"3870:4:8"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3859:3:8"},"nodeType":"YulFunctionCall","src":"3859:16:8"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3850:5:8"}]},{"nodeType":"YulAssignment","src":"3990:39:8","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4010:1:8","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"4013:4:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4006:3:8"},"nodeType":"YulFunctionCall","src":"4006:12:8"},{"name":"twos","nodeType":"YulIdentifier","src":"4020:4:8"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4002:3:8"},"nodeType":"YulFunctionCall","src":"4002:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"4027:1:8","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3998:3:8"},"nodeType":"YulFunctionCall","src":"3998:31:8"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"3990:4:8"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":1303,"isOffset":false,"isSlot":false,"src":"3746:11:8","valueSize":1},{"declaration":1303,"isOffset":false,"isSlot":false,"src":"3765:11:8","valueSize":1},{"declaration":1309,"isOffset":false,"isSlot":false,"src":"3850:5:8","valueSize":1},{"declaration":1309,"isOffset":false,"isSlot":false,"src":"3863:5:8","valueSize":1},{"declaration":1335,"isOffset":false,"isSlot":false,"src":"3778:4:8","valueSize":1},{"declaration":1335,"isOffset":false,"isSlot":false,"src":"3870:4:8","valueSize":1},{"declaration":1335,"isOffset":false,"isSlot":false,"src":"3990:4:8","valueSize":1},{"declaration":1335,"isOffset":false,"isSlot":false,"src":"4013:4:8","valueSize":1},{"declaration":1335,"isOffset":false,"isSlot":false,"src":"4020:4:8","valueSize":1}],"id":1344,"nodeType":"InlineAssembly","src":"3672:371:8"},{"expression":{"id":1349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1345,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1309,"src":"4109:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1346,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1312,"src":"4118:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1347,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"4126:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4118:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4109:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1350,"nodeType":"ExpressionStatement","src":"4109:21:8"},{"assignments":[1352],"declarations":[{"constant":false,"id":1352,"mutability":"mutable","name":"inverse","nodeType":"VariableDeclaration","scope":1416,"src":"4448:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1351,"name":"uint256","nodeType":"ElementaryTypeName","src":"4448:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1359,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":1353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4467:1:8","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1354,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1303,"src":"4471:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4467:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1356,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4466:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":1357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4486:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4466:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4448:39:8"},{"expression":{"id":1366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1360,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1352,"src":"4704:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4715:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1362,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1303,"src":"4719:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1363,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1352,"src":"4733:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4719:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4715:25:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4704:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1367,"nodeType":"ExpressionStatement","src":"4704:36:8"},{"expression":{"id":1374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1368,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1352,"src":"4773:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4784:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1370,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1303,"src":"4788:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1371,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1352,"src":"4802:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4788:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4784:25:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4773:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1375,"nodeType":"ExpressionStatement","src":"4773:36:8"},{"expression":{"id":1382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1376,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1352,"src":"4843:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4854:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1378,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1303,"src":"4858:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1379,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1352,"src":"4872:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4858:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4854:25:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4843:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1383,"nodeType":"ExpressionStatement","src":"4843:36:8"},{"expression":{"id":1390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1384,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1352,"src":"4913:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4924:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1386,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1303,"src":"4928:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1387,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1352,"src":"4942:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4928:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4924:25:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4913:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1391,"nodeType":"ExpressionStatement","src":"4913:36:8"},{"expression":{"id":1398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1392,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1352,"src":"4983:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4994:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1394,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1303,"src":"4998:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1395,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1352,"src":"5012:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4998:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4994:25:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4983:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1399,"nodeType":"ExpressionStatement","src":"4983:36:8"},{"expression":{"id":1406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1400,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1352,"src":"5054:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5065:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1402,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1303,"src":"5069:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1403,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1352,"src":"5083:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5069:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5065:25:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5054:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1407,"nodeType":"ExpressionStatement","src":"5054:36:8"},{"expression":{"id":1412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1408,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1306,"src":"5524:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1409,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1309,"src":"5533:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1410,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1352,"src":"5541:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5533:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5524:24:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1413,"nodeType":"ExpressionStatement","src":"5524:24:8"},{"expression":{"id":1414,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1306,"src":"5569:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1307,"id":1415,"nodeType":"Return","src":"5562:13:8"}]}]},"documentation":{"id":1297,"nodeType":"StructuredDocumentation","src":"1357:305:8","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."},"id":1418,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nodeType":"FunctionDefinition","parameters":{"id":1304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1299,"mutability":"mutable","name":"x","nodeType":"VariableDeclaration","scope":1418,"src":"1692:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1298,"name":"uint256","nodeType":"ElementaryTypeName","src":"1692:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1301,"mutability":"mutable","name":"y","nodeType":"VariableDeclaration","scope":1418,"src":"1711:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1300,"name":"uint256","nodeType":"ElementaryTypeName","src":"1711:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1303,"mutability":"mutable","name":"denominator","nodeType":"VariableDeclaration","scope":1418,"src":"1730:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1302,"name":"uint256","nodeType":"ElementaryTypeName","src":"1730:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1682:73:8"},"returnParameters":{"id":1307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1306,"mutability":"mutable","name":"result","nodeType":"VariableDeclaration","scope":1418,"src":"1779:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1305,"name":"uint256","nodeType":"ElementaryTypeName","src":"1779:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1778:16:8"},"scope":2070,"src":"1667:3925:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1461,"nodeType":"Block","src":"5872:189:8","statements":[{"assignments":[1434],"declarations":[{"constant":false,"id":1434,"mutability":"mutable","name":"result","nodeType":"VariableDeclaration","scope":1461,"src":"5882:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1433,"name":"uint256","nodeType":"ElementaryTypeName","src":"5882:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1440,"initialValue":{"arguments":[{"id":1436,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1421,"src":"5906:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1437,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1423,"src":"5909:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1438,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1425,"src":"5912:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1435,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[1418,1462],"referencedDeclaration":1418,"src":"5899:6:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5899:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5882:42:8"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$1212","typeString":"enum Math.Rounding"},"id":1444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1441,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1428,"src":"5938:8:8","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1212","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1442,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1212,"src":"5950:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$1212_$","typeString":"type(enum Math.Rounding)"}},"id":1443,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","src":"5950:11:8","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1212","typeString":"enum Math.Rounding"}},"src":"5938:23:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1446,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1421,"src":"5972:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1447,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1423,"src":"5975:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1448,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1425,"src":"5978:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1445,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"5965:6:8","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5965:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5993:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5965:29:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5938:56:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1458,"nodeType":"IfStatement","src":"5934:98:8","trueBody":{"id":1457,"nodeType":"Block","src":"5996:36:8","statements":[{"expression":{"id":1455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1453,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1434,"src":"6010:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6020:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6010:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1456,"nodeType":"ExpressionStatement","src":"6010:11:8"}]}},{"expression":{"id":1459,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1434,"src":"6048:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1432,"id":1460,"nodeType":"Return","src":"6041:13:8"}]},"documentation":{"id":1419,"nodeType":"StructuredDocumentation","src":"5598:121:8","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":1462,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nodeType":"FunctionDefinition","parameters":{"id":1429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1421,"mutability":"mutable","name":"x","nodeType":"VariableDeclaration","scope":1462,"src":"5749:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1420,"name":"uint256","nodeType":"ElementaryTypeName","src":"5749:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1423,"mutability":"mutable","name":"y","nodeType":"VariableDeclaration","scope":1462,"src":"5768:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1422,"name":"uint256","nodeType":"ElementaryTypeName","src":"5768:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1425,"mutability":"mutable","name":"denominator","nodeType":"VariableDeclaration","scope":1462,"src":"5787:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1424,"name":"uint256","nodeType":"ElementaryTypeName","src":"5787:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1428,"mutability":"mutable","name":"rounding","nodeType":"VariableDeclaration","scope":1462,"src":"5816:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1212","typeString":"enum Math.Rounding"},"typeName":{"id":1427,"nodeType":"UserDefinedTypeName","pathNode":{"id":1426,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":1212,"src":"5816:8:8"},"referencedDeclaration":1212,"src":"5816:8:8","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1212","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"5739:100:8"},"returnParameters":{"id":1432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1431,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1462,"src":"5863:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1430,"name":"uint256","nodeType":"ElementaryTypeName","src":"5863:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5862:9:8"},"scope":2070,"src":"5724:337:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1573,"nodeType":"Block","src":"6337:1585:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1470,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1465,"src":"6351:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6356:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6351:6:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1476,"nodeType":"IfStatement","src":"6347:45:8","trueBody":{"id":1475,"nodeType":"Block","src":"6359:33:8","statements":[{"expression":{"hexValue":"30","id":1473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6380:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1469,"id":1474,"nodeType":"Return","src":"6373:8:8"}]}},{"assignments":[1478],"declarations":[{"constant":false,"id":1478,"mutability":"mutable","name":"result","nodeType":"VariableDeclaration","scope":1573,"src":"7071:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1477,"name":"uint256","nodeType":"ElementaryTypeName","src":"7071:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1487,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7088:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1481,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1465,"src":"7099:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1480,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[1742,1778],"referencedDeclaration":1742,"src":"7094:4:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7094:7:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7105:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7094:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1485,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7093:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7088:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7071:36:8"},{"id":1572,"nodeType":"UncheckedBlock","src":"7508:408:8","statements":[{"expression":{"id":1497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1488,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"7532:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1489,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"7542:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1490,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1465,"src":"7551:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1491,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"7555:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7551:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7542:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1494,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7541:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7566:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7541:26:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7532:35:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1498,"nodeType":"ExpressionStatement","src":"7532:35:8"},{"expression":{"id":1508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1499,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"7581:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1500,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"7591:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1501,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1465,"src":"7600:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1502,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"7604:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7600:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7591:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1505,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7590:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7615:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7590:26:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7581:35:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1509,"nodeType":"ExpressionStatement","src":"7581:35:8"},{"expression":{"id":1519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1510,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"7630:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1511,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"7640:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1512,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1465,"src":"7649:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1513,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"7653:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7649:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7640:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1516,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7639:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7664:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7639:26:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7630:35:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1520,"nodeType":"ExpressionStatement","src":"7630:35:8"},{"expression":{"id":1530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1521,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"7679:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1522,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"7689:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1523,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1465,"src":"7698:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1524,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"7702:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7698:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7689:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1527,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7688:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7713:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7688:26:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7679:35:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1531,"nodeType":"ExpressionStatement","src":"7679:35:8"},{"expression":{"id":1541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1532,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"7728:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1533,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"7738:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1534,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1465,"src":"7747:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1535,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"7751:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7747:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7738:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1538,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7737:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7762:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7737:26:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7728:35:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1542,"nodeType":"ExpressionStatement","src":"7728:35:8"},{"expression":{"id":1552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1543,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"7777:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1544,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"7787:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1545,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1465,"src":"7796:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1546,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"7800:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7796:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7787:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1549,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7786:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7811:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7786:26:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7777:35:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1553,"nodeType":"ExpressionStatement","src":"7777:35:8"},{"expression":{"id":1563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1554,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"7826:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1555,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"7836:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1556,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1465,"src":"7845:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1557,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"7849:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7845:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7836:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1560,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7835:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7860:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7835:26:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7826:35:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1564,"nodeType":"ExpressionStatement","src":"7826:35:8"},{"expression":{"arguments":[{"id":1566,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"7886:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1567,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1465,"src":"7894:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1568,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"7898:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7894:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1565,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1248,"src":"7882:3:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7882:23:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1469,"id":1571,"nodeType":"Return","src":"7875:30:8"}]}]},"documentation":{"id":1463,"nodeType":"StructuredDocumentation","src":"6067:208:8","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":1574,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nodeType":"FunctionDefinition","parameters":{"id":1466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1465,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":1574,"src":"6294:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1464,"name":"uint256","nodeType":"ElementaryTypeName","src":"6294:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6293:11:8"},"returnParameters":{"id":1469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1468,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1574,"src":"6328:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1467,"name":"uint256","nodeType":"ElementaryTypeName","src":"6328:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6327:9:8"},"scope":2070,"src":"6280:1642:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1609,"nodeType":"Block","src":"8098:161:8","statements":[{"id":1608,"nodeType":"UncheckedBlock","src":"8108:145:8","statements":[{"assignments":[1586],"declarations":[{"constant":false,"id":1586,"mutability":"mutable","name":"result","nodeType":"VariableDeclaration","scope":1608,"src":"8132:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1585,"name":"uint256","nodeType":"ElementaryTypeName","src":"8132:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1590,"initialValue":{"arguments":[{"id":1588,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1577,"src":"8154:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1587,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[1574,1610],"referencedDeclaration":1574,"src":"8149:4:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8149:7:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8132:24:8"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1591,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1586,"src":"8177:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$1212","typeString":"enum Math.Rounding"},"id":1595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1592,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1580,"src":"8187:8:8","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1212","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1593,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1212,"src":"8199:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$1212_$","typeString":"type(enum Math.Rounding)"}},"id":1594,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","src":"8199:11:8","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1212","typeString":"enum Math.Rounding"}},"src":"8187:23:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1596,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1586,"src":"8214:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1597,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1586,"src":"8223:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8214:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1599,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1577,"src":"8232:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8214:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8187:46:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8240:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8187:54:8","trueExpression":{"hexValue":"31","id":1602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8236:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1605,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8186:56:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8177:65:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1584,"id":1607,"nodeType":"Return","src":"8170:72:8"}]}]},"documentation":{"id":1575,"nodeType":"StructuredDocumentation","src":"7928:89:8","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":1610,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nodeType":"FunctionDefinition","parameters":{"id":1581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1577,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":1610,"src":"8036:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1576,"name":"uint256","nodeType":"ElementaryTypeName","src":"8036:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1580,"mutability":"mutable","name":"rounding","nodeType":"VariableDeclaration","scope":1610,"src":"8047:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1212","typeString":"enum Math.Rounding"},"typeName":{"id":1579,"nodeType":"UserDefinedTypeName","pathNode":{"id":1578,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":1212,"src":"8047:8:8"},"referencedDeclaration":1212,"src":"8047:8:8","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1212","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8035:30:8"},"returnParameters":{"id":1584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1583,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1610,"src":"8089:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1582,"name":"uint256","nodeType":"ElementaryTypeName","src":"8089:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8088:9:8"},"scope":2070,"src":"8022:237:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1741,"nodeType":"Block","src":"8444:922:8","statements":[{"assignments":[1619],"declarations":[{"constant":false,"id":1619,"mutability":"mutable","name":"result","nodeType":"VariableDeclaration","scope":1741,"src":"8454:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1618,"name":"uint256","nodeType":"ElementaryTypeName","src":"8454:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1621,"initialValue":{"hexValue":"30","id":1620,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8471:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8454:18:8"},{"id":1738,"nodeType":"UncheckedBlock","src":"8482:855:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1622,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1613,"src":"8510:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":1623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8519:3:8","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8510:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8525:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8510:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1636,"nodeType":"IfStatement","src":"8506:99:8","trueBody":{"id":1635,"nodeType":"Block","src":"8528:77:8","statements":[{"expression":{"id":1629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1627,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1613,"src":"8546:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":1628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8556:3:8","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8546:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1630,"nodeType":"ExpressionStatement","src":"8546:13:8"},{"expression":{"id":1633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1631,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1619,"src":"8577:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":1632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8587:3:8","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8577:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1634,"nodeType":"ExpressionStatement","src":"8577:13:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1637,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1613,"src":"8622:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":1638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8631:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8622:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8636:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8622:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1651,"nodeType":"IfStatement","src":"8618:96:8","trueBody":{"id":1650,"nodeType":"Block","src":"8639:75:8","statements":[{"expression":{"id":1644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1642,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1613,"src":"8657:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":1643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8667:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8657:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1645,"nodeType":"ExpressionStatement","src":"8657:12:8"},{"expression":{"id":1648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1646,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1619,"src":"8687:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":1647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8697:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8687:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1649,"nodeType":"ExpressionStatement","src":"8687:12:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1652,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1613,"src":"8731:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":1653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8740:2:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8731:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8745:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8731:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1666,"nodeType":"IfStatement","src":"8727:96:8","trueBody":{"id":1665,"nodeType":"Block","src":"8748:75:8","statements":[{"expression":{"id":1659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1657,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1613,"src":"8766:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":1658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8776:2:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8766:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1660,"nodeType":"ExpressionStatement","src":"8766:12:8"},{"expression":{"id":1663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1661,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1619,"src":"8796:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":1662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8806:2:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8796:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1664,"nodeType":"ExpressionStatement","src":"8796:12:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1667,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1613,"src":"8840:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":1668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8849:2:8","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"8840:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8854:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8840:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1681,"nodeType":"IfStatement","src":"8836:96:8","trueBody":{"id":1680,"nodeType":"Block","src":"8857:75:8","statements":[{"expression":{"id":1674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1672,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1613,"src":"8875:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":1673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8885:2:8","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"8875:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1675,"nodeType":"ExpressionStatement","src":"8875:12:8"},{"expression":{"id":1678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1676,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1619,"src":"8905:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":1677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8915:2:8","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"8905:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1679,"nodeType":"ExpressionStatement","src":"8905:12:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1682,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1613,"src":"8949:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":1683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8958:1:8","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"8949:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8962:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8949:14:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1696,"nodeType":"IfStatement","src":"8945:93:8","trueBody":{"id":1695,"nodeType":"Block","src":"8965:73:8","statements":[{"expression":{"id":1689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1687,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1613,"src":"8983:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":1688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8993:1:8","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"8983:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1690,"nodeType":"ExpressionStatement","src":"8983:11:8"},{"expression":{"id":1693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1691,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1619,"src":"9012:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":1692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9022:1:8","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9012:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1694,"nodeType":"ExpressionStatement","src":"9012:11:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1697,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1613,"src":"9055:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":1698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9064:1:8","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9055:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9068:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9055:14:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1711,"nodeType":"IfStatement","src":"9051:93:8","trueBody":{"id":1710,"nodeType":"Block","src":"9071:73:8","statements":[{"expression":{"id":1704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1702,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1613,"src":"9089:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9099:1:8","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9089:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1705,"nodeType":"ExpressionStatement","src":"9089:11:8"},{"expression":{"id":1708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1706,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1619,"src":"9118:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":1707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9128:1:8","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9118:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1709,"nodeType":"ExpressionStatement","src":"9118:11:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1712,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1613,"src":"9161:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":1713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9170:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9161:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9174:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9161:14:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1726,"nodeType":"IfStatement","src":"9157:93:8","trueBody":{"id":1725,"nodeType":"Block","src":"9177:73:8","statements":[{"expression":{"id":1719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1717,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1613,"src":"9195:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":1718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9205:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9195:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1720,"nodeType":"ExpressionStatement","src":"9195:11:8"},{"expression":{"id":1723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1721,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1619,"src":"9224:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":1722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9234:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9224:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1724,"nodeType":"ExpressionStatement","src":"9224:11:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1727,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1613,"src":"9267:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9276:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9267:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9280:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9267:14:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1737,"nodeType":"IfStatement","src":"9263:64:8","trueBody":{"id":1736,"nodeType":"Block","src":"9283:44:8","statements":[{"expression":{"id":1734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1732,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1619,"src":"9301:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9311:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9301:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1735,"nodeType":"ExpressionStatement","src":"9301:11:8"}]}}]},{"expression":{"id":1739,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1619,"src":"9353:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1617,"id":1740,"nodeType":"Return","src":"9346:13:8"}]},"documentation":{"id":1611,"nodeType":"StructuredDocumentation","src":"8265:113:8","text":" @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."},"id":1742,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nodeType":"FunctionDefinition","parameters":{"id":1614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1613,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":1742,"src":"8397:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1612,"name":"uint256","nodeType":"ElementaryTypeName","src":"8397:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8396:15:8"},"returnParameters":{"id":1617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1616,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1742,"src":"8435:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1615,"name":"uint256","nodeType":"ElementaryTypeName","src":"8435:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8434:9:8"},"scope":2070,"src":"8383:983:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1777,"nodeType":"Block","src":"9599:165:8","statements":[{"id":1776,"nodeType":"UncheckedBlock","src":"9609:149:8","statements":[{"assignments":[1754],"declarations":[{"constant":false,"id":1754,"mutability":"mutable","name":"result","nodeType":"VariableDeclaration","scope":1776,"src":"9633:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1753,"name":"uint256","nodeType":"ElementaryTypeName","src":"9633:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1758,"initialValue":{"arguments":[{"id":1756,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1745,"src":"9655:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1755,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[1742,1778],"referencedDeclaration":1742,"src":"9650:4:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9650:11:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9633:28:8"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1759,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1754,"src":"9682:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$1212","typeString":"enum Math.Rounding"},"id":1763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1760,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"9692:8:8","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1212","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1761,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1212,"src":"9704:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$1212_$","typeString":"type(enum Math.Rounding)"}},"id":1762,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","src":"9704:11:8","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1212","typeString":"enum Math.Rounding"}},"src":"9692:23:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9719:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":1765,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1754,"src":"9724:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9719:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1767,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1745,"src":"9733:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9719:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9692:46:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9745:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9692:54:8","trueExpression":{"hexValue":"31","id":1770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9741:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1773,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9691:56:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"9682:65:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1752,"id":1775,"nodeType":"Return","src":"9675:72:8"}]}]},"documentation":{"id":1743,"nodeType":"StructuredDocumentation","src":"9372:142:8","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":1778,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nodeType":"FunctionDefinition","parameters":{"id":1749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1745,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":1778,"src":"9533:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1744,"name":"uint256","nodeType":"ElementaryTypeName","src":"9533:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1748,"mutability":"mutable","name":"rounding","nodeType":"VariableDeclaration","scope":1778,"src":"9548:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1212","typeString":"enum Math.Rounding"},"typeName":{"id":1747,"nodeType":"UserDefinedTypeName","pathNode":{"id":1746,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":1212,"src":"9548:8:8"},"referencedDeclaration":1212,"src":"9548:8:8","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1212","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9532:34:8"},"returnParameters":{"id":1752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1751,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1778,"src":"9590:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1750,"name":"uint256","nodeType":"ElementaryTypeName","src":"9590:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9589:9:8"},"scope":2070,"src":"9519:245:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1906,"nodeType":"Block","src":"9951:828:8","statements":[{"assignments":[1787],"declarations":[{"constant":false,"id":1787,"mutability":"mutable","name":"result","nodeType":"VariableDeclaration","scope":1906,"src":"9961:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1786,"name":"uint256","nodeType":"ElementaryTypeName","src":"9961:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1789,"initialValue":{"hexValue":"30","id":1788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9978:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9961:18:8"},{"id":1903,"nodeType":"UncheckedBlock","src":"9989:761:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1790,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1781,"src":"10017:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":1793,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10026:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":1792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10030:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10026:6:8","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10017:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1806,"nodeType":"IfStatement","src":"10013:99:8","trueBody":{"id":1805,"nodeType":"Block","src":"10034:78:8","statements":[{"expression":{"id":1799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1795,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1781,"src":"10052:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":1798,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10061:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":1797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10065:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10061:6:8","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10052:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1800,"nodeType":"ExpressionStatement","src":"10052:15:8"},{"expression":{"id":1803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1801,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1787,"src":"10085:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":1802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10095:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10085:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1804,"nodeType":"ExpressionStatement","src":"10085:12:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1807,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1781,"src":"10129:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":1810,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10138:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":1809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10142:2:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10138:6:8","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10129:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1823,"nodeType":"IfStatement","src":"10125:99:8","trueBody":{"id":1822,"nodeType":"Block","src":"10146:78:8","statements":[{"expression":{"id":1816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1812,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1781,"src":"10164:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":1815,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10173:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":1814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10177:2:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10173:6:8","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10164:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1817,"nodeType":"ExpressionStatement","src":"10164:15:8"},{"expression":{"id":1820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1818,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1787,"src":"10197:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":1819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10207:2:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10197:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1821,"nodeType":"ExpressionStatement","src":"10197:12:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1824,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1781,"src":"10241:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":1827,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10250:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":1826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10254:2:8","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10250:6:8","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10241:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1840,"nodeType":"IfStatement","src":"10237:99:8","trueBody":{"id":1839,"nodeType":"Block","src":"10258:78:8","statements":[{"expression":{"id":1833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1829,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1781,"src":"10276:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":1832,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1830,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10285:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":1831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10289:2:8","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10285:6:8","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10276:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1834,"nodeType":"ExpressionStatement","src":"10276:15:8"},{"expression":{"id":1837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1835,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1787,"src":"10309:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":1836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10319:2:8","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10309:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1838,"nodeType":"ExpressionStatement","src":"10309:12:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1841,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1781,"src":"10353:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":1844,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10362:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":1843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10366:1:8","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10362:5:8","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10353:14:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1857,"nodeType":"IfStatement","src":"10349:96:8","trueBody":{"id":1856,"nodeType":"Block","src":"10369:76:8","statements":[{"expression":{"id":1850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1846,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1781,"src":"10387:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":1849,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10396:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":1848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10400:1:8","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10396:5:8","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10387:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1851,"nodeType":"ExpressionStatement","src":"10387:14:8"},{"expression":{"id":1854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1852,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1787,"src":"10419:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":1853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10429:1:8","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10419:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1855,"nodeType":"ExpressionStatement","src":"10419:11:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1858,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1781,"src":"10462:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":1861,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10471:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":1860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10475:1:8","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10471:5:8","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10462:14:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1874,"nodeType":"IfStatement","src":"10458:96:8","trueBody":{"id":1873,"nodeType":"Block","src":"10478:76:8","statements":[{"expression":{"id":1867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1863,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1781,"src":"10496:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":1866,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10505:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":1865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10509:1:8","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10505:5:8","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10496:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1868,"nodeType":"ExpressionStatement","src":"10496:14:8"},{"expression":{"id":1871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1869,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1787,"src":"10528:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":1870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10538:1:8","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10528:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1872,"nodeType":"ExpressionStatement","src":"10528:11:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1875,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1781,"src":"10571:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":1878,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10580:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":1877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10584:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10580:5:8","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10571:14:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1891,"nodeType":"IfStatement","src":"10567:96:8","trueBody":{"id":1890,"nodeType":"Block","src":"10587:76:8","statements":[{"expression":{"id":1884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1880,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1781,"src":"10605:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":1883,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10614:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":1882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10618:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10614:5:8","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10605:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1885,"nodeType":"ExpressionStatement","src":"10605:14:8"},{"expression":{"id":1888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1886,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1787,"src":"10637:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":1887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10647:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10637:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1889,"nodeType":"ExpressionStatement","src":"10637:11:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1892,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1781,"src":"10680:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":1895,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10689:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":1894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10693:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10689:5:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"10680:14:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1902,"nodeType":"IfStatement","src":"10676:64:8","trueBody":{"id":1901,"nodeType":"Block","src":"10696:44:8","statements":[{"expression":{"id":1899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1897,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1787,"src":"10714:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10724:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10714:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1900,"nodeType":"ExpressionStatement","src":"10714:11:8"}]}}]},{"expression":{"id":1904,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1787,"src":"10766:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1785,"id":1905,"nodeType":"Return","src":"10759:13:8"}]},"documentation":{"id":1779,"nodeType":"StructuredDocumentation","src":"9770:114:8","text":" @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."},"id":1907,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nodeType":"FunctionDefinition","parameters":{"id":1782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1781,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":1907,"src":"9904:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1780,"name":"uint256","nodeType":"ElementaryTypeName","src":"9904:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9903:15:8"},"returnParameters":{"id":1785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1784,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1907,"src":"9942:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1783,"name":"uint256","nodeType":"ElementaryTypeName","src":"9942:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9941:9:8"},"scope":2070,"src":"9889:890:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1942,"nodeType":"Block","src":"11014:165:8","statements":[{"id":1941,"nodeType":"UncheckedBlock","src":"11024:149:8","statements":[{"assignments":[1919],"declarations":[{"constant":false,"id":1919,"mutability":"mutable","name":"result","nodeType":"VariableDeclaration","scope":1941,"src":"11048:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1918,"name":"uint256","nodeType":"ElementaryTypeName","src":"11048:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1923,"initialValue":{"arguments":[{"id":1921,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1910,"src":"11071:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1920,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[1907,1943],"referencedDeclaration":1907,"src":"11065:5:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11065:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11048:29:8"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1924,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1919,"src":"11098:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$1212","typeString":"enum Math.Rounding"},"id":1928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1925,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1913,"src":"11108:8:8","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1212","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1926,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1212,"src":"11120:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$1212_$","typeString":"type(enum Math.Rounding)"}},"id":1927,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","src":"11120:11:8","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1212","typeString":"enum Math.Rounding"}},"src":"11108:23:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11135:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":1930,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1919,"src":"11139:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11135:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1932,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1910,"src":"11148:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11135:18:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11108:45:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11160:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"11108:53:8","trueExpression":{"hexValue":"31","id":1935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11156:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1938,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11107:55:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11098:64:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1917,"id":1940,"nodeType":"Return","src":"11091:71:8"}]}]},"documentation":{"id":1908,"nodeType":"StructuredDocumentation","src":"10785:143:8","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":1943,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nodeType":"FunctionDefinition","parameters":{"id":1914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1910,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":1943,"src":"10948:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1909,"name":"uint256","nodeType":"ElementaryTypeName","src":"10948:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1913,"mutability":"mutable","name":"rounding","nodeType":"VariableDeclaration","scope":1943,"src":"10963:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1212","typeString":"enum Math.Rounding"},"typeName":{"id":1912,"nodeType":"UserDefinedTypeName","pathNode":{"id":1911,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":1212,"src":"10963:8:8"},"referencedDeclaration":1212,"src":"10963:8:8","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1212","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"10947:34:8"},"returnParameters":{"id":1917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1916,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1943,"src":"11005:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1915,"name":"uint256","nodeType":"ElementaryTypeName","src":"11005:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11004:9:8"},"scope":2070,"src":"10933:246:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2029,"nodeType":"Block","src":"11493:600:8","statements":[{"assignments":[1952],"declarations":[{"constant":false,"id":1952,"mutability":"mutable","name":"result","nodeType":"VariableDeclaration","scope":2029,"src":"11503:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1951,"name":"uint256","nodeType":"ElementaryTypeName","src":"11503:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1954,"initialValue":{"hexValue":"30","id":1953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11520:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11503:18:8"},{"id":2026,"nodeType":"UncheckedBlock","src":"11531:533:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1955,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1946,"src":"11559:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":1956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11568:3:8","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11559:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11574:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11559:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1969,"nodeType":"IfStatement","src":"11555:98:8","trueBody":{"id":1968,"nodeType":"Block","src":"11577:76:8","statements":[{"expression":{"id":1962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1960,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1946,"src":"11595:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":1961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11605:3:8","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11595:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1963,"nodeType":"ExpressionStatement","src":"11595:13:8"},{"expression":{"id":1966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1964,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1952,"src":"11626:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":1965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11636:2:8","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11626:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1967,"nodeType":"ExpressionStatement","src":"11626:12:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1970,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1946,"src":"11670:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":1971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11679:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11670:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11684:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11670:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1984,"nodeType":"IfStatement","src":"11666:95:8","trueBody":{"id":1983,"nodeType":"Block","src":"11687:74:8","statements":[{"expression":{"id":1977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1975,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1946,"src":"11705:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":1976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11715:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11705:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1978,"nodeType":"ExpressionStatement","src":"11705:12:8"},{"expression":{"id":1981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1979,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1952,"src":"11735:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":1980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11745:1:8","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11735:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1982,"nodeType":"ExpressionStatement","src":"11735:11:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1985,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1946,"src":"11778:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":1986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11787:2:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11778:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11792:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11778:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1999,"nodeType":"IfStatement","src":"11774:95:8","trueBody":{"id":1998,"nodeType":"Block","src":"11795:74:8","statements":[{"expression":{"id":1992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1990,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1946,"src":"11813:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":1991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11823:2:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11813:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1993,"nodeType":"ExpressionStatement","src":"11813:12:8"},{"expression":{"id":1996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1994,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1952,"src":"11843:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":1995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11853:1:8","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11843:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1997,"nodeType":"ExpressionStatement","src":"11843:11:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2000,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1946,"src":"11886:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":2001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11895:2:8","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11886:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11900:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11886:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2014,"nodeType":"IfStatement","src":"11882:95:8","trueBody":{"id":2013,"nodeType":"Block","src":"11903:74:8","statements":[{"expression":{"id":2007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2005,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1946,"src":"11921:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":2006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11931:2:8","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11921:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2008,"nodeType":"ExpressionStatement","src":"11921:12:8"},{"expression":{"id":2011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2009,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1952,"src":"11951:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11961:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11951:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2012,"nodeType":"ExpressionStatement","src":"11951:11:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2015,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1946,"src":"11994:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":2016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12003:1:8","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11994:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12007:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11994:14:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2025,"nodeType":"IfStatement","src":"11990:64:8","trueBody":{"id":2024,"nodeType":"Block","src":"12010:44:8","statements":[{"expression":{"id":2022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2020,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1952,"src":"12028:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12038:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12028:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2023,"nodeType":"ExpressionStatement","src":"12028:11:8"}]}}]},{"expression":{"id":2027,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1952,"src":"12080:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1950,"id":2028,"nodeType":"Return","src":"12073:13:8"}]},"documentation":{"id":1944,"nodeType":"StructuredDocumentation","src":"11185:240:8","text":" @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":2030,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nodeType":"FunctionDefinition","parameters":{"id":1947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1946,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":2030,"src":"11446:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1945,"name":"uint256","nodeType":"ElementaryTypeName","src":"11446:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11445:15:8"},"returnParameters":{"id":1950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1949,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2030,"src":"11484:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1948,"name":"uint256","nodeType":"ElementaryTypeName","src":"11484:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11483:9:8"},"scope":2070,"src":"11430:663:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2068,"nodeType":"Block","src":"12329:173:8","statements":[{"id":2067,"nodeType":"UncheckedBlock","src":"12339:157:8","statements":[{"assignments":[2042],"declarations":[{"constant":false,"id":2042,"mutability":"mutable","name":"result","nodeType":"VariableDeclaration","scope":2067,"src":"12363:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2041,"name":"uint256","nodeType":"ElementaryTypeName","src":"12363:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2046,"initialValue":{"arguments":[{"id":2044,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2033,"src":"12387:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2043,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[2030,2069],"referencedDeclaration":2030,"src":"12380:6:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12380:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12363:30:8"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2047,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2042,"src":"12414:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$1212","typeString":"enum Math.Rounding"},"id":2051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2048,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2036,"src":"12424:8:8","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1212","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2049,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1212,"src":"12436:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$1212_$","typeString":"type(enum Math.Rounding)"}},"id":2050,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","src":"12436:11:8","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1212","typeString":"enum Math.Rounding"}},"src":"12424:23:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12451:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2053,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2042,"src":"12457:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"38","id":2054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12466:1:8","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12457:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2056,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12456:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12451:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2058,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2033,"src":"12471:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12451:25:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12424:52:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12483:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12424:60:8","trueExpression":{"hexValue":"31","id":2061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12479:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2064,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12423:62:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12414:71:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2040,"id":2066,"nodeType":"Return","src":"12407:78:8"}]}]},"documentation":{"id":2031,"nodeType":"StructuredDocumentation","src":"12099:143:8","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2069,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nodeType":"FunctionDefinition","parameters":{"id":2037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2033,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":2069,"src":"12263:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2032,"name":"uint256","nodeType":"ElementaryTypeName","src":"12263:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2036,"mutability":"mutable","name":"rounding","nodeType":"VariableDeclaration","scope":2069,"src":"12278:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1212","typeString":"enum Math.Rounding"},"typeName":{"id":2035,"nodeType":"UserDefinedTypeName","pathNode":{"id":2034,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":1212,"src":"12278:8:8"},"referencedDeclaration":1212,"src":"12278:8:8","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1212","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"12262:34:8"},"returnParameters":{"id":2040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2039,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2069,"src":"12320:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2038,"name":"uint256","nodeType":"ElementaryTypeName","src":"12320:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12319:9:8"},"scope":2070,"src":"12247:255:8","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2071,"src":"202:12302:8"}],"src":"103:12402:8"},"id":8},"contracts/GPURegistration.sol":{"ast":{"absolutePath":"contracts/GPURegistration.sol","exportedSymbols":{"Address":[564],"Context":[586],"ECDSA":[1122],"GPURegistration":[2231],"IERC1271":[126],"Math":[2070],"Ownable":[112],"Pausable":[234],"SignatureChecker":[1205],"Strings":[761]},"id":2232,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2072,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"32:23:9"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":2073,"nodeType":"ImportDirective","scope":2232,"sourceUnit":113,"src":"57:52:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/security/Pausable.sol","file":"@openzeppelin/contracts/security/Pausable.sol","id":2074,"nodeType":"ImportDirective","scope":2232,"sourceUnit":235,"src":"110:55:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol","file":"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol","id":2075,"nodeType":"ImportDirective","scope":2232,"sourceUnit":1206,"src":"166:73:9","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2076,"name":"Ownable","nodeType":"IdentifierPath","referencedDeclaration":112,"src":"269:7:9"},"id":2077,"nodeType":"InheritanceSpecifier","src":"269:7:9"},{"baseName":{"id":2078,"name":"Pausable","nodeType":"IdentifierPath","referencedDeclaration":234,"src":"278:8:9"},"id":2079,"nodeType":"InheritanceSpecifier","src":"278:8:9"}],"contractDependencies":[112,234,586],"contractKind":"contract","fullyImplemented":true,"id":2231,"linearizedBaseContracts":[2231,234,112,586],"name":"GPURegistration","nodeType":"ContractDefinition","nodes":[{"canonicalName":"GPURegistration.GPU","id":2086,"members":[{"constant":false,"id":2081,"mutability":"mutable","name":"uniqueIdentifier","nodeType":"VariableDeclaration","scope":2086,"src":"314:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2080,"name":"string","nodeType":"ElementaryTypeName","src":"314:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2083,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":2086,"src":"347:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2082,"name":"address","nodeType":"ElementaryTypeName","src":"347:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2085,"mutability":"mutable","name":"isRegistered","nodeType":"VariableDeclaration","scope":2086,"src":"370:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2084,"name":"bool","nodeType":"ElementaryTypeName","src":"370:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"GPU","nodeType":"StructDefinition","scope":2231,"src":"293:101:9","visibility":"public"},{"constant":false,"functionSelector":"88e26b20","id":2091,"mutability":"mutable","name":"gpus","nodeType":"VariableDeclaration","scope":2231,"src":"400:34:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_GPU_$2086_storage_$","typeString":"mapping(string => struct GPURegistration.GPU)"},"typeName":{"id":2090,"keyType":{"id":2087,"name":"string","nodeType":"ElementaryTypeName","src":"408:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"nodeType":"Mapping","src":"400:22:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_GPU_$2086_storage_$","typeString":"mapping(string => struct GPURegistration.GPU)"},"valueType":{"id":2089,"nodeType":"UserDefinedTypeName","pathNode":{"id":2088,"name":"GPU","nodeType":"IdentifierPath","referencedDeclaration":2086,"src":"418:3:9"},"referencedDeclaration":2086,"src":"418:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_GPU_$2086_storage_ptr","typeString":"struct GPURegistration.GPU"}}},"visibility":"public"},{"anonymous":false,"id":2097,"name":"GPURegistered","nodeType":"EventDefinition","parameters":{"id":2096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2093,"indexed":false,"mutability":"mutable","name":"uniqueIdentifier","nodeType":"VariableDeclaration","scope":2097,"src":"461:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2092,"name":"string","nodeType":"ElementaryTypeName","src":"461:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2095,"indexed":false,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":2097,"src":"486:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2094,"name":"address","nodeType":"ElementaryTypeName","src":"486:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"460:40:9"},"src":"441:60:9"},{"anonymous":false,"id":2105,"name":"GPUTransferred","nodeType":"EventDefinition","parameters":{"id":2104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2099,"indexed":false,"mutability":"mutable","name":"uniqueIdentifier","nodeType":"VariableDeclaration","scope":2105,"src":"527:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2098,"name":"string","nodeType":"ElementaryTypeName","src":"527:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2101,"indexed":false,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":2105,"src":"552:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2100,"name":"address","nodeType":"ElementaryTypeName","src":"552:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2103,"indexed":false,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":2105,"src":"566:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2102,"name":"address","nodeType":"ElementaryTypeName","src":"566:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"526:51:9"},"src":"506:72:9"},{"body":{"id":2156,"nodeType":"Block","src":"1457:594:9","statements":[{"expression":{"arguments":[{"id":2119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1488:37:9","subExpression":{"expression":{"baseExpression":{"id":2115,"name":"gpus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2091,"src":"1489:4:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_GPU_$2086_storage_$","typeString":"mapping(string memory => struct GPURegistration.GPU storage ref)"}},"id":2117,"indexExpression":{"id":2116,"name":"_uniqueIdentifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2107,"src":"1494:17:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1489:23:9","typeDescriptions":{"typeIdentifier":"t_struct$_GPU_$2086_storage","typeString":"struct GPURegistration.GPU storage ref"}},"id":2118,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"isRegistered","nodeType":"MemberAccess","referencedDeclaration":2085,"src":"1489:36:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546869732047505520697320616c726561647920726567697374657265642e","id":2120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1539:33:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_d20dda5743a441e01b3941efede44ce1b79001dfe973ed914209ad52f646d8a7","typeString":"literal_string \"This GPU is already registered.\""},"value":"This GPU is already registered."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d20dda5743a441e01b3941efede44ce1b79001dfe973ed914209ad52f646d8a7","typeString":"literal_string \"This GPU is already registered.\""}],"id":2114,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1467:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1467:115:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2122,"nodeType":"ExpressionStatement","src":"1467:115:9"},{"assignments":[2124],"declarations":[{"constant":false,"id":2124,"mutability":"mutable","name":"expectedSignature","nodeType":"VariableDeclaration","scope":2156,"src":"1681:25:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2123,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1681:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2131,"initialValue":{"arguments":[{"arguments":[{"id":2128,"name":"_uniqueIdentifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2107,"src":"1749:17:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2126,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1732:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2127,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"1732:16:9","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1732:35:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2125,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1709:9:9","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1709:68:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1681:96:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2133,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2109,"src":"1808:9:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2134,"name":"expectedSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2124,"src":"1821:17:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1808:30:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5369676e617475726520646f6573206e6f74206d61746368207468652065787065637465642076616c75652e","id":2136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1852:46:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_5c03d679ba36195a4b4787c361ed9e7d61953d3e452278030d1edd360e6feec2","typeString":"literal_string \"Signature does not match the expected value.\""},"value":"Signature does not match the expected value."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5c03d679ba36195a4b4787c361ed9e7d61953d3e452278030d1edd360e6feec2","typeString":"literal_string \"Signature does not match the expected value.\""}],"id":2132,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1787:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1787:121:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2138,"nodeType":"ExpressionStatement","src":"1787:121:9"},{"expression":{"id":2148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2139,"name":"gpus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2091,"src":"1919:4:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_GPU_$2086_storage_$","typeString":"mapping(string memory => struct GPURegistration.GPU storage ref)"}},"id":2141,"indexExpression":{"id":2140,"name":"_uniqueIdentifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2107,"src":"1924:17:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1919:23:9","typeDescriptions":{"typeIdentifier":"t_struct$_GPU_$2086_storage","typeString":"struct GPURegistration.GPU storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2143,"name":"_uniqueIdentifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2107,"src":"1949:17:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":2144,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1968:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1968:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"74727565","id":2146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1980:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2142,"name":"GPU","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2086,"src":"1945:3:9","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_GPU_$2086_storage_ptr_$","typeString":"type(struct GPURegistration.GPU storage pointer)"}},"id":2147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1945:40:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_GPU_$2086_memory_ptr","typeString":"struct GPURegistration.GPU memory"}},"src":"1919:66:9","typeDescriptions":{"typeIdentifier":"t_struct$_GPU_$2086_storage","typeString":"struct GPURegistration.GPU storage ref"}},"id":2149,"nodeType":"ExpressionStatement","src":"1919:66:9"},{"eventCall":{"arguments":[{"id":2151,"name":"_uniqueIdentifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2107,"src":"2014:17:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":2152,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2033:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2033:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2150,"name":"GPURegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2097,"src":"2000:13:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$","typeString":"function (string memory,address)"}},"id":2154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2000:44:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2155,"nodeType":"EmitStatement","src":"1995:49:9"}]},"functionSelector":"1c3d06ef","id":2157,"implemented":true,"kind":"function","modifiers":[{"id":2112,"modifierName":{"id":2111,"name":"whenNotPaused","nodeType":"IdentifierPath","referencedDeclaration":161,"src":"1443:13:9"},"nodeType":"ModifierInvocation","src":"1443:13:9"}],"name":"registerGPU","nodeType":"FunctionDefinition","parameters":{"id":2110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2107,"mutability":"mutable","name":"_uniqueIdentifier","nodeType":"VariableDeclaration","scope":2157,"src":"1371:31:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2106,"name":"string","nodeType":"ElementaryTypeName","src":"1371:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2109,"mutability":"mutable","name":"signature","nodeType":"VariableDeclaration","scope":2157,"src":"1412:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2108,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1412:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1361:74:9"},"returnParameters":{"id":2113,"nodeType":"ParameterList","parameters":[],"src":"1457:0:9"},"scope":2231,"src":"1341:710:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2191,"nodeType":"Block","src":"2173:273:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":2167,"name":"gpus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2091,"src":"2204:4:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_GPU_$2086_storage_$","typeString":"mapping(string memory => struct GPURegistration.GPU storage ref)"}},"id":2169,"indexExpression":{"id":2168,"name":"_uniqueIdentifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2159,"src":"2209:17:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2204:23:9","typeDescriptions":{"typeIdentifier":"t_struct$_GPU_$2086_storage","typeString":"struct GPURegistration.GPU storage ref"}},"id":2170,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":2083,"src":"2204:29:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2171,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2237:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2237:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2204:43:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c79207468652063757272656e74206f776e65722063616e207472616e7366657220746865204750552e","id":2174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2261:46:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_d00a3bd173f99c5cbacfac93327b512a487b9ecd9c791d50435d6d89c5c624ca","typeString":"literal_string \"Only the current owner can transfer the GPU.\""},"value":"Only the current owner can transfer the GPU."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d00a3bd173f99c5cbacfac93327b512a487b9ecd9c791d50435d6d89c5c624ca","typeString":"literal_string \"Only the current owner can transfer the GPU.\""}],"id":2166,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2183:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2175,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2183:134:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2176,"nodeType":"ExpressionStatement","src":"2183:134:9"},{"expression":{"id":2182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2177,"name":"gpus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2091,"src":"2327:4:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_GPU_$2086_storage_$","typeString":"mapping(string memory => struct GPURegistration.GPU storage ref)"}},"id":2179,"indexExpression":{"id":2178,"name":"_uniqueIdentifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2159,"src":"2332:17:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2327:23:9","typeDescriptions":{"typeIdentifier":"t_struct$_GPU_$2086_storage","typeString":"struct GPURegistration.GPU storage ref"}},"id":2180,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":2083,"src":"2327:29:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2181,"name":"_newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2161,"src":"2359:9:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2327:41:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2183,"nodeType":"ExpressionStatement","src":"2327:41:9"},{"eventCall":{"arguments":[{"id":2185,"name":"_uniqueIdentifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2159,"src":"2398:17:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":2186,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2417:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2417:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2188,"name":"_newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2161,"src":"2429:9:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2184,"name":"GPUTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2105,"src":"2383:14:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$_t_address_$returns$__$","typeString":"function (string memory,address,address)"}},"id":2189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2383:56:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2190,"nodeType":"EmitStatement","src":"2378:61:9"}]},"functionSelector":"e71a3641","id":2192,"implemented":true,"kind":"function","modifiers":[{"id":2164,"modifierName":{"id":2163,"name":"whenNotPaused","nodeType":"IdentifierPath","referencedDeclaration":161,"src":"2159:13:9"},"nodeType":"ModifierInvocation","src":"2159:13:9"}],"name":"transferGPU","nodeType":"FunctionDefinition","parameters":{"id":2162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2159,"mutability":"mutable","name":"_uniqueIdentifier","nodeType":"VariableDeclaration","scope":2192,"src":"2087:31:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2158,"name":"string","nodeType":"ElementaryTypeName","src":"2087:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2161,"mutability":"mutable","name":"_newOwner","nodeType":"VariableDeclaration","scope":2192,"src":"2128:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2160,"name":"address","nodeType":"ElementaryTypeName","src":"2128:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2077:74:9"},"returnParameters":{"id":2165,"nodeType":"ParameterList","parameters":[],"src":"2173:0:9"},"scope":2231,"src":"2057:389:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2211,"nodeType":"Block","src":"2554:127:9","statements":[{"expression":{"components":[{"expression":{"baseExpression":{"id":2201,"name":"gpus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2091,"src":"2585:4:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_GPU_$2086_storage_$","typeString":"mapping(string memory => struct GPURegistration.GPU storage ref)"}},"id":2203,"indexExpression":{"id":2202,"name":"_uniqueIdentifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2194,"src":"2590:17:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2585:23:9","typeDescriptions":{"typeIdentifier":"t_struct$_GPU_$2086_storage","typeString":"struct GPURegistration.GPU storage ref"}},"id":2204,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"isRegistered","nodeType":"MemberAccess","referencedDeclaration":2085,"src":"2585:36:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"baseExpression":{"id":2205,"name":"gpus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2091,"src":"2635:4:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_GPU_$2086_storage_$","typeString":"mapping(string memory => struct GPURegistration.GPU storage ref)"}},"id":2207,"indexExpression":{"id":2206,"name":"_uniqueIdentifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2194,"src":"2640:17:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2635:23:9","typeDescriptions":{"typeIdentifier":"t_struct$_GPU_$2086_storage","typeString":"struct GPURegistration.GPU storage ref"}},"id":2208,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":2083,"src":"2635:29:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2209,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2571:103:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2200,"id":2210,"nodeType":"Return","src":"2564:110:9"}]},"functionSelector":"601cf7b6","id":2212,"implemented":true,"kind":"function","modifiers":[],"name":"verifyGPU","nodeType":"FunctionDefinition","parameters":{"id":2195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2194,"mutability":"mutable","name":"_uniqueIdentifier","nodeType":"VariableDeclaration","scope":2212,"src":"2480:31:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2193,"name":"string","nodeType":"ElementaryTypeName","src":"2480:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2470:47:9"},"returnParameters":{"id":2200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2197,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2212,"src":"2539:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2196,"name":"bool","nodeType":"ElementaryTypeName","src":"2539:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2199,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2212,"src":"2545:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2198,"name":"address","nodeType":"ElementaryTypeName","src":"2545:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2538:15:9"},"scope":2231,"src":"2452:229:9","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2220,"nodeType":"Block","src":"2721:25:9","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2217,"name":"_pause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":217,"src":"2731:6:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2731:8:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2219,"nodeType":"ExpressionStatement","src":"2731:8:9"}]},"functionSelector":"8456cb59","id":2221,"implemented":true,"kind":"function","modifiers":[{"id":2215,"modifierName":{"id":2214,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"2711:9:9"},"nodeType":"ModifierInvocation","src":"2711:9:9"}],"name":"pause","nodeType":"FunctionDefinition","parameters":{"id":2213,"nodeType":"ParameterList","parameters":[],"src":"2701:2:9"},"returnParameters":{"id":2216,"nodeType":"ParameterList","parameters":[],"src":"2721:0:9"},"scope":2231,"src":"2687:59:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2229,"nodeType":"Block","src":"2788:27:9","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2226,"name":"_unpause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":233,"src":"2798:8:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2798:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2228,"nodeType":"ExpressionStatement","src":"2798:10:9"}]},"functionSelector":"3f4ba83a","id":2230,"implemented":true,"kind":"function","modifiers":[{"id":2224,"modifierName":{"id":2223,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"2778:9:9"},"nodeType":"ModifierInvocation","src":"2778:9:9"}],"name":"unpause","nodeType":"FunctionDefinition","parameters":{"id":2222,"nodeType":"ParameterList","parameters":[],"src":"2768:2:9"},"returnParameters":{"id":2225,"nodeType":"ParameterList","parameters":[],"src":"2788:0:9"},"scope":2231,"src":"2752:63:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":2232,"src":"241:2576:9"}],"src":"32:2786:9"},"id":9}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC1271.sol":{"IERC1271":{"abi":[{"inputs":[{"internalType":"bytes32","name":"hash","type":"bytes32"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"isValidSignature","outputs":[{"internalType":"bytes4","name":"magicValue","type":"bytes4"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"isValidSignature(bytes32,bytes)":"1626ba7e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"magicValue\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC1271 standard signature validation method for contracts as defined in https://eips.ethereum.org/EIPS/eip-1271[ERC-1271]. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"isValidSignature(bytes32,bytes)\":{\"details\":\"Should return whether the signature provided is valid for the provided data\",\"params\":{\"hash\":\"Hash of the data to be signed\",\"signature\":\"Signature byte array associated with _data\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1271.sol\":\"IERC1271\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1271.sol\":{\"keccak256\":\"0x0705a4b1b86d7b0bd8432118f226ba139c44b9dcaba0a6eafba2dd7d0639c544\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c45b821ef9e882e57c256697a152e108f0f2ad6997609af8904cae99c9bd422e\",\"dweb:/ipfs/QmRKCJW6jjzR5UYZcLpGnhEJ75UVbH6EHkEa49sWx2SKng\"]}},\"version\":1}"}},"@openzeppelin/contracts/security/Pausable.sol":{"Pausable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"paused()":"5c975abb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209dff63ca504e6b4edd509288a90c2e00c70892c617dfb0b226068df58d7ba8fa64736f6c63430008010033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP14 SELFDESTRUCT PUSH4 0xCA504E6B 0x4E 0xDD POP SWAP3 DUP9 0xA9 0xC 0x2E STOP 0xC7 ADDMOD SWAP3 0xC6 OR 0xDF 0xB0 0xB2 0x26 MOD DUP14 CREATE2 DUP14 PUSH28 0xA8FA64736F6C63430008010033000000000000000000000000000000 ","sourceMap":"194:8964:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209dff63ca504e6b4edd509288a90c2e00c70892c617dfb0b226068df58d7ba8fa64736f6c63430008010033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP14 SELFDESTRUCT PUSH4 0xCA504E6B 0x4E 0xDD POP SWAP3 DUP9 0xA9 0xC 0x2E STOP 0xC7 ADDMOD SWAP3 0xC6 OR 0xDF 0xB0 0xB2 0x26 MOD DUP14 CREATE2 DUP14 PUSH28 0xA8FA64736F6C63430008010033000000000000000000000000000000 ","sourceMap":"194:8964:3:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122023aed7289fe0eea834da0c650a6ed89ec0b61ad8dd23b79706d687e58d35664264736f6c63430008010033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x23 0xAE 0xD7 0x28 SWAP16 0xE0 0xEE 0xA8 CALLVALUE 0xDA 0xC PUSH6 0xA6ED89EC0B6 BYTE 0xD8 0xDD 0x23 0xB7 SWAP8 MOD 0xD6 DUP8 0xE5 DUP14 CALLDATALOAD PUSH7 0x4264736F6C6343 STOP ADDMOD ADD STOP CALLER ","sourceMap":"188:2065:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122023aed7289fe0eea834da0c650a6ed89ec0b61ad8dd23b79706d687e58d35664264736f6c63430008010033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x23 0xAE 0xD7 0x28 SWAP16 0xE0 0xEE 0xA8 CALLVALUE 0xDA 0xC PUSH6 0xA6ED89EC0B6 BYTE 0xD8 0xDD 0x23 0xB7 SWAP8 MOD 0xD6 DUP8 0xE5 DUP14 CALLDATALOAD PUSH7 0x4264736F6C6343 STOP ADDMOD ADD STOP CALLER ","sourceMap":"188:2065:5:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c73875fbc7fd32b7ce7d318e747035be509a156ec8bea5de10b2865d6707993e64736f6c63430008010033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC7 CODESIZE PUSH22 0xFBC7FD32B7CE7D318E747035BE509A156EC8BEA5DE10 0xB2 DUP7 0x5D PUSH8 0x7993E64736F6C63 NUMBER STOP ADDMOD ADD STOP CALLER ","sourceMap":"369:8168:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c73875fbc7fd32b7ce7d318e747035be509a156ec8bea5de10b2865d6707993e64736f6c63430008010033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC7 CODESIZE PUSH22 0xFBC7FD32B7CE7D318E747035BE509A156EC8BEA5DE10 0xB2 DUP7 0x5D PUSH8 0x7993E64736F6C63 NUMBER STOP ADDMOD ADD STOP CALLER ","sourceMap":"369:8168:6:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce501a941f4aa1555c04dabb5e07992503bb6a9b32ff8f7cdcefdb4a742210cb\",\"dweb:/ipfs/QmeScPrUpdrGYs9BytV3Z5ZWJcBXtuAgCW4BLHua4xFUxx\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol":{"SignatureChecker":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220877870252deca8080bbe754bd451193db6b58d3e32152bf29cc3a1e51ddd8dca64736f6c63430008010033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP8 PUSH25 0x70252DECA8080BBE754BD451193DB6B58D3E32152BF29CC3A1 0xE5 SAR 0xDD DUP14 0xCA PUSH5 0x736F6C6343 STOP ADDMOD ADD STOP CALLER ","sourceMap":"531:1177:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220877870252deca8080bbe754bd451193db6b58d3e32152bf29cc3a1e51ddd8dca64736f6c63430008010033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP8 PUSH25 0x70252DECA8080BBE754BD451193DB6B58D3E32152BF29CC3A1 0xE5 SAR 0xDD DUP14 0xCA PUSH5 0x736F6C6343 STOP ADDMOD ADD STOP CALLER ","sourceMap":"531:1177:7:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature verification helper that can be used instead of `ECDSA.recover` to seamlessly support both ECDSA signatures from externally owned accounts (EOAs) as well as ERC1271 signatures from smart contract wallets like Argent and Gnosis Safe. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":\"SignatureChecker\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1271.sol\":{\"keccak256\":\"0x0705a4b1b86d7b0bd8432118f226ba139c44b9dcaba0a6eafba2dd7d0639c544\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c45b821ef9e882e57c256697a152e108f0f2ad6997609af8904cae99c9bd422e\",\"dweb:/ipfs/QmRKCJW6jjzR5UYZcLpGnhEJ75UVbH6EHkEa49sWx2SKng\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce501a941f4aa1555c04dabb5e07992503bb6a9b32ff8f7cdcefdb4a742210cb\",\"dweb:/ipfs/QmeScPrUpdrGYs9BytV3Z5ZWJcBXtuAgCW4BLHua4xFUxx\"]},\"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":{\"keccak256\":\"0xbc8d1f66b26e211a1f6f40a17453e9d5020ec96749014379205cff100809884c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b9c056a3068bb6fe41b28239bd71acd3a5249d23ed089c874182a4e3d7e47df1\",\"dweb:/ipfs/QmdFFG7dxiZ5jBaaYDXPMiKVG9rNoMhvR7cBt5997E2pat\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200beb40c10767a43124ec6d866442df5a4f498fecee2511226d714fde930a8cb664736f6c63430008010033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SIGNEXTEND 0xEB BLOCKHASH 0xC1 SMOD PUSH8 0xA43124EC6D866442 0xDF GAS 0x4F 0x49 DUP16 0xEC 0xEE 0x25 GT 0x22 PUSH14 0x714FDE930A8CB664736F6C634300 ADDMOD ADD STOP CALLER ","sourceMap":"202:12302:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200beb40c10767a43124ec6d866442df5a4f498fecee2511226d714fde930a8cb664736f6c63430008010033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SIGNEXTEND 0xEB BLOCKHASH 0xC1 SMOD PUSH8 0xA43124EC6D866442 0xDF GAS 0x4F 0x49 DUP16 0xEC 0xEE 0x25 GT 0x22 PUSH14 0x714FDE930A8CB664736F6C634300 ADDMOD ADD STOP CALLER ","sourceMap":"202:12302:8:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}"}},"contracts/GPURegistration.sol":{"GPURegistration":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"uniqueIdentifier","type":"string"},{"indexed":false,"internalType":"address","name":"owner","type":"address"}],"name":"GPURegistered","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"uniqueIdentifier","type":"string"},{"indexed":false,"internalType":"address","name":"from","type":"address"},{"indexed":false,"internalType":"address","name":"to","type":"address"}],"name":"GPUTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[{"internalType":"string","name":"","type":"string"}],"name":"gpus","outputs":[{"internalType":"string","name":"uniqueIdentifier","type":"string"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"bool","name":"isRegistered","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_uniqueIdentifier","type":"string"},{"internalType":"bytes32","name":"signature","type":"bytes32"}],"name":"registerGPU","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"_uniqueIdentifier","type":"string"},{"internalType":"address","name":"_newOwner","type":"address"}],"name":"transferGPU","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"_uniqueIdentifier","type":"string"}],"name":"verifyGPU","outputs":[{"internalType":"bool","name":"","type":"bool"},{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b5061002d61002261004c60201b60201c565b61005460201b60201c565b60008060146101000a81548160ff021916908315150217905550610118565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6113a8806101276000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80638456cb59116100665780638456cb591461012257806388e26b201461012c5780638da5cb5b1461015e578063e71a36411461017c578063f2fde38b146101985761009e565b80631c3d06ef146100a35780633f4ba83a146100bf5780635c975abb146100c9578063601cf7b6146100e7578063715018a614610118575b600080fd5b6100bd60048036038101906100b89190610c07565b6101b4565b005b6100c76103af565b005b6100d16103c1565b6040516100de9190610e0a565b60405180910390f35b61010160048036038101906100fc9190610b72565b6103d7565b60405161010f929190610e25565b60405180910390f35b610120610454565b005b61012a610468565b005b61014660048036038101906101419190610b72565b61047a565b60405161015593929190610ebc565b60405180910390f35b61016661056f565b6040516101739190610def565b60405180910390f35b61019660048036038101906101919190610bb3565b610598565b005b6101b260048036038101906101ad9190610b49565b6106ee565b005b6101bc610772565b6001826040516101cc9190610dd8565b908152602001604051809103902060010160149054906101000a900460ff161561022b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022290610fba565b60405180910390fd5b60008260405160200161023e9190610dd8565b604051602081830303815290604052805190602001209050808214610298576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028f90610f3a565b60405180910390fd5b60405180606001604052808481526020013373ffffffffffffffffffffffffffffffffffffffff168152602001600115158152506001846040516102dc9190610dd8565b90815260200160405180910390206000820151816000019080519060200190610306929190610a14565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010160146101000a81548160ff0219169083151502179055509050507f2a3d1ecf2145022d783e1b64d9ced56a663fdc440b48d224c987d65097d5d46b83336040516103a2929190610e4e565b60405180910390a1505050565b6103b76107bc565b6103bf61083a565b565b60008060149054906101000a900460ff16905090565b6000806001836040516103ea9190610dd8565b908152602001604051809103902060010160149054906101000a900460ff166001846040516104199190610dd8565b908152602001604051809103902060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691509150915091565b61045c6107bc565b610466600061089c565b565b6104706107bc565b610478610960565b565b6001818051602081018201805184825260208301602085012081835280955050505050506000915090508060000180546104b3906110e1565b80601f01602080910402602001604051908101604052809291908181526020018280546104df906110e1565b801561052c5780601f106105015761010080835404028352916020019161052c565b820191906000526020600020905b81548152906001019060200180831161050f57829003601f168201915b5050505050908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160149054906101000a900460ff16905083565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6105a0610772565b3373ffffffffffffffffffffffffffffffffffffffff166001836040516105c79190610dd8565b908152602001604051809103902060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461064f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064690610f9a565b60405180910390fd5b806001836040516106609190610dd8565b908152602001604051809103902060010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fdd5f76176e04227ae82aa86ea74378ed4c5f60afb915676d6615246f8568afcd8233836040516106e293929190610e7e565b60405180910390a15050565b6106f66107bc565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610766576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075d90610f1a565b60405180910390fd5b61076f8161089c565b50565b61077a6103c1565b156107ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b190610f5a565b60405180910390fd5b565b6107c46109c3565b73ffffffffffffffffffffffffffffffffffffffff166107e261056f565b73ffffffffffffffffffffffffffffffffffffffff1614610838576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082f90610f7a565b60405180910390fd5b565b6108426109cb565b60008060146101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6108856109c3565b6040516108929190610def565b60405180910390a1565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610968610772565b6001600060146101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586109ac6109c3565b6040516109b99190610def565b60405180910390a1565b600033905090565b6109d36103c1565b610a12576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a0990610efa565b60405180910390fd5b565b828054610a20906110e1565b90600052602060002090601f016020900481019282610a425760008555610a89565b82601f10610a5b57805160ff1916838001178555610a89565b82800160010185558215610a89579182015b82811115610a88578251825591602001919060010190610a6d565b5b509050610a969190610a9a565b5090565b5b80821115610ab3576000816000905550600101610a9b565b5090565b6000610aca610ac584610fff565b610fda565b905082815260208101848484011115610ae257600080fd5b610aed84828561109f565b509392505050565b600081359050610b0481611344565b92915050565b600081359050610b198161135b565b92915050565b600082601f830112610b3057600080fd5b8135610b40848260208601610ab7565b91505092915050565b600060208284031215610b5b57600080fd5b6000610b6984828501610af5565b91505092915050565b600060208284031215610b8457600080fd5b600082013567ffffffffffffffff811115610b9e57600080fd5b610baa84828501610b1f565b91505092915050565b60008060408385031215610bc657600080fd5b600083013567ffffffffffffffff811115610be057600080fd5b610bec85828601610b1f565b9250506020610bfd85828601610af5565b9150509250929050565b60008060408385031215610c1a57600080fd5b600083013567ffffffffffffffff811115610c3457600080fd5b610c4085828601610b1f565b9250506020610c5185828601610b0a565b9150509250929050565b610c6481611057565b82525050565b610c7381611069565b82525050565b6000610c8482611030565b610c8e818561103b565b9350610c9e8185602086016110ae565b610ca7816111a2565b840191505092915050565b6000610cbd82611030565b610cc7818561104c565b9350610cd78185602086016110ae565b80840191505092915050565b6000610cf060148361103b565b9150610cfb826111b3565b602082019050919050565b6000610d1360268361103b565b9150610d1e826111dc565b604082019050919050565b6000610d36602c8361103b565b9150610d418261122b565b604082019050919050565b6000610d5960108361103b565b9150610d648261127a565b602082019050919050565b6000610d7c60208361103b565b9150610d87826112a3565b602082019050919050565b6000610d9f602c8361103b565b9150610daa826112cc565b604082019050919050565b6000610dc2601f8361103b565b9150610dcd8261131b565b602082019050919050565b6000610de48284610cb2565b915081905092915050565b6000602082019050610e046000830184610c5b565b92915050565b6000602082019050610e1f6000830184610c6a565b92915050565b6000604082019050610e3a6000830185610c6a565b610e476020830184610c5b565b9392505050565b60006040820190508181036000830152610e688185610c79565b9050610e776020830184610c5b565b9392505050565b60006060820190508181036000830152610e988186610c79565b9050610ea76020830185610c5b565b610eb46040830184610c5b565b949350505050565b60006060820190508181036000830152610ed68186610c79565b9050610ee56020830185610c5b565b610ef26040830184610c6a565b949350505050565b60006020820190508181036000830152610f1381610ce3565b9050919050565b60006020820190508181036000830152610f3381610d06565b9050919050565b60006020820190508181036000830152610f5381610d29565b9050919050565b60006020820190508181036000830152610f7381610d4c565b9050919050565b60006020820190508181036000830152610f9381610d6f565b9050919050565b60006020820190508181036000830152610fb381610d92565b9050919050565b60006020820190508181036000830152610fd381610db5565b9050919050565b6000610fe4610ff5565b9050610ff08282611113565b919050565b6000604051905090565b600067ffffffffffffffff82111561101a57611019611173565b5b611023826111a2565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b60006110628261107f565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b82818337600083830152505050565b60005b838110156110cc5780820151818401526020810190506110b1565b838111156110db576000848401525b50505050565b600060028204905060018216806110f957607f821691505b6020821081141561110d5761110c611144565b5b50919050565b61111c826111a2565b810181811067ffffffffffffffff8211171561113b5761113a611173565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f5061757361626c653a206e6f7420706175736564000000000000000000000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f5369676e617475726520646f6573206e6f74206d61746368207468652065787060008201527f65637465642076616c75652e0000000000000000000000000000000000000000602082015250565b7f5061757361626c653a2070617573656400000000000000000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f4f6e6c79207468652063757272656e74206f776e65722063616e207472616e7360008201527f66657220746865204750552e0000000000000000000000000000000000000000602082015250565b7f546869732047505520697320616c726561647920726567697374657265642e00600082015250565b61134d81611057565b811461135857600080fd5b50565b61136481611075565b811461136f57600080fd5b5056fea264697066735822122078dad27d3997df2da077ff526345f25db690fddd319f705b737cdde78be6439264736f6c63430008010033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D PUSH2 0x22 PUSH2 0x4C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x54 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x118 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x13A8 DUP1 PUSH2 0x127 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8456CB59 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x88E26B20 EQ PUSH2 0x12C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0xE71A3641 EQ PUSH2 0x17C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x198 JUMPI PUSH2 0x9E JUMP JUMPDEST DUP1 PUSH4 0x1C3D06EF EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0xBF JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0x601CF7B6 EQ PUSH2 0xE7 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x118 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0xC07 JUMP JUMPDEST PUSH2 0x1B4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC7 PUSH2 0x3AF JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD1 PUSH2 0x3C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDE SWAP2 SWAP1 PUSH2 0xE0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x101 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFC SWAP2 SWAP1 PUSH2 0xB72 JUMP JUMPDEST PUSH2 0x3D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10F SWAP3 SWAP2 SWAP1 PUSH2 0xE25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x120 PUSH2 0x454 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x12A PUSH2 0x468 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x146 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xB72 JUMP JUMPDEST PUSH2 0x47A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x155 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xEBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x166 PUSH2 0x56F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x173 SWAP2 SWAP1 PUSH2 0xDEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x196 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x191 SWAP2 SWAP1 PUSH2 0xBB3 JUMP JUMPDEST PUSH2 0x598 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xB49 JUMP JUMPDEST PUSH2 0x6EE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1BC PUSH2 0x772 JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1CC SWAP2 SWAP1 PUSH2 0xDD8 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x1 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x22B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x222 SWAP1 PUSH2 0xFBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x23E SWAP2 SWAP1 PUSH2 0xDD8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP DUP1 DUP3 EQ PUSH2 0x298 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28F SWAP1 PUSH2 0xF3A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x1 DUP5 PUSH1 0x40 MLOAD PUSH2 0x2DC SWAP2 SWAP1 PUSH2 0xDD8 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x306 SWAP3 SWAP2 SWAP1 PUSH2 0xA14 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH32 0x2A3D1ECF2145022D783E1B64D9CED56A663FDC440B48D224C987D65097D5D46B DUP4 CALLER PUSH1 0x40 MLOAD PUSH2 0x3A2 SWAP3 SWAP2 SWAP1 PUSH2 0xE4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH2 0x3B7 PUSH2 0x7BC JUMP JUMPDEST PUSH2 0x3BF PUSH2 0x83A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 DUP4 PUSH1 0x40 MLOAD PUSH2 0x3EA SWAP2 SWAP1 PUSH2 0xDD8 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x1 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP5 PUSH1 0x40 MLOAD PUSH2 0x419 SWAP2 SWAP1 PUSH2 0xDD8 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP SWAP2 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH2 0x45C PUSH2 0x7BC JUMP JUMPDEST PUSH2 0x466 PUSH1 0x0 PUSH2 0x89C JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x470 PUSH2 0x7BC JUMP JUMPDEST PUSH2 0x478 PUSH2 0x960 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 DUP2 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP3 ADD DUP1 MLOAD DUP5 DUP3 MSTORE PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP6 ADD KECCAK256 DUP2 DUP4 MSTORE DUP1 SWAP6 POP POP POP POP POP POP PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0x4B3 SWAP1 PUSH2 0x10E1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4DF SWAP1 PUSH2 0x10E1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x52C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x501 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x52C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x50F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x5A0 PUSH2 0x772 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 DUP4 PUSH1 0x40 MLOAD PUSH2 0x5C7 SWAP2 SWAP1 PUSH2 0xDD8 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x64F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x646 SWAP1 PUSH2 0xF9A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 DUP4 PUSH1 0x40 MLOAD PUSH2 0x660 SWAP2 SWAP1 PUSH2 0xDD8 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xDD5F76176E04227AE82AA86EA74378ED4C5F60AFB915676D6615246F8568AFCD DUP3 CALLER DUP4 PUSH1 0x40 MLOAD PUSH2 0x6E2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xE7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x6F6 PUSH2 0x7BC JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x766 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x75D SWAP1 PUSH2 0xF1A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x76F DUP2 PUSH2 0x89C JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x77A PUSH2 0x3C1 JUMP JUMPDEST ISZERO PUSH2 0x7BA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B1 SWAP1 PUSH2 0xF5A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x7C4 PUSH2 0x9C3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x7E2 PUSH2 0x56F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x838 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82F SWAP1 PUSH2 0xF7A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x842 PUSH2 0x9CB JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x885 PUSH2 0x9C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x892 SWAP2 SWAP1 PUSH2 0xDEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x968 PUSH2 0x772 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x9AC PUSH2 0x9C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9B9 SWAP2 SWAP1 PUSH2 0xDEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x9D3 PUSH2 0x3C1 JUMP JUMPDEST PUSH2 0xA12 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA09 SWAP1 PUSH2 0xEFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0xA20 SWAP1 PUSH2 0x10E1 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0xA42 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0xA89 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0xA5B JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0xA89 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0xA89 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xA88 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xA6D JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0xA96 SWAP2 SWAP1 PUSH2 0xA9A JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xAB3 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0xA9B JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xACA PUSH2 0xAC5 DUP5 PUSH2 0xFFF JUMP JUMPDEST PUSH2 0xFDA JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xAE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAED DUP5 DUP3 DUP6 PUSH2 0x109F JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB04 DUP2 PUSH2 0x1344 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB19 DUP2 PUSH2 0x135B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xB30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xB40 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xAB7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB69 DUP5 DUP3 DUP6 ADD PUSH2 0xAF5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB84 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBAA DUP5 DUP3 DUP6 ADD PUSH2 0xB1F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBC6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xBE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBEC DUP6 DUP3 DUP7 ADD PUSH2 0xB1F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xBFD DUP6 DUP3 DUP7 ADD PUSH2 0xAF5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC1A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC40 DUP6 DUP3 DUP7 ADD PUSH2 0xB1F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xC51 DUP6 DUP3 DUP7 ADD PUSH2 0xB0A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xC64 DUP2 PUSH2 0x1057 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xC73 DUP2 PUSH2 0x1069 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC84 DUP3 PUSH2 0x1030 JUMP JUMPDEST PUSH2 0xC8E DUP2 DUP6 PUSH2 0x103B JUMP JUMPDEST SWAP4 POP PUSH2 0xC9E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x10AE JUMP JUMPDEST PUSH2 0xCA7 DUP2 PUSH2 0x11A2 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCBD DUP3 PUSH2 0x1030 JUMP JUMPDEST PUSH2 0xCC7 DUP2 DUP6 PUSH2 0x104C JUMP JUMPDEST SWAP4 POP PUSH2 0xCD7 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x10AE JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCF0 PUSH1 0x14 DUP4 PUSH2 0x103B JUMP JUMPDEST SWAP2 POP PUSH2 0xCFB DUP3 PUSH2 0x11B3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD13 PUSH1 0x26 DUP4 PUSH2 0x103B JUMP JUMPDEST SWAP2 POP PUSH2 0xD1E DUP3 PUSH2 0x11DC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD36 PUSH1 0x2C DUP4 PUSH2 0x103B JUMP JUMPDEST SWAP2 POP PUSH2 0xD41 DUP3 PUSH2 0x122B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD59 PUSH1 0x10 DUP4 PUSH2 0x103B JUMP JUMPDEST SWAP2 POP PUSH2 0xD64 DUP3 PUSH2 0x127A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD7C PUSH1 0x20 DUP4 PUSH2 0x103B JUMP JUMPDEST SWAP2 POP PUSH2 0xD87 DUP3 PUSH2 0x12A3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD9F PUSH1 0x2C DUP4 PUSH2 0x103B JUMP JUMPDEST SWAP2 POP PUSH2 0xDAA DUP3 PUSH2 0x12CC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDC2 PUSH1 0x1F DUP4 PUSH2 0x103B JUMP JUMPDEST SWAP2 POP PUSH2 0xDCD DUP3 PUSH2 0x131B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDE4 DUP3 DUP5 PUSH2 0xCB2 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE04 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC5B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE1F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC6A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xE3A PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xC6A JUMP JUMPDEST PUSH2 0xE47 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xC5B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE68 DUP2 DUP6 PUSH2 0xC79 JUMP JUMPDEST SWAP1 POP PUSH2 0xE77 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xC5B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE98 DUP2 DUP7 PUSH2 0xC79 JUMP JUMPDEST SWAP1 POP PUSH2 0xEA7 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xC5B JUMP JUMPDEST PUSH2 0xEB4 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xC5B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xED6 DUP2 DUP7 PUSH2 0xC79 JUMP JUMPDEST SWAP1 POP PUSH2 0xEE5 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xC5B JUMP JUMPDEST PUSH2 0xEF2 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xC6A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF13 DUP2 PUSH2 0xCE3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF33 DUP2 PUSH2 0xD06 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF53 DUP2 PUSH2 0xD29 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF73 DUP2 PUSH2 0xD4C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF93 DUP2 PUSH2 0xD6F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFB3 DUP2 PUSH2 0xD92 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFD3 DUP2 PUSH2 0xDB5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFE4 PUSH2 0xFF5 JUMP JUMPDEST SWAP1 POP PUSH2 0xFF0 DUP3 DUP3 PUSH2 0x1113 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x101A JUMPI PUSH2 0x1019 PUSH2 0x1173 JUMP JUMPDEST JUMPDEST PUSH2 0x1023 DUP3 PUSH2 0x11A2 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1062 DUP3 PUSH2 0x107F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x10CC JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x10B1 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x10DB JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x10F9 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x110D JUMPI PUSH2 0x110C PUSH2 0x1144 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x111C DUP3 PUSH2 0x11A2 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x113B JUMPI PUSH2 0x113A PUSH2 0x1173 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5369676E617475726520646F6573206E6F74206D617463682074686520657870 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x65637465642076616C75652E0000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F6E6C79207468652063757272656E74206F776E65722063616E207472616E73 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x66657220746865204750552E0000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x546869732047505520697320616C726561647920726567697374657265642E00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x134D DUP2 PUSH2 0x1057 JUMP JUMPDEST DUP2 EQ PUSH2 0x1358 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1364 DUP2 PUSH2 0x1075 JUMP JUMPDEST DUP2 EQ PUSH2 0x136F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH25 0xDAD27D3997DF2DA077FF526345F25DB690FDDD319F705B737C 0xDD 0xE7 DUP12 0xE6 NUMBER SWAP3 PUSH5 0x736F6C6343 STOP ADDMOD ADD STOP CALLER ","sourceMap":"241:2576:9:-:0;;;;;;;;;;;;;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;1006:5:2;996:7;;:15;;;;;;;;;;;;;;;;;;241:2576:9;;640:96:4;693:7;719:10;712:17;;640:96;:::o;2433:187:0:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2433:187;;:::o;241:2576:9:-;;;;;;;"},"deployedBytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:16383:10","statements":[{"body":{"nodeType":"YulBlock","src":"91:261:10","statements":[{"nodeType":"YulAssignment","src":"101:75:10","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"168:6:10"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"126:41:10"},"nodeType":"YulFunctionCall","src":"126:49:10"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"110:15:10"},"nodeType":"YulFunctionCall","src":"110:66:10"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"101:5:10"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"192:5:10"},{"name":"length","nodeType":"YulIdentifier","src":"199:6:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"185:6:10"},"nodeType":"YulFunctionCall","src":"185:21:10"},"nodeType":"YulExpressionStatement","src":"185:21:10"},{"nodeType":"YulVariableDeclaration","src":"215:27:10","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"230:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"237:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"226:3:10"},"nodeType":"YulFunctionCall","src":"226:16:10"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"219:3:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"280:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"289:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"292:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"282:6:10"},"nodeType":"YulFunctionCall","src":"282:12:10"},"nodeType":"YulExpressionStatement","src":"282:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"261:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"266:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"257:3:10"},"nodeType":"YulFunctionCall","src":"257:16:10"},{"name":"end","nodeType":"YulIdentifier","src":"275:3:10"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"254:2:10"},"nodeType":"YulFunctionCall","src":"254:25:10"},"nodeType":"YulIf","src":"251:2:10"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"329:3:10"},{"name":"dst","nodeType":"YulIdentifier","src":"334:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"339:6:10"}],"functionName":{"name":"copy_calldata_to_memory","nodeType":"YulIdentifier","src":"305:23:10"},"nodeType":"YulFunctionCall","src":"305:41:10"},"nodeType":"YulExpressionStatement","src":"305:41:10"}]},"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"64:3:10","type":""},{"name":"length","nodeType":"YulTypedName","src":"69:6:10","type":""},{"name":"end","nodeType":"YulTypedName","src":"77:3:10","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"85:5:10","type":""}],"src":"7:345:10"},{"body":{"nodeType":"YulBlock","src":"410:87:10","statements":[{"nodeType":"YulAssignment","src":"420:29:10","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"442:6:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"429:12:10"},"nodeType":"YulFunctionCall","src":"429:20:10"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"420:5:10"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"485:5:10"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"458:26:10"},"nodeType":"YulFunctionCall","src":"458:33:10"},"nodeType":"YulExpressionStatement","src":"458:33:10"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"388:6:10","type":""},{"name":"end","nodeType":"YulTypedName","src":"396:3:10","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"404:5:10","type":""}],"src":"358:139:10"},{"body":{"nodeType":"YulBlock","src":"555:87:10","statements":[{"nodeType":"YulAssignment","src":"565:29:10","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"587:6:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"574:12:10"},"nodeType":"YulFunctionCall","src":"574:20:10"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"565:5:10"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"630:5:10"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"603:26:10"},"nodeType":"YulFunctionCall","src":"603:33:10"},"nodeType":"YulExpressionStatement","src":"603:33:10"}]},"name":"abi_decode_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"533:6:10","type":""},{"name":"end","nodeType":"YulTypedName","src":"541:3:10","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"549:5:10","type":""}],"src":"503:139:10"},{"body":{"nodeType":"YulBlock","src":"724:211:10","statements":[{"body":{"nodeType":"YulBlock","src":"773:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"782:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"785:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"775:6:10"},"nodeType":"YulFunctionCall","src":"775:12:10"},"nodeType":"YulExpressionStatement","src":"775:12:10"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"752:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"760:4:10","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"748:3:10"},"nodeType":"YulFunctionCall","src":"748:17:10"},{"name":"end","nodeType":"YulIdentifier","src":"767:3:10"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"744:3:10"},"nodeType":"YulFunctionCall","src":"744:27:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"737:6:10"},"nodeType":"YulFunctionCall","src":"737:35:10"},"nodeType":"YulIf","src":"734:2:10"},{"nodeType":"YulVariableDeclaration","src":"798:34:10","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"825:6:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"812:12:10"},"nodeType":"YulFunctionCall","src":"812:20:10"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"802:6:10","type":""}]},{"nodeType":"YulAssignment","src":"841:88:10","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"902:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"910:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"898:3:10"},"nodeType":"YulFunctionCall","src":"898:17:10"},{"name":"length","nodeType":"YulIdentifier","src":"917:6:10"},{"name":"end","nodeType":"YulIdentifier","src":"925:3:10"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"850:47:10"},"nodeType":"YulFunctionCall","src":"850:79:10"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"841:5:10"}]}]},"name":"abi_decode_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"702:6:10","type":""},{"name":"end","nodeType":"YulTypedName","src":"710:3:10","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"718:5:10","type":""}],"src":"662:273:10"},{"body":{"nodeType":"YulBlock","src":"1007:196:10","statements":[{"body":{"nodeType":"YulBlock","src":"1053:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1062:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1065:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1055:6:10"},"nodeType":"YulFunctionCall","src":"1055:12:10"},"nodeType":"YulExpressionStatement","src":"1055:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1028:7:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"1037:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1024:3:10"},"nodeType":"YulFunctionCall","src":"1024:23:10"},{"kind":"number","nodeType":"YulLiteral","src":"1049:2:10","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1020:3:10"},"nodeType":"YulFunctionCall","src":"1020:32:10"},"nodeType":"YulIf","src":"1017:2:10"},{"nodeType":"YulBlock","src":"1079:117:10","statements":[{"nodeType":"YulVariableDeclaration","src":"1094:15:10","value":{"kind":"number","nodeType":"YulLiteral","src":"1108:1:10","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1098:6:10","type":""}]},{"nodeType":"YulAssignment","src":"1123:63:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1158:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"1169:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1154:3:10"},"nodeType":"YulFunctionCall","src":"1154:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1178:7:10"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1133:20:10"},"nodeType":"YulFunctionCall","src":"1133:53:10"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1123:6:10"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"977:9:10","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"988:7:10","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1000:6:10","type":""}],"src":"941:262:10"},{"body":{"nodeType":"YulBlock","src":"1285:299:10","statements":[{"body":{"nodeType":"YulBlock","src":"1331:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1340:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1343:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1333:6:10"},"nodeType":"YulFunctionCall","src":"1333:12:10"},"nodeType":"YulExpressionStatement","src":"1333:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1306:7:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"1315:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1302:3:10"},"nodeType":"YulFunctionCall","src":"1302:23:10"},{"kind":"number","nodeType":"YulLiteral","src":"1327:2:10","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1298:3:10"},"nodeType":"YulFunctionCall","src":"1298:32:10"},"nodeType":"YulIf","src":"1295:2:10"},{"nodeType":"YulBlock","src":"1357:220:10","statements":[{"nodeType":"YulVariableDeclaration","src":"1372:45:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1403:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"1414:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1399:3:10"},"nodeType":"YulFunctionCall","src":"1399:17:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1386:12:10"},"nodeType":"YulFunctionCall","src":"1386:31:10"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1376:6:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"1464:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1473:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1476:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1466:6:10"},"nodeType":"YulFunctionCall","src":"1466:12:10"},"nodeType":"YulExpressionStatement","src":"1466:12:10"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1436:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"1444:18:10","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1433:2:10"},"nodeType":"YulFunctionCall","src":"1433:30:10"},"nodeType":"YulIf","src":"1430:2:10"},{"nodeType":"YulAssignment","src":"1494:73:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1539:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"1550:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1535:3:10"},"nodeType":"YulFunctionCall","src":"1535:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1559:7:10"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"1504:30:10"},"nodeType":"YulFunctionCall","src":"1504:63:10"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1494:6:10"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1255:9:10","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1266:7:10","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1278:6:10","type":""}],"src":"1209:375:10"},{"body":{"nodeType":"YulBlock","src":"1683:427:10","statements":[{"body":{"nodeType":"YulBlock","src":"1729:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1738:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1741:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1731:6:10"},"nodeType":"YulFunctionCall","src":"1731:12:10"},"nodeType":"YulExpressionStatement","src":"1731:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1704:7:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"1713:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1700:3:10"},"nodeType":"YulFunctionCall","src":"1700:23:10"},{"kind":"number","nodeType":"YulLiteral","src":"1725:2:10","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1696:3:10"},"nodeType":"YulFunctionCall","src":"1696:32:10"},"nodeType":"YulIf","src":"1693:2:10"},{"nodeType":"YulBlock","src":"1755:220:10","statements":[{"nodeType":"YulVariableDeclaration","src":"1770:45:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1801:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"1812:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1797:3:10"},"nodeType":"YulFunctionCall","src":"1797:17:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1784:12:10"},"nodeType":"YulFunctionCall","src":"1784:31:10"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1774:6:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"1862:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1871:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1874:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1864:6:10"},"nodeType":"YulFunctionCall","src":"1864:12:10"},"nodeType":"YulExpressionStatement","src":"1864:12:10"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1834:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"1842:18:10","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1831:2:10"},"nodeType":"YulFunctionCall","src":"1831:30:10"},"nodeType":"YulIf","src":"1828:2:10"},{"nodeType":"YulAssignment","src":"1892:73:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1937:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"1948:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1933:3:10"},"nodeType":"YulFunctionCall","src":"1933:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1957:7:10"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"1902:30:10"},"nodeType":"YulFunctionCall","src":"1902:63:10"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1892:6:10"}]}]},{"nodeType":"YulBlock","src":"1985:118:10","statements":[{"nodeType":"YulVariableDeclaration","src":"2000:16:10","value":{"kind":"number","nodeType":"YulLiteral","src":"2014:2:10","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2004:6:10","type":""}]},{"nodeType":"YulAssignment","src":"2030:63:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2065:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"2076:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2061:3:10"},"nodeType":"YulFunctionCall","src":"2061:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2085:7:10"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2040:20:10"},"nodeType":"YulFunctionCall","src":"2040:53:10"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2030:6:10"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1645:9:10","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1656:7:10","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1668:6:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1676:6:10","type":""}],"src":"1590:520:10"},{"body":{"nodeType":"YulBlock","src":"2209:427:10","statements":[{"body":{"nodeType":"YulBlock","src":"2255:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2264:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2267:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2257:6:10"},"nodeType":"YulFunctionCall","src":"2257:12:10"},"nodeType":"YulExpressionStatement","src":"2257:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2230:7:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"2239:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2226:3:10"},"nodeType":"YulFunctionCall","src":"2226:23:10"},{"kind":"number","nodeType":"YulLiteral","src":"2251:2:10","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2222:3:10"},"nodeType":"YulFunctionCall","src":"2222:32:10"},"nodeType":"YulIf","src":"2219:2:10"},{"nodeType":"YulBlock","src":"2281:220:10","statements":[{"nodeType":"YulVariableDeclaration","src":"2296:45:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2327:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"2338:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2323:3:10"},"nodeType":"YulFunctionCall","src":"2323:17:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2310:12:10"},"nodeType":"YulFunctionCall","src":"2310:31:10"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2300:6:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"2388:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2397:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2400:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2390:6:10"},"nodeType":"YulFunctionCall","src":"2390:12:10"},"nodeType":"YulExpressionStatement","src":"2390:12:10"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2360:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"2368:18:10","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2357:2:10"},"nodeType":"YulFunctionCall","src":"2357:30:10"},"nodeType":"YulIf","src":"2354:2:10"},{"nodeType":"YulAssignment","src":"2418:73:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2463:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"2474:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2459:3:10"},"nodeType":"YulFunctionCall","src":"2459:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2483:7:10"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2428:30:10"},"nodeType":"YulFunctionCall","src":"2428:63:10"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2418:6:10"}]}]},{"nodeType":"YulBlock","src":"2511:118:10","statements":[{"nodeType":"YulVariableDeclaration","src":"2526:16:10","value":{"kind":"number","nodeType":"YulLiteral","src":"2540:2:10","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2530:6:10","type":""}]},{"nodeType":"YulAssignment","src":"2556:63:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2591:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"2602:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2587:3:10"},"nodeType":"YulFunctionCall","src":"2587:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2611:7:10"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"2566:20:10"},"nodeType":"YulFunctionCall","src":"2566:53:10"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2556:6:10"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2171:9:10","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2182:7:10","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2194:6:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2202:6:10","type":""}],"src":"2116:520:10"},{"body":{"nodeType":"YulBlock","src":"2707:53:10","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2724:3:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2747:5:10"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"2729:17:10"},"nodeType":"YulFunctionCall","src":"2729:24:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2717:6:10"},"nodeType":"YulFunctionCall","src":"2717:37:10"},"nodeType":"YulExpressionStatement","src":"2717:37:10"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2695:5:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2702:3:10","type":""}],"src":"2642:118:10"},{"body":{"nodeType":"YulBlock","src":"2825:50:10","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2842:3:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2862:5:10"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"2847:14:10"},"nodeType":"YulFunctionCall","src":"2847:21:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2835:6:10"},"nodeType":"YulFunctionCall","src":"2835:34:10"},"nodeType":"YulExpressionStatement","src":"2835:34:10"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2813:5:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2820:3:10","type":""}],"src":"2766:109:10"},{"body":{"nodeType":"YulBlock","src":"2973:272:10","statements":[{"nodeType":"YulVariableDeclaration","src":"2983:53:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3030:5:10"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2997:32:10"},"nodeType":"YulFunctionCall","src":"2997:39:10"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2987:6:10","type":""}]},{"nodeType":"YulAssignment","src":"3045:78:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3111:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"3116:6:10"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3052:58:10"},"nodeType":"YulFunctionCall","src":"3052:71:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3045:3:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3158:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"3165:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3154:3:10"},"nodeType":"YulFunctionCall","src":"3154:16:10"},{"name":"pos","nodeType":"YulIdentifier","src":"3172:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"3177:6:10"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"3132:21:10"},"nodeType":"YulFunctionCall","src":"3132:52:10"},"nodeType":"YulExpressionStatement","src":"3132:52:10"},{"nodeType":"YulAssignment","src":"3193:46:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3204:3:10"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3231:6:10"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"3209:21:10"},"nodeType":"YulFunctionCall","src":"3209:29:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3200:3:10"},"nodeType":"YulFunctionCall","src":"3200:39:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3193:3:10"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2954:5:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2961:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2969:3:10","type":""}],"src":"2881:364:10"},{"body":{"nodeType":"YulBlock","src":"3361:267:10","statements":[{"nodeType":"YulVariableDeclaration","src":"3371:53:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3418:5:10"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"3385:32:10"},"nodeType":"YulFunctionCall","src":"3385:39:10"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"3375:6:10","type":""}]},{"nodeType":"YulAssignment","src":"3433:96:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3517:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"3522:6:10"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"3440:76:10"},"nodeType":"YulFunctionCall","src":"3440:89:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3433:3:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3564:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"3571:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3560:3:10"},"nodeType":"YulFunctionCall","src":"3560:16:10"},{"name":"pos","nodeType":"YulIdentifier","src":"3578:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"3583:6:10"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"3538:21:10"},"nodeType":"YulFunctionCall","src":"3538:52:10"},"nodeType":"YulExpressionStatement","src":"3538:52:10"},{"nodeType":"YulAssignment","src":"3599:23:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3610:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"3615:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3606:3:10"},"nodeType":"YulFunctionCall","src":"3606:16:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3599:3:10"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3342:5:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3349:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3357:3:10","type":""}],"src":"3251:377:10"},{"body":{"nodeType":"YulBlock","src":"3780:220:10","statements":[{"nodeType":"YulAssignment","src":"3790:74:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3856:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"3861:2:10","type":"","value":"20"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3797:58:10"},"nodeType":"YulFunctionCall","src":"3797:67:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3790:3:10"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3962:3:10"}],"functionName":{"name":"store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a","nodeType":"YulIdentifier","src":"3873:88:10"},"nodeType":"YulFunctionCall","src":"3873:93:10"},"nodeType":"YulExpressionStatement","src":"3873:93:10"},{"nodeType":"YulAssignment","src":"3975:19:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3986:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"3991:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3982:3:10"},"nodeType":"YulFunctionCall","src":"3982:12:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3975:3:10"}]}]},"name":"abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3768:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3776:3:10","type":""}],"src":"3634:366:10"},{"body":{"nodeType":"YulBlock","src":"4152:220:10","statements":[{"nodeType":"YulAssignment","src":"4162:74:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4228:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"4233:2:10","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4169:58:10"},"nodeType":"YulFunctionCall","src":"4169:67:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4162:3:10"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4334:3:10"}],"functionName":{"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulIdentifier","src":"4245:88:10"},"nodeType":"YulFunctionCall","src":"4245:93:10"},"nodeType":"YulExpressionStatement","src":"4245:93:10"},{"nodeType":"YulAssignment","src":"4347:19:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4358:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"4363:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4354:3:10"},"nodeType":"YulFunctionCall","src":"4354:12:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4347:3:10"}]}]},"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4140:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4148:3:10","type":""}],"src":"4006:366:10"},{"body":{"nodeType":"YulBlock","src":"4524:220:10","statements":[{"nodeType":"YulAssignment","src":"4534:74:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4600:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"4605:2:10","type":"","value":"44"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4541:58:10"},"nodeType":"YulFunctionCall","src":"4541:67:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4534:3:10"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4706:3:10"}],"functionName":{"name":"store_literal_in_memory_5c03d679ba36195a4b4787c361ed9e7d61953d3e452278030d1edd360e6feec2","nodeType":"YulIdentifier","src":"4617:88:10"},"nodeType":"YulFunctionCall","src":"4617:93:10"},"nodeType":"YulExpressionStatement","src":"4617:93:10"},{"nodeType":"YulAssignment","src":"4719:19:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4730:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"4735:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4726:3:10"},"nodeType":"YulFunctionCall","src":"4726:12:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4719:3:10"}]}]},"name":"abi_encode_t_stringliteral_5c03d679ba36195a4b4787c361ed9e7d61953d3e452278030d1edd360e6feec2_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4512:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4520:3:10","type":""}],"src":"4378:366:10"},{"body":{"nodeType":"YulBlock","src":"4896:220:10","statements":[{"nodeType":"YulAssignment","src":"4906:74:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4972:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"4977:2:10","type":"","value":"16"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4913:58:10"},"nodeType":"YulFunctionCall","src":"4913:67:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4906:3:10"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5078:3:10"}],"functionName":{"name":"store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a","nodeType":"YulIdentifier","src":"4989:88:10"},"nodeType":"YulFunctionCall","src":"4989:93:10"},"nodeType":"YulExpressionStatement","src":"4989:93:10"},{"nodeType":"YulAssignment","src":"5091:19:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5102:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"5107:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5098:3:10"},"nodeType":"YulFunctionCall","src":"5098:12:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5091:3:10"}]}]},"name":"abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4884:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4892:3:10","type":""}],"src":"4750:366:10"},{"body":{"nodeType":"YulBlock","src":"5268:220:10","statements":[{"nodeType":"YulAssignment","src":"5278:74:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5344:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"5349:2:10","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5285:58:10"},"nodeType":"YulFunctionCall","src":"5285:67:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5278:3:10"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5450:3:10"}],"functionName":{"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulIdentifier","src":"5361:88:10"},"nodeType":"YulFunctionCall","src":"5361:93:10"},"nodeType":"YulExpressionStatement","src":"5361:93:10"},{"nodeType":"YulAssignment","src":"5463:19:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5474:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"5479:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5470:3:10"},"nodeType":"YulFunctionCall","src":"5470:12:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5463:3:10"}]}]},"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5256:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5264:3:10","type":""}],"src":"5122:366:10"},{"body":{"nodeType":"YulBlock","src":"5640:220:10","statements":[{"nodeType":"YulAssignment","src":"5650:74:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5716:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"5721:2:10","type":"","value":"44"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5657:58:10"},"nodeType":"YulFunctionCall","src":"5657:67:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5650:3:10"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5822:3:10"}],"functionName":{"name":"store_literal_in_memory_d00a3bd173f99c5cbacfac93327b512a487b9ecd9c791d50435d6d89c5c624ca","nodeType":"YulIdentifier","src":"5733:88:10"},"nodeType":"YulFunctionCall","src":"5733:93:10"},"nodeType":"YulExpressionStatement","src":"5733:93:10"},{"nodeType":"YulAssignment","src":"5835:19:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5846:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"5851:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5842:3:10"},"nodeType":"YulFunctionCall","src":"5842:12:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5835:3:10"}]}]},"name":"abi_encode_t_stringliteral_d00a3bd173f99c5cbacfac93327b512a487b9ecd9c791d50435d6d89c5c624ca_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5628:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5636:3:10","type":""}],"src":"5494:366:10"},{"body":{"nodeType":"YulBlock","src":"6012:220:10","statements":[{"nodeType":"YulAssignment","src":"6022:74:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6088:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"6093:2:10","type":"","value":"31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6029:58:10"},"nodeType":"YulFunctionCall","src":"6029:67:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6022:3:10"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6194:3:10"}],"functionName":{"name":"store_literal_in_memory_d20dda5743a441e01b3941efede44ce1b79001dfe973ed914209ad52f646d8a7","nodeType":"YulIdentifier","src":"6105:88:10"},"nodeType":"YulFunctionCall","src":"6105:93:10"},"nodeType":"YulExpressionStatement","src":"6105:93:10"},{"nodeType":"YulAssignment","src":"6207:19:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6218:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"6223:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6214:3:10"},"nodeType":"YulFunctionCall","src":"6214:12:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6207:3:10"}]}]},"name":"abi_encode_t_stringliteral_d20dda5743a441e01b3941efede44ce1b79001dfe973ed914209ad52f646d8a7_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6000:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6008:3:10","type":""}],"src":"5866:366:10"},{"body":{"nodeType":"YulBlock","src":"6374:139:10","statements":[{"nodeType":"YulAssignment","src":"6385:102:10","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6474:6:10"},{"name":"pos","nodeType":"YulIdentifier","src":"6483:3:10"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"6392:81:10"},"nodeType":"YulFunctionCall","src":"6392:95:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6385:3:10"}]},{"nodeType":"YulAssignment","src":"6497:10:10","value":{"name":"pos","nodeType":"YulIdentifier","src":"6504:3:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6497:3:10"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6353:3:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6359:6:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6370:3:10","type":""}],"src":"6238:275:10"},{"body":{"nodeType":"YulBlock","src":"6617:124:10","statements":[{"nodeType":"YulAssignment","src":"6627:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6639:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"6650:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6635:3:10"},"nodeType":"YulFunctionCall","src":"6635:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6627:4:10"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6707:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6720:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"6731:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6716:3:10"},"nodeType":"YulFunctionCall","src":"6716:17:10"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"6663:43:10"},"nodeType":"YulFunctionCall","src":"6663:71:10"},"nodeType":"YulExpressionStatement","src":"6663:71:10"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6589:9:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6601:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6612:4:10","type":""}],"src":"6519:222:10"},{"body":{"nodeType":"YulBlock","src":"6839:118:10","statements":[{"nodeType":"YulAssignment","src":"6849:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6861:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"6872:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6857:3:10"},"nodeType":"YulFunctionCall","src":"6857:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6849:4:10"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6923:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6936:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"6947:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6932:3:10"},"nodeType":"YulFunctionCall","src":"6932:17:10"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"6885:37:10"},"nodeType":"YulFunctionCall","src":"6885:65:10"},"nodeType":"YulExpressionStatement","src":"6885:65:10"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6811:9:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6823:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6834:4:10","type":""}],"src":"6747:210:10"},{"body":{"nodeType":"YulBlock","src":"7083:200:10","statements":[{"nodeType":"YulAssignment","src":"7093:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7105:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"7116:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7101:3:10"},"nodeType":"YulFunctionCall","src":"7101:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7093:4:10"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7167:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7180:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"7191:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7176:3:10"},"nodeType":"YulFunctionCall","src":"7176:17:10"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"7129:37:10"},"nodeType":"YulFunctionCall","src":"7129:65:10"},"nodeType":"YulExpressionStatement","src":"7129:65:10"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"7248:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7261:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"7272:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7257:3:10"},"nodeType":"YulFunctionCall","src":"7257:18:10"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"7204:43:10"},"nodeType":"YulFunctionCall","src":"7204:72:10"},"nodeType":"YulExpressionStatement","src":"7204:72:10"}]},"name":"abi_encode_tuple_t_bool_t_address__to_t_bool_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7047:9:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7059:6:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7067:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7078:4:10","type":""}],"src":"6963:320:10"},{"body":{"nodeType":"YulBlock","src":"7435:277:10","statements":[{"nodeType":"YulAssignment","src":"7445:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7457:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"7468:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7453:3:10"},"nodeType":"YulFunctionCall","src":"7453:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7445:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7492:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"7503:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7488:3:10"},"nodeType":"YulFunctionCall","src":"7488:17:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7511:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"7517:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7507:3:10"},"nodeType":"YulFunctionCall","src":"7507:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7481:6:10"},"nodeType":"YulFunctionCall","src":"7481:47:10"},"nodeType":"YulExpressionStatement","src":"7481:47:10"},{"nodeType":"YulAssignment","src":"7537:86:10","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7609:6:10"},{"name":"tail","nodeType":"YulIdentifier","src":"7618:4:10"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7545:63:10"},"nodeType":"YulFunctionCall","src":"7545:78:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7537:4:10"}]},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"7677:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7690:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"7701:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7686:3:10"},"nodeType":"YulFunctionCall","src":"7686:18:10"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"7633:43:10"},"nodeType":"YulFunctionCall","src":"7633:72:10"},"nodeType":"YulExpressionStatement","src":"7633:72:10"}]},"name":"abi_encode_tuple_t_string_memory_ptr_t_address__to_t_string_memory_ptr_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7399:9:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7411:6:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7419:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7430:4:10","type":""}],"src":"7289:423:10"},{"body":{"nodeType":"YulBlock","src":"7892:359:10","statements":[{"nodeType":"YulAssignment","src":"7902:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7914:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"7925:2:10","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7910:3:10"},"nodeType":"YulFunctionCall","src":"7910:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7902:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7949:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"7960:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7945:3:10"},"nodeType":"YulFunctionCall","src":"7945:17:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7968:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"7974:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7964:3:10"},"nodeType":"YulFunctionCall","src":"7964:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7938:6:10"},"nodeType":"YulFunctionCall","src":"7938:47:10"},"nodeType":"YulExpressionStatement","src":"7938:47:10"},{"nodeType":"YulAssignment","src":"7994:86:10","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8066:6:10"},{"name":"tail","nodeType":"YulIdentifier","src":"8075:4:10"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8002:63:10"},"nodeType":"YulFunctionCall","src":"8002:78:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7994:4:10"}]},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"8134:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8147:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"8158:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8143:3:10"},"nodeType":"YulFunctionCall","src":"8143:18:10"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"8090:43:10"},"nodeType":"YulFunctionCall","src":"8090:72:10"},"nodeType":"YulExpressionStatement","src":"8090:72:10"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"8216:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8229:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"8240:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8225:3:10"},"nodeType":"YulFunctionCall","src":"8225:18:10"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"8172:43:10"},"nodeType":"YulFunctionCall","src":"8172:72:10"},"nodeType":"YulExpressionStatement","src":"8172:72:10"}]},"name":"abi_encode_tuple_t_string_memory_ptr_t_address_t_address__to_t_string_memory_ptr_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7848:9:10","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7860:6:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7868:6:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7876:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7887:4:10","type":""}],"src":"7718:533:10"},{"body":{"nodeType":"YulBlock","src":"8425:353:10","statements":[{"nodeType":"YulAssignment","src":"8435:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8447:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"8458:2:10","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8443:3:10"},"nodeType":"YulFunctionCall","src":"8443:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8435:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8482:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"8493:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8478:3:10"},"nodeType":"YulFunctionCall","src":"8478:17:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8501:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"8507:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8497:3:10"},"nodeType":"YulFunctionCall","src":"8497:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8471:6:10"},"nodeType":"YulFunctionCall","src":"8471:47:10"},"nodeType":"YulExpressionStatement","src":"8471:47:10"},{"nodeType":"YulAssignment","src":"8527:86:10","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8599:6:10"},{"name":"tail","nodeType":"YulIdentifier","src":"8608:4:10"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8535:63:10"},"nodeType":"YulFunctionCall","src":"8535:78:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8527:4:10"}]},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"8667:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8680:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"8691:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8676:3:10"},"nodeType":"YulFunctionCall","src":"8676:18:10"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"8623:43:10"},"nodeType":"YulFunctionCall","src":"8623:72:10"},"nodeType":"YulExpressionStatement","src":"8623:72:10"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"8743:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8756:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"8767:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8752:3:10"},"nodeType":"YulFunctionCall","src":"8752:18:10"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"8705:37:10"},"nodeType":"YulFunctionCall","src":"8705:66:10"},"nodeType":"YulExpressionStatement","src":"8705:66:10"}]},"name":"abi_encode_tuple_t_string_memory_ptr_t_address_t_bool__to_t_string_memory_ptr_t_address_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8381:9:10","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8393:6:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8401:6:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8409:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8420:4:10","type":""}],"src":"8257:521:10"},{"body":{"nodeType":"YulBlock","src":"8955:248:10","statements":[{"nodeType":"YulAssignment","src":"8965:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8977:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"8988:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8973:3:10"},"nodeType":"YulFunctionCall","src":"8973:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8965:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9012:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"9023:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9008:3:10"},"nodeType":"YulFunctionCall","src":"9008:17:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9031:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"9037:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9027:3:10"},"nodeType":"YulFunctionCall","src":"9027:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9001:6:10"},"nodeType":"YulFunctionCall","src":"9001:47:10"},"nodeType":"YulExpressionStatement","src":"9001:47:10"},{"nodeType":"YulAssignment","src":"9057:139:10","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9191:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9065:124:10"},"nodeType":"YulFunctionCall","src":"9065:131:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9057:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8935:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8950:4:10","type":""}],"src":"8784:419:10"},{"body":{"nodeType":"YulBlock","src":"9380:248:10","statements":[{"nodeType":"YulAssignment","src":"9390:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9402:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"9413:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9398:3:10"},"nodeType":"YulFunctionCall","src":"9398:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9390:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9437:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"9448:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9433:3:10"},"nodeType":"YulFunctionCall","src":"9433:17:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9456:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"9462:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9452:3:10"},"nodeType":"YulFunctionCall","src":"9452:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9426:6:10"},"nodeType":"YulFunctionCall","src":"9426:47:10"},"nodeType":"YulExpressionStatement","src":"9426:47:10"},{"nodeType":"YulAssignment","src":"9482:139:10","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9616:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9490:124:10"},"nodeType":"YulFunctionCall","src":"9490:131:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9482:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9360:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9375:4:10","type":""}],"src":"9209:419:10"},{"body":{"nodeType":"YulBlock","src":"9805:248:10","statements":[{"nodeType":"YulAssignment","src":"9815:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9827:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"9838:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9823:3:10"},"nodeType":"YulFunctionCall","src":"9823:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9815:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9862:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"9873:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9858:3:10"},"nodeType":"YulFunctionCall","src":"9858:17:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9881:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"9887:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9877:3:10"},"nodeType":"YulFunctionCall","src":"9877:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9851:6:10"},"nodeType":"YulFunctionCall","src":"9851:47:10"},"nodeType":"YulExpressionStatement","src":"9851:47:10"},{"nodeType":"YulAssignment","src":"9907:139:10","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10041:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_5c03d679ba36195a4b4787c361ed9e7d61953d3e452278030d1edd360e6feec2_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9915:124:10"},"nodeType":"YulFunctionCall","src":"9915:131:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9907:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_5c03d679ba36195a4b4787c361ed9e7d61953d3e452278030d1edd360e6feec2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9785:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9800:4:10","type":""}],"src":"9634:419:10"},{"body":{"nodeType":"YulBlock","src":"10230:248:10","statements":[{"nodeType":"YulAssignment","src":"10240:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10252:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"10263:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10248:3:10"},"nodeType":"YulFunctionCall","src":"10248:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10240:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10287:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"10298:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10283:3:10"},"nodeType":"YulFunctionCall","src":"10283:17:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10306:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"10312:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10302:3:10"},"nodeType":"YulFunctionCall","src":"10302:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10276:6:10"},"nodeType":"YulFunctionCall","src":"10276:47:10"},"nodeType":"YulExpressionStatement","src":"10276:47:10"},{"nodeType":"YulAssignment","src":"10332:139:10","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10466:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10340:124:10"},"nodeType":"YulFunctionCall","src":"10340:131:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10332:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10210:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10225:4:10","type":""}],"src":"10059:419:10"},{"body":{"nodeType":"YulBlock","src":"10655:248:10","statements":[{"nodeType":"YulAssignment","src":"10665:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10677:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"10688:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10673:3:10"},"nodeType":"YulFunctionCall","src":"10673:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10665:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10712:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"10723:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10708:3:10"},"nodeType":"YulFunctionCall","src":"10708:17:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10731:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"10737:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10727:3:10"},"nodeType":"YulFunctionCall","src":"10727:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10701:6:10"},"nodeType":"YulFunctionCall","src":"10701:47:10"},"nodeType":"YulExpressionStatement","src":"10701:47:10"},{"nodeType":"YulAssignment","src":"10757:139:10","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10891:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10765:124:10"},"nodeType":"YulFunctionCall","src":"10765:131:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10757:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10635:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10650:4:10","type":""}],"src":"10484:419:10"},{"body":{"nodeType":"YulBlock","src":"11080:248:10","statements":[{"nodeType":"YulAssignment","src":"11090:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11102:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"11113:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11098:3:10"},"nodeType":"YulFunctionCall","src":"11098:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11090:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11137:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"11148:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11133:3:10"},"nodeType":"YulFunctionCall","src":"11133:17:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11156:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"11162:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11152:3:10"},"nodeType":"YulFunctionCall","src":"11152:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11126:6:10"},"nodeType":"YulFunctionCall","src":"11126:47:10"},"nodeType":"YulExpressionStatement","src":"11126:47:10"},{"nodeType":"YulAssignment","src":"11182:139:10","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11316:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_d00a3bd173f99c5cbacfac93327b512a487b9ecd9c791d50435d6d89c5c624ca_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11190:124:10"},"nodeType":"YulFunctionCall","src":"11190:131:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11182:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_d00a3bd173f99c5cbacfac93327b512a487b9ecd9c791d50435d6d89c5c624ca__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11060:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11075:4:10","type":""}],"src":"10909:419:10"},{"body":{"nodeType":"YulBlock","src":"11505:248:10","statements":[{"nodeType":"YulAssignment","src":"11515:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11527:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"11538:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11523:3:10"},"nodeType":"YulFunctionCall","src":"11523:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11515:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11562:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"11573:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11558:3:10"},"nodeType":"YulFunctionCall","src":"11558:17:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11581:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"11587:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11577:3:10"},"nodeType":"YulFunctionCall","src":"11577:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11551:6:10"},"nodeType":"YulFunctionCall","src":"11551:47:10"},"nodeType":"YulExpressionStatement","src":"11551:47:10"},{"nodeType":"YulAssignment","src":"11607:139:10","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11741:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_d20dda5743a441e01b3941efede44ce1b79001dfe973ed914209ad52f646d8a7_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11615:124:10"},"nodeType":"YulFunctionCall","src":"11615:131:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11607:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_d20dda5743a441e01b3941efede44ce1b79001dfe973ed914209ad52f646d8a7__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11485:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11500:4:10","type":""}],"src":"11334:419:10"},{"body":{"nodeType":"YulBlock","src":"11800:88:10","statements":[{"nodeType":"YulAssignment","src":"11810:30:10","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"11820:18:10"},"nodeType":"YulFunctionCall","src":"11820:20:10"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11810:6:10"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11869:6:10"},{"name":"size","nodeType":"YulIdentifier","src":"11877:4:10"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"11849:19:10"},"nodeType":"YulFunctionCall","src":"11849:33:10"},"nodeType":"YulExpressionStatement","src":"11849:33:10"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"11784:4:10","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"11793:6:10","type":""}],"src":"11759:129:10"},{"body":{"nodeType":"YulBlock","src":"11934:35:10","statements":[{"nodeType":"YulAssignment","src":"11944:19:10","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11960:2:10","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11954:5:10"},"nodeType":"YulFunctionCall","src":"11954:9:10"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11944:6:10"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"11927:6:10","type":""}],"src":"11894:75:10"},{"body":{"nodeType":"YulBlock","src":"12042:241:10","statements":[{"body":{"nodeType":"YulBlock","src":"12147:22:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"12149:16:10"},"nodeType":"YulFunctionCall","src":"12149:18:10"},"nodeType":"YulExpressionStatement","src":"12149:18:10"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"12119:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"12127:18:10","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12116:2:10"},"nodeType":"YulFunctionCall","src":"12116:30:10"},"nodeType":"YulIf","src":"12113:2:10"},{"nodeType":"YulAssignment","src":"12179:37:10","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"12209:6:10"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"12187:21:10"},"nodeType":"YulFunctionCall","src":"12187:29:10"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"12179:4:10"}]},{"nodeType":"YulAssignment","src":"12253:23:10","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"12265:4:10"},{"kind":"number","nodeType":"YulLiteral","src":"12271:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12261:3:10"},"nodeType":"YulFunctionCall","src":"12261:15:10"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"12253:4:10"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"12026:6:10","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"12037:4:10","type":""}],"src":"11975:308:10"},{"body":{"nodeType":"YulBlock","src":"12348:40:10","statements":[{"nodeType":"YulAssignment","src":"12359:22:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12375:5:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12369:5:10"},"nodeType":"YulFunctionCall","src":"12369:12:10"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"12359:6:10"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12331:5:10","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"12341:6:10","type":""}],"src":"12289:99:10"},{"body":{"nodeType":"YulBlock","src":"12490:73:10","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12507:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"12512:6:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12500:6:10"},"nodeType":"YulFunctionCall","src":"12500:19:10"},"nodeType":"YulExpressionStatement","src":"12500:19:10"},{"nodeType":"YulAssignment","src":"12528:29:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12547:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"12552:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12543:3:10"},"nodeType":"YulFunctionCall","src":"12543:14:10"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"12528:11:10"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12462:3:10","type":""},{"name":"length","nodeType":"YulTypedName","src":"12467:6:10","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"12478:11:10","type":""}],"src":"12394:169:10"},{"body":{"nodeType":"YulBlock","src":"12683:34:10","statements":[{"nodeType":"YulAssignment","src":"12693:18:10","value":{"name":"pos","nodeType":"YulIdentifier","src":"12708:3:10"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"12693:11:10"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12655:3:10","type":""},{"name":"length","nodeType":"YulTypedName","src":"12660:6:10","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"12671:11:10","type":""}],"src":"12569:148:10"},{"body":{"nodeType":"YulBlock","src":"12768:51:10","statements":[{"nodeType":"YulAssignment","src":"12778:35:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12807:5:10"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"12789:17:10"},"nodeType":"YulFunctionCall","src":"12789:24:10"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"12778:7:10"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12750:5:10","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"12760:7:10","type":""}],"src":"12723:96:10"},{"body":{"nodeType":"YulBlock","src":"12867:48:10","statements":[{"nodeType":"YulAssignment","src":"12877:32:10","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12902:5:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12895:6:10"},"nodeType":"YulFunctionCall","src":"12895:13:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12888:6:10"},"nodeType":"YulFunctionCall","src":"12888:21:10"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"12877:7:10"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12849:5:10","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"12859:7:10","type":""}],"src":"12825:90:10"},{"body":{"nodeType":"YulBlock","src":"12966:32:10","statements":[{"nodeType":"YulAssignment","src":"12976:16:10","value":{"name":"value","nodeType":"YulIdentifier","src":"12987:5:10"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"12976:7:10"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12948:5:10","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"12958:7:10","type":""}],"src":"12921:77:10"},{"body":{"nodeType":"YulBlock","src":"13049:81:10","statements":[{"nodeType":"YulAssignment","src":"13059:65:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13074:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"13081:42:10","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13070:3:10"},"nodeType":"YulFunctionCall","src":"13070:54:10"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"13059:7:10"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13031:5:10","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"13041:7:10","type":""}],"src":"13004:126:10"},{"body":{"nodeType":"YulBlock","src":"13187:103:10","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"13210:3:10"},{"name":"src","nodeType":"YulIdentifier","src":"13215:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"13220:6:10"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"13197:12:10"},"nodeType":"YulFunctionCall","src":"13197:30:10"},"nodeType":"YulExpressionStatement","src":"13197:30:10"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"13268:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"13273:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13264:3:10"},"nodeType":"YulFunctionCall","src":"13264:16:10"},{"kind":"number","nodeType":"YulLiteral","src":"13282:1:10","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13257:6:10"},"nodeType":"YulFunctionCall","src":"13257:27:10"},"nodeType":"YulExpressionStatement","src":"13257:27:10"}]},"name":"copy_calldata_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"13169:3:10","type":""},{"name":"dst","nodeType":"YulTypedName","src":"13174:3:10","type":""},{"name":"length","nodeType":"YulTypedName","src":"13179:6:10","type":""}],"src":"13136:154:10"},{"body":{"nodeType":"YulBlock","src":"13345:258:10","statements":[{"nodeType":"YulVariableDeclaration","src":"13355:10:10","value":{"kind":"number","nodeType":"YulLiteral","src":"13364:1:10","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"13359:1:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"13424:63:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"13449:3:10"},{"name":"i","nodeType":"YulIdentifier","src":"13454:1:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13445:3:10"},"nodeType":"YulFunctionCall","src":"13445:11:10"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"13468:3:10"},{"name":"i","nodeType":"YulIdentifier","src":"13473:1:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13464:3:10"},"nodeType":"YulFunctionCall","src":"13464:11:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13458:5:10"},"nodeType":"YulFunctionCall","src":"13458:18:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13438:6:10"},"nodeType":"YulFunctionCall","src":"13438:39:10"},"nodeType":"YulExpressionStatement","src":"13438:39:10"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"13385:1:10"},{"name":"length","nodeType":"YulIdentifier","src":"13388:6:10"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"13382:2:10"},"nodeType":"YulFunctionCall","src":"13382:13:10"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"13396:19:10","statements":[{"nodeType":"YulAssignment","src":"13398:15:10","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"13407:1:10"},{"kind":"number","nodeType":"YulLiteral","src":"13410:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13403:3:10"},"nodeType":"YulFunctionCall","src":"13403:10:10"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"13398:1:10"}]}]},"pre":{"nodeType":"YulBlock","src":"13378:3:10","statements":[]},"src":"13374:113:10"},{"body":{"nodeType":"YulBlock","src":"13521:76:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"13571:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"13576:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13567:3:10"},"nodeType":"YulFunctionCall","src":"13567:16:10"},{"kind":"number","nodeType":"YulLiteral","src":"13585:1:10","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13560:6:10"},"nodeType":"YulFunctionCall","src":"13560:27:10"},"nodeType":"YulExpressionStatement","src":"13560:27:10"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"13502:1:10"},{"name":"length","nodeType":"YulIdentifier","src":"13505:6:10"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13499:2:10"},"nodeType":"YulFunctionCall","src":"13499:13:10"},"nodeType":"YulIf","src":"13496:2:10"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"13327:3:10","type":""},{"name":"dst","nodeType":"YulTypedName","src":"13332:3:10","type":""},{"name":"length","nodeType":"YulTypedName","src":"13337:6:10","type":""}],"src":"13296:307:10"},{"body":{"nodeType":"YulBlock","src":"13660:269:10","statements":[{"nodeType":"YulAssignment","src":"13670:22:10","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"13684:4:10"},{"kind":"number","nodeType":"YulLiteral","src":"13690:1:10","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"13680:3:10"},"nodeType":"YulFunctionCall","src":"13680:12:10"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"13670:6:10"}]},{"nodeType":"YulVariableDeclaration","src":"13701:38:10","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"13731:4:10"},{"kind":"number","nodeType":"YulLiteral","src":"13737:1:10","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13727:3:10"},"nodeType":"YulFunctionCall","src":"13727:12:10"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"13705:18:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"13778:51:10","statements":[{"nodeType":"YulAssignment","src":"13792:27:10","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"13806:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"13814:4:10","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13802:3:10"},"nodeType":"YulFunctionCall","src":"13802:17:10"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"13792:6:10"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"13758:18:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"13751:6:10"},"nodeType":"YulFunctionCall","src":"13751:26:10"},"nodeType":"YulIf","src":"13748:2:10"},{"body":{"nodeType":"YulBlock","src":"13881:42:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"13895:16:10"},"nodeType":"YulFunctionCall","src":"13895:18:10"},"nodeType":"YulExpressionStatement","src":"13895:18:10"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"13845:18:10"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"13868:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"13876:2:10","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"13865:2:10"},"nodeType":"YulFunctionCall","src":"13865:14:10"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"13842:2:10"},"nodeType":"YulFunctionCall","src":"13842:38:10"},"nodeType":"YulIf","src":"13839:2:10"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"13644:4:10","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"13653:6:10","type":""}],"src":"13609:320:10"},{"body":{"nodeType":"YulBlock","src":"13978:238:10","statements":[{"nodeType":"YulVariableDeclaration","src":"13988:58:10","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14010:6:10"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"14040:4:10"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"14018:21:10"},"nodeType":"YulFunctionCall","src":"14018:27:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14006:3:10"},"nodeType":"YulFunctionCall","src":"14006:40:10"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"13992:10:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"14157:22:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"14159:16:10"},"nodeType":"YulFunctionCall","src":"14159:18:10"},"nodeType":"YulExpressionStatement","src":"14159:18:10"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"14100:10:10"},{"kind":"number","nodeType":"YulLiteral","src":"14112:18:10","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14097:2:10"},"nodeType":"YulFunctionCall","src":"14097:34:10"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"14136:10:10"},{"name":"memPtr","nodeType":"YulIdentifier","src":"14148:6:10"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"14133:2:10"},"nodeType":"YulFunctionCall","src":"14133:22:10"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"14094:2:10"},"nodeType":"YulFunctionCall","src":"14094:62:10"},"nodeType":"YulIf","src":"14091:2:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14195:2:10","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"14199:10:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14188:6:10"},"nodeType":"YulFunctionCall","src":"14188:22:10"},"nodeType":"YulExpressionStatement","src":"14188:22:10"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"13964:6:10","type":""},{"name":"size","nodeType":"YulTypedName","src":"13972:4:10","type":""}],"src":"13935:281:10"},{"body":{"nodeType":"YulBlock","src":"14250:152:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14267:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14270:77:10","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14260:6:10"},"nodeType":"YulFunctionCall","src":"14260:88:10"},"nodeType":"YulExpressionStatement","src":"14260:88:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14364:1:10","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"14367:4:10","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14357:6:10"},"nodeType":"YulFunctionCall","src":"14357:15:10"},"nodeType":"YulExpressionStatement","src":"14357:15:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14388:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14391:4:10","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14381:6:10"},"nodeType":"YulFunctionCall","src":"14381:15:10"},"nodeType":"YulExpressionStatement","src":"14381:15:10"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"14222:180:10"},{"body":{"nodeType":"YulBlock","src":"14436:152:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14453:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14456:77:10","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14446:6:10"},"nodeType":"YulFunctionCall","src":"14446:88:10"},"nodeType":"YulExpressionStatement","src":"14446:88:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14550:1:10","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"14553:4:10","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14543:6:10"},"nodeType":"YulFunctionCall","src":"14543:15:10"},"nodeType":"YulExpressionStatement","src":"14543:15:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14574:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14577:4:10","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14567:6:10"},"nodeType":"YulFunctionCall","src":"14567:15:10"},"nodeType":"YulExpressionStatement","src":"14567:15:10"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"14408:180:10"},{"body":{"nodeType":"YulBlock","src":"14642:54:10","statements":[{"nodeType":"YulAssignment","src":"14652:38:10","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14670:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"14677:2:10","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14666:3:10"},"nodeType":"YulFunctionCall","src":"14666:14:10"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14686:2:10","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"14682:3:10"},"nodeType":"YulFunctionCall","src":"14682:7:10"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14662:3:10"},"nodeType":"YulFunctionCall","src":"14662:28:10"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"14652:6:10"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14625:5:10","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"14635:6:10","type":""}],"src":"14594:102:10"},{"body":{"nodeType":"YulBlock","src":"14808:64:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14830:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"14838:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14826:3:10"},"nodeType":"YulFunctionCall","src":"14826:14:10"},{"kind":"string","nodeType":"YulLiteral","src":"14842:22:10","type":"","value":"Pausable: not paused"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14819:6:10"},"nodeType":"YulFunctionCall","src":"14819:46:10"},"nodeType":"YulExpressionStatement","src":"14819:46:10"}]},"name":"store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"14800:6:10","type":""}],"src":"14702:170:10"},{"body":{"nodeType":"YulBlock","src":"14984:119:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15006:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"15014:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15002:3:10"},"nodeType":"YulFunctionCall","src":"15002:14:10"},{"kind":"string","nodeType":"YulLiteral","src":"15018:34:10","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14995:6:10"},"nodeType":"YulFunctionCall","src":"14995:58:10"},"nodeType":"YulExpressionStatement","src":"14995:58:10"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15074:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"15082:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15070:3:10"},"nodeType":"YulFunctionCall","src":"15070:15:10"},{"kind":"string","nodeType":"YulLiteral","src":"15087:8:10","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15063:6:10"},"nodeType":"YulFunctionCall","src":"15063:33:10"},"nodeType":"YulExpressionStatement","src":"15063:33:10"}]},"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"14976:6:10","type":""}],"src":"14878:225:10"},{"body":{"nodeType":"YulBlock","src":"15215:125:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15237:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"15245:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15233:3:10"},"nodeType":"YulFunctionCall","src":"15233:14:10"},{"kind":"string","nodeType":"YulLiteral","src":"15249:34:10","type":"","value":"Signature does not match the exp"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15226:6:10"},"nodeType":"YulFunctionCall","src":"15226:58:10"},"nodeType":"YulExpressionStatement","src":"15226:58:10"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15305:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"15313:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15301:3:10"},"nodeType":"YulFunctionCall","src":"15301:15:10"},{"kind":"string","nodeType":"YulLiteral","src":"15318:14:10","type":"","value":"ected value."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15294:6:10"},"nodeType":"YulFunctionCall","src":"15294:39:10"},"nodeType":"YulExpressionStatement","src":"15294:39:10"}]},"name":"store_literal_in_memory_5c03d679ba36195a4b4787c361ed9e7d61953d3e452278030d1edd360e6feec2","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"15207:6:10","type":""}],"src":"15109:231:10"},{"body":{"nodeType":"YulBlock","src":"15452:60:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15474:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"15482:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15470:3:10"},"nodeType":"YulFunctionCall","src":"15470:14:10"},{"kind":"string","nodeType":"YulLiteral","src":"15486:18:10","type":"","value":"Pausable: paused"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15463:6:10"},"nodeType":"YulFunctionCall","src":"15463:42:10"},"nodeType":"YulExpressionStatement","src":"15463:42:10"}]},"name":"store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"15444:6:10","type":""}],"src":"15346:166:10"},{"body":{"nodeType":"YulBlock","src":"15624:76:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15646:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"15654:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15642:3:10"},"nodeType":"YulFunctionCall","src":"15642:14:10"},{"kind":"string","nodeType":"YulLiteral","src":"15658:34:10","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15635:6:10"},"nodeType":"YulFunctionCall","src":"15635:58:10"},"nodeType":"YulExpressionStatement","src":"15635:58:10"}]},"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"15616:6:10","type":""}],"src":"15518:182:10"},{"body":{"nodeType":"YulBlock","src":"15812:125:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15834:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"15842:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15830:3:10"},"nodeType":"YulFunctionCall","src":"15830:14:10"},{"kind":"string","nodeType":"YulLiteral","src":"15846:34:10","type":"","value":"Only the current owner can trans"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15823:6:10"},"nodeType":"YulFunctionCall","src":"15823:58:10"},"nodeType":"YulExpressionStatement","src":"15823:58:10"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15902:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"15910:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15898:3:10"},"nodeType":"YulFunctionCall","src":"15898:15:10"},{"kind":"string","nodeType":"YulLiteral","src":"15915:14:10","type":"","value":"fer the GPU."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15891:6:10"},"nodeType":"YulFunctionCall","src":"15891:39:10"},"nodeType":"YulExpressionStatement","src":"15891:39:10"}]},"name":"store_literal_in_memory_d00a3bd173f99c5cbacfac93327b512a487b9ecd9c791d50435d6d89c5c624ca","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"15804:6:10","type":""}],"src":"15706:231:10"},{"body":{"nodeType":"YulBlock","src":"16049:75:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16071:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"16079:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16067:3:10"},"nodeType":"YulFunctionCall","src":"16067:14:10"},{"kind":"string","nodeType":"YulLiteral","src":"16083:33:10","type":"","value":"This GPU is already registered."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16060:6:10"},"nodeType":"YulFunctionCall","src":"16060:57:10"},"nodeType":"YulExpressionStatement","src":"16060:57:10"}]},"name":"store_literal_in_memory_d20dda5743a441e01b3941efede44ce1b79001dfe973ed914209ad52f646d8a7","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"16041:6:10","type":""}],"src":"15943:181:10"},{"body":{"nodeType":"YulBlock","src":"16173:79:10","statements":[{"body":{"nodeType":"YulBlock","src":"16230:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16239:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16242:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16232:6:10"},"nodeType":"YulFunctionCall","src":"16232:12:10"},"nodeType":"YulExpressionStatement","src":"16232:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16196:5:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16221:5:10"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"16203:17:10"},"nodeType":"YulFunctionCall","src":"16203:24:10"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"16193:2:10"},"nodeType":"YulFunctionCall","src":"16193:35:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"16186:6:10"},"nodeType":"YulFunctionCall","src":"16186:43:10"},"nodeType":"YulIf","src":"16183:2:10"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16166:5:10","type":""}],"src":"16130:122:10"},{"body":{"nodeType":"YulBlock","src":"16301:79:10","statements":[{"body":{"nodeType":"YulBlock","src":"16358:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16367:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16370:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16360:6:10"},"nodeType":"YulFunctionCall","src":"16360:12:10"},"nodeType":"YulExpressionStatement","src":"16360:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16324:5:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16349:5:10"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"16331:17:10"},"nodeType":"YulFunctionCall","src":"16331:24:10"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"16321:2:10"},"nodeType":"YulFunctionCall","src":"16321:35:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"16314:6:10"},"nodeType":"YulFunctionCall","src":"16314:43:10"},"nodeType":"YulIf","src":"16311:2:10"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16294:5:10","type":""}],"src":"16258:122:10"}]},"contents":"{\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_bytes32(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_5c03d679ba36195a4b4787c361ed9e7d61953d3e452278030d1edd360e6feec2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 44)\n        store_literal_in_memory_5c03d679ba36195a4b4787c361ed9e7d61953d3e452278030d1edd360e6feec2(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_d00a3bd173f99c5cbacfac93327b512a487b9ecd9c791d50435d6d89c5c624ca_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 44)\n        store_literal_in_memory_d00a3bd173f99c5cbacfac93327b512a487b9ecd9c791d50435d6d89c5c624ca(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_d20dda5743a441e01b3941efede44ce1b79001dfe973ed914209ad52f646d8a7_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_d20dda5743a441e01b3941efede44ce1b79001dfe973ed914209ad52f646d8a7(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bool_t_address__to_t_bool_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr_t_address__to_t_string_memory_ptr_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr_t_address_t_address__to_t_string_memory_ptr_t_address_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr_t_address_t_bool__to_t_string_memory_ptr_t_address_t_bool__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_5c03d679ba36195a4b4787c361ed9e7d61953d3e452278030d1edd360e6feec2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5c03d679ba36195a4b4787c361ed9e7d61953d3e452278030d1edd360e6feec2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_d00a3bd173f99c5cbacfac93327b512a487b9ecd9c791d50435d6d89c5c624ca__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d00a3bd173f99c5cbacfac93327b512a487b9ecd9c791d50435d6d89c5c624ca_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_d20dda5743a441e01b3941efede44ce1b79001dfe973ed914209ad52f646d8a7__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d20dda5743a441e01b3941efede44ce1b79001dfe973ed914209ad52f646d8a7_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: not paused\")\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_5c03d679ba36195a4b4787c361ed9e7d61953d3e452278030d1edd360e6feec2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Signature does not match the exp\")\n\n        mstore(add(memPtr, 32), \"ected value.\")\n\n    }\n\n    function store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: paused\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function store_literal_in_memory_d00a3bd173f99c5cbacfac93327b512a487b9ecd9c791d50435d6d89c5c624ca(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only the current owner can trans\")\n\n        mstore(add(memPtr, 32), \"fer the GPU.\")\n\n    }\n\n    function store_literal_in_memory_d20dda5743a441e01b3941efede44ce1b79001dfe973ed914209ad52f646d8a7(memPtr) {\n\n        mstore(add(memPtr, 0), \"This GPU is already registered.\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n}\n","id":10,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061009e5760003560e01c80638456cb59116100665780638456cb591461012257806388e26b201461012c5780638da5cb5b1461015e578063e71a36411461017c578063f2fde38b146101985761009e565b80631c3d06ef146100a35780633f4ba83a146100bf5780635c975abb146100c9578063601cf7b6146100e7578063715018a614610118575b600080fd5b6100bd60048036038101906100b89190610c07565b6101b4565b005b6100c76103af565b005b6100d16103c1565b6040516100de9190610e0a565b60405180910390f35b61010160048036038101906100fc9190610b72565b6103d7565b60405161010f929190610e25565b60405180910390f35b610120610454565b005b61012a610468565b005b61014660048036038101906101419190610b72565b61047a565b60405161015593929190610ebc565b60405180910390f35b61016661056f565b6040516101739190610def565b60405180910390f35b61019660048036038101906101919190610bb3565b610598565b005b6101b260048036038101906101ad9190610b49565b6106ee565b005b6101bc610772565b6001826040516101cc9190610dd8565b908152602001604051809103902060010160149054906101000a900460ff161561022b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022290610fba565b60405180910390fd5b60008260405160200161023e9190610dd8565b604051602081830303815290604052805190602001209050808214610298576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028f90610f3a565b60405180910390fd5b60405180606001604052808481526020013373ffffffffffffffffffffffffffffffffffffffff168152602001600115158152506001846040516102dc9190610dd8565b90815260200160405180910390206000820151816000019080519060200190610306929190610a14565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010160146101000a81548160ff0219169083151502179055509050507f2a3d1ecf2145022d783e1b64d9ced56a663fdc440b48d224c987d65097d5d46b83336040516103a2929190610e4e565b60405180910390a1505050565b6103b76107bc565b6103bf61083a565b565b60008060149054906101000a900460ff16905090565b6000806001836040516103ea9190610dd8565b908152602001604051809103902060010160149054906101000a900460ff166001846040516104199190610dd8565b908152602001604051809103902060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691509150915091565b61045c6107bc565b610466600061089c565b565b6104706107bc565b610478610960565b565b6001818051602081018201805184825260208301602085012081835280955050505050506000915090508060000180546104b3906110e1565b80601f01602080910402602001604051908101604052809291908181526020018280546104df906110e1565b801561052c5780601f106105015761010080835404028352916020019161052c565b820191906000526020600020905b81548152906001019060200180831161050f57829003601f168201915b5050505050908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160149054906101000a900460ff16905083565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6105a0610772565b3373ffffffffffffffffffffffffffffffffffffffff166001836040516105c79190610dd8565b908152602001604051809103902060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461064f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064690610f9a565b60405180910390fd5b806001836040516106609190610dd8565b908152602001604051809103902060010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fdd5f76176e04227ae82aa86ea74378ed4c5f60afb915676d6615246f8568afcd8233836040516106e293929190610e7e565b60405180910390a15050565b6106f66107bc565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610766576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075d90610f1a565b60405180910390fd5b61076f8161089c565b50565b61077a6103c1565b156107ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b190610f5a565b60405180910390fd5b565b6107c46109c3565b73ffffffffffffffffffffffffffffffffffffffff166107e261056f565b73ffffffffffffffffffffffffffffffffffffffff1614610838576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082f90610f7a565b60405180910390fd5b565b6108426109cb565b60008060146101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6108856109c3565b6040516108929190610def565b60405180910390a1565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610968610772565b6001600060146101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586109ac6109c3565b6040516109b99190610def565b60405180910390a1565b600033905090565b6109d36103c1565b610a12576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a0990610efa565b60405180910390fd5b565b828054610a20906110e1565b90600052602060002090601f016020900481019282610a425760008555610a89565b82601f10610a5b57805160ff1916838001178555610a89565b82800160010185558215610a89579182015b82811115610a88578251825591602001919060010190610a6d565b5b509050610a969190610a9a565b5090565b5b80821115610ab3576000816000905550600101610a9b565b5090565b6000610aca610ac584610fff565b610fda565b905082815260208101848484011115610ae257600080fd5b610aed84828561109f565b509392505050565b600081359050610b0481611344565b92915050565b600081359050610b198161135b565b92915050565b600082601f830112610b3057600080fd5b8135610b40848260208601610ab7565b91505092915050565b600060208284031215610b5b57600080fd5b6000610b6984828501610af5565b91505092915050565b600060208284031215610b8457600080fd5b600082013567ffffffffffffffff811115610b9e57600080fd5b610baa84828501610b1f565b91505092915050565b60008060408385031215610bc657600080fd5b600083013567ffffffffffffffff811115610be057600080fd5b610bec85828601610b1f565b9250506020610bfd85828601610af5565b9150509250929050565b60008060408385031215610c1a57600080fd5b600083013567ffffffffffffffff811115610c3457600080fd5b610c4085828601610b1f565b9250506020610c5185828601610b0a565b9150509250929050565b610c6481611057565b82525050565b610c7381611069565b82525050565b6000610c8482611030565b610c8e818561103b565b9350610c9e8185602086016110ae565b610ca7816111a2565b840191505092915050565b6000610cbd82611030565b610cc7818561104c565b9350610cd78185602086016110ae565b80840191505092915050565b6000610cf060148361103b565b9150610cfb826111b3565b602082019050919050565b6000610d1360268361103b565b9150610d1e826111dc565b604082019050919050565b6000610d36602c8361103b565b9150610d418261122b565b604082019050919050565b6000610d5960108361103b565b9150610d648261127a565b602082019050919050565b6000610d7c60208361103b565b9150610d87826112a3565b602082019050919050565b6000610d9f602c8361103b565b9150610daa826112cc565b604082019050919050565b6000610dc2601f8361103b565b9150610dcd8261131b565b602082019050919050565b6000610de48284610cb2565b915081905092915050565b6000602082019050610e046000830184610c5b565b92915050565b6000602082019050610e1f6000830184610c6a565b92915050565b6000604082019050610e3a6000830185610c6a565b610e476020830184610c5b565b9392505050565b60006040820190508181036000830152610e688185610c79565b9050610e776020830184610c5b565b9392505050565b60006060820190508181036000830152610e988186610c79565b9050610ea76020830185610c5b565b610eb46040830184610c5b565b949350505050565b60006060820190508181036000830152610ed68186610c79565b9050610ee56020830185610c5b565b610ef26040830184610c6a565b949350505050565b60006020820190508181036000830152610f1381610ce3565b9050919050565b60006020820190508181036000830152610f3381610d06565b9050919050565b60006020820190508181036000830152610f5381610d29565b9050919050565b60006020820190508181036000830152610f7381610d4c565b9050919050565b60006020820190508181036000830152610f9381610d6f565b9050919050565b60006020820190508181036000830152610fb381610d92565b9050919050565b60006020820190508181036000830152610fd381610db5565b9050919050565b6000610fe4610ff5565b9050610ff08282611113565b919050565b6000604051905090565b600067ffffffffffffffff82111561101a57611019611173565b5b611023826111a2565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b60006110628261107f565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b82818337600083830152505050565b60005b838110156110cc5780820151818401526020810190506110b1565b838111156110db576000848401525b50505050565b600060028204905060018216806110f957607f821691505b6020821081141561110d5761110c611144565b5b50919050565b61111c826111a2565b810181811067ffffffffffffffff8211171561113b5761113a611173565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f5061757361626c653a206e6f7420706175736564000000000000000000000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f5369676e617475726520646f6573206e6f74206d61746368207468652065787060008201527f65637465642076616c75652e0000000000000000000000000000000000000000602082015250565b7f5061757361626c653a2070617573656400000000000000000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f4f6e6c79207468652063757272656e74206f776e65722063616e207472616e7360008201527f66657220746865204750552e0000000000000000000000000000000000000000602082015250565b7f546869732047505520697320616c726561647920726567697374657265642e00600082015250565b61134d81611057565b811461135857600080fd5b50565b61136481611075565b811461136f57600080fd5b5056fea264697066735822122078dad27d3997df2da077ff526345f25db690fddd319f705b737cdde78be6439264736f6c63430008010033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8456CB59 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x88E26B20 EQ PUSH2 0x12C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0xE71A3641 EQ PUSH2 0x17C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x198 JUMPI PUSH2 0x9E JUMP JUMPDEST DUP1 PUSH4 0x1C3D06EF EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0xBF JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0x601CF7B6 EQ PUSH2 0xE7 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x118 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0xC07 JUMP JUMPDEST PUSH2 0x1B4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC7 PUSH2 0x3AF JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD1 PUSH2 0x3C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDE SWAP2 SWAP1 PUSH2 0xE0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x101 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFC SWAP2 SWAP1 PUSH2 0xB72 JUMP JUMPDEST PUSH2 0x3D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10F SWAP3 SWAP2 SWAP1 PUSH2 0xE25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x120 PUSH2 0x454 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x12A PUSH2 0x468 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x146 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xB72 JUMP JUMPDEST PUSH2 0x47A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x155 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xEBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x166 PUSH2 0x56F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x173 SWAP2 SWAP1 PUSH2 0xDEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x196 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x191 SWAP2 SWAP1 PUSH2 0xBB3 JUMP JUMPDEST PUSH2 0x598 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xB49 JUMP JUMPDEST PUSH2 0x6EE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1BC PUSH2 0x772 JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1CC SWAP2 SWAP1 PUSH2 0xDD8 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x1 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x22B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x222 SWAP1 PUSH2 0xFBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x23E SWAP2 SWAP1 PUSH2 0xDD8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP DUP1 DUP3 EQ PUSH2 0x298 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28F SWAP1 PUSH2 0xF3A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x1 DUP5 PUSH1 0x40 MLOAD PUSH2 0x2DC SWAP2 SWAP1 PUSH2 0xDD8 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x306 SWAP3 SWAP2 SWAP1 PUSH2 0xA14 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH32 0x2A3D1ECF2145022D783E1B64D9CED56A663FDC440B48D224C987D65097D5D46B DUP4 CALLER PUSH1 0x40 MLOAD PUSH2 0x3A2 SWAP3 SWAP2 SWAP1 PUSH2 0xE4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH2 0x3B7 PUSH2 0x7BC JUMP JUMPDEST PUSH2 0x3BF PUSH2 0x83A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 DUP4 PUSH1 0x40 MLOAD PUSH2 0x3EA SWAP2 SWAP1 PUSH2 0xDD8 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x1 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP5 PUSH1 0x40 MLOAD PUSH2 0x419 SWAP2 SWAP1 PUSH2 0xDD8 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP SWAP2 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH2 0x45C PUSH2 0x7BC JUMP JUMPDEST PUSH2 0x466 PUSH1 0x0 PUSH2 0x89C JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x470 PUSH2 0x7BC JUMP JUMPDEST PUSH2 0x478 PUSH2 0x960 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 DUP2 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP3 ADD DUP1 MLOAD DUP5 DUP3 MSTORE PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP6 ADD KECCAK256 DUP2 DUP4 MSTORE DUP1 SWAP6 POP POP POP POP POP POP PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0x4B3 SWAP1 PUSH2 0x10E1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4DF SWAP1 PUSH2 0x10E1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x52C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x501 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x52C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x50F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x5A0 PUSH2 0x772 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 DUP4 PUSH1 0x40 MLOAD PUSH2 0x5C7 SWAP2 SWAP1 PUSH2 0xDD8 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x64F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x646 SWAP1 PUSH2 0xF9A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 DUP4 PUSH1 0x40 MLOAD PUSH2 0x660 SWAP2 SWAP1 PUSH2 0xDD8 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xDD5F76176E04227AE82AA86EA74378ED4C5F60AFB915676D6615246F8568AFCD DUP3 CALLER DUP4 PUSH1 0x40 MLOAD PUSH2 0x6E2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xE7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x6F6 PUSH2 0x7BC JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x766 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x75D SWAP1 PUSH2 0xF1A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x76F DUP2 PUSH2 0x89C JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x77A PUSH2 0x3C1 JUMP JUMPDEST ISZERO PUSH2 0x7BA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B1 SWAP1 PUSH2 0xF5A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x7C4 PUSH2 0x9C3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x7E2 PUSH2 0x56F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x838 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82F SWAP1 PUSH2 0xF7A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x842 PUSH2 0x9CB JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x885 PUSH2 0x9C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x892 SWAP2 SWAP1 PUSH2 0xDEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x968 PUSH2 0x772 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x9AC PUSH2 0x9C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9B9 SWAP2 SWAP1 PUSH2 0xDEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x9D3 PUSH2 0x3C1 JUMP JUMPDEST PUSH2 0xA12 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA09 SWAP1 PUSH2 0xEFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0xA20 SWAP1 PUSH2 0x10E1 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0xA42 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0xA89 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0xA5B JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0xA89 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0xA89 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xA88 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xA6D JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0xA96 SWAP2 SWAP1 PUSH2 0xA9A JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xAB3 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0xA9B JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xACA PUSH2 0xAC5 DUP5 PUSH2 0xFFF JUMP JUMPDEST PUSH2 0xFDA JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xAE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAED DUP5 DUP3 DUP6 PUSH2 0x109F JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB04 DUP2 PUSH2 0x1344 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB19 DUP2 PUSH2 0x135B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xB30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xB40 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xAB7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB69 DUP5 DUP3 DUP6 ADD PUSH2 0xAF5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB84 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBAA DUP5 DUP3 DUP6 ADD PUSH2 0xB1F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBC6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xBE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBEC DUP6 DUP3 DUP7 ADD PUSH2 0xB1F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xBFD DUP6 DUP3 DUP7 ADD PUSH2 0xAF5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC1A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC40 DUP6 DUP3 DUP7 ADD PUSH2 0xB1F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xC51 DUP6 DUP3 DUP7 ADD PUSH2 0xB0A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xC64 DUP2 PUSH2 0x1057 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xC73 DUP2 PUSH2 0x1069 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC84 DUP3 PUSH2 0x1030 JUMP JUMPDEST PUSH2 0xC8E DUP2 DUP6 PUSH2 0x103B JUMP JUMPDEST SWAP4 POP PUSH2 0xC9E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x10AE JUMP JUMPDEST PUSH2 0xCA7 DUP2 PUSH2 0x11A2 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCBD DUP3 PUSH2 0x1030 JUMP JUMPDEST PUSH2 0xCC7 DUP2 DUP6 PUSH2 0x104C JUMP JUMPDEST SWAP4 POP PUSH2 0xCD7 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x10AE JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCF0 PUSH1 0x14 DUP4 PUSH2 0x103B JUMP JUMPDEST SWAP2 POP PUSH2 0xCFB DUP3 PUSH2 0x11B3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD13 PUSH1 0x26 DUP4 PUSH2 0x103B JUMP JUMPDEST SWAP2 POP PUSH2 0xD1E DUP3 PUSH2 0x11DC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD36 PUSH1 0x2C DUP4 PUSH2 0x103B JUMP JUMPDEST SWAP2 POP PUSH2 0xD41 DUP3 PUSH2 0x122B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD59 PUSH1 0x10 DUP4 PUSH2 0x103B JUMP JUMPDEST SWAP2 POP PUSH2 0xD64 DUP3 PUSH2 0x127A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD7C PUSH1 0x20 DUP4 PUSH2 0x103B JUMP JUMPDEST SWAP2 POP PUSH2 0xD87 DUP3 PUSH2 0x12A3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD9F PUSH1 0x2C DUP4 PUSH2 0x103B JUMP JUMPDEST SWAP2 POP PUSH2 0xDAA DUP3 PUSH2 0x12CC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDC2 PUSH1 0x1F DUP4 PUSH2 0x103B JUMP JUMPDEST SWAP2 POP PUSH2 0xDCD DUP3 PUSH2 0x131B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDE4 DUP3 DUP5 PUSH2 0xCB2 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE04 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC5B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE1F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC6A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xE3A PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xC6A JUMP JUMPDEST PUSH2 0xE47 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xC5B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE68 DUP2 DUP6 PUSH2 0xC79 JUMP JUMPDEST SWAP1 POP PUSH2 0xE77 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xC5B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE98 DUP2 DUP7 PUSH2 0xC79 JUMP JUMPDEST SWAP1 POP PUSH2 0xEA7 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xC5B JUMP JUMPDEST PUSH2 0xEB4 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xC5B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xED6 DUP2 DUP7 PUSH2 0xC79 JUMP JUMPDEST SWAP1 POP PUSH2 0xEE5 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xC5B JUMP JUMPDEST PUSH2 0xEF2 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xC6A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF13 DUP2 PUSH2 0xCE3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF33 DUP2 PUSH2 0xD06 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF53 DUP2 PUSH2 0xD29 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF73 DUP2 PUSH2 0xD4C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF93 DUP2 PUSH2 0xD6F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFB3 DUP2 PUSH2 0xD92 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFD3 DUP2 PUSH2 0xDB5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFE4 PUSH2 0xFF5 JUMP JUMPDEST SWAP1 POP PUSH2 0xFF0 DUP3 DUP3 PUSH2 0x1113 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x101A JUMPI PUSH2 0x1019 PUSH2 0x1173 JUMP JUMPDEST JUMPDEST PUSH2 0x1023 DUP3 PUSH2 0x11A2 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1062 DUP3 PUSH2 0x107F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x10CC JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x10B1 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x10DB JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x10F9 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x110D JUMPI PUSH2 0x110C PUSH2 0x1144 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x111C DUP3 PUSH2 0x11A2 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x113B JUMPI PUSH2 0x113A PUSH2 0x1173 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5369676E617475726520646F6573206E6F74206D617463682074686520657870 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x65637465642076616C75652E0000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F6E6C79207468652063757272656E74206F776E65722063616E207472616E73 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x66657220746865204750552E0000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x546869732047505520697320616C726561647920726567697374657265642E00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x134D DUP2 PUSH2 0x1057 JUMP JUMPDEST DUP2 EQ PUSH2 0x1358 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1364 DUP2 PUSH2 0x1075 JUMP JUMPDEST DUP2 EQ PUSH2 0x136F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH25 0xDAD27D3997DF2DA077FF526345F25DB690FDDD319F705B737C 0xDD 0xE7 DUP12 0xE6 NUMBER SWAP3 PUSH5 0x736F6C6343 STOP ADDMOD ADD STOP CALLER ","sourceMap":"241:2576:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1341:710;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2752:63;;;:::i;:::-;;1615:84:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2452:229:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;1831:101:0;;;:::i;:::-;;2687:59:9;;;:::i;:::-;;400:34;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;1201:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2057:389:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2081:198:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1341:710:9;1239:19:2;:17;:19::i;:::-;1489:4:9::1;1494:17;1489:23;;;;;;:::i;:::-;;;;;;;;;;;;;:36;;;;;;;;;;;;1488:37;1467:115;;;;;;;;;;;;:::i;:::-;;;;;;;;;1681:25;1749:17;1732:35;;;;;;;;:::i;:::-;;;;;;;;;;;;;1709:68;;;;;;1681:96;;1821:17;1808:9;:30;1787:121;;;;;;;;;;;;:::i;:::-;;;;;;;;;1945:40;;;;;;;;1949:17;1945:40;;;;1968:10;1945:40;;;;;;1980:4;1945:40;;;;::::0;1919:4:::1;1924:17;1919:23;;;;;;:::i;:::-;;;;;;;;;;;;;:66;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2000:44;2014:17;2033:10;2000:44;;;;;;;:::i;:::-;;;;;;;;1268:1:2;1341:710:9::0;;:::o;2752:63::-;1094:13:0;:11;:13::i;:::-;2798:10:9::1;:8;:10::i;:::-;2752:63::o:0;1615:84:2:-;1662:4;1685:7;;;;;;;;;;;1678:14;;1615:84;:::o;2452:229:9:-;2539:4;2545:7;2585:4;2590:17;2585:23;;;;;;:::i;:::-;;;;;;;;;;;;;:36;;;;;;;;;;;;2635:4;2640:17;2635:23;;;;;;:::i;:::-;;;;;;;;;;;;;:29;;;;;;;;;;;;2564:110;;;;2452:229;;;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;2687:59:9:-;1094:13:0;:11;:13::i;:::-;2731:8:9::1;:6;:8::i;:::-;2687:59::o:0;400:34::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1201:85:0:-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;2057:389:9:-;1239:19:2;:17;:19::i;:::-;2237:10:9::1;2204:43;;:4;2209:17;2204:23;;;;;;:::i;:::-;;;;;;;;;;;;;:29;;;;;;;;;;;;:43;;;2183:134;;;;;;;;;;;;:::i;:::-;;;;;;;;;2359:9;2327:4;2332:17;2327:23;;;;;;:::i;:::-;;;;;;;;;;;;;:29;;;:41;;;;;;;;;;;;;;;;;;2383:56;2398:17;2417:10;2429:9;2383:56;;;;;;;;:::i;:::-;;;;;;;;2057:389:::0;;:::o;2081:198:0:-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;;;2161:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1767:106:2:-;1837:8;:6;:8::i;:::-;1836:9;1828:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;1767:106::o;1359:130:0:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2433:117:2:-;1486:16;:14;:16::i;:::-;2501:5:::1;2491:7:::0;::::1;:15;;;;;;;;;;;;;;;;;;2521:22;2530:12;:10;:12::i;:::-;2521:22;;;;;;:::i;:::-;;;;;;;;2433:117::o:0;:187:0:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2433:187;;:::o;2186:115:2:-;1239:19;:17;:19::i;:::-;2255:4:::1;2245:7;;:14;;;;;;;;;;;;;;;;;;2274:20;2281:12;:10;:12::i;:::-;2274:20;;;;;;:::i;:::-;;;;;;;;2186:115::o:0;640:96:4:-;693:7;719:10;712:17;;640:96;:::o;1945:106:2:-;2011:8;:6;:8::i;:::-;2003:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;1945:106::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:345:10:-;;110:66;126:49;168:6;126:49;:::i;:::-;110:66;:::i;:::-;101:75;;199:6;192:5;185:21;237:4;230:5;226:16;275:3;266:6;261:3;257:16;254:25;251:2;;;292:1;289;282:12;251:2;305:41;339:6;334:3;329;305:41;:::i;:::-;91:261;;;;;;:::o;358:139::-;;442:6;429:20;420:29;;458:33;485:5;458:33;:::i;:::-;410:87;;;;:::o;503:139::-;;587:6;574:20;565:29;;603:33;630:5;603:33;:::i;:::-;555:87;;;;:::o;662:273::-;;767:3;760:4;752:6;748:17;744:27;734:2;;785:1;782;775:12;734:2;825:6;812:20;850:79;925:3;917:6;910:4;902:6;898:17;850:79;:::i;:::-;841:88;;724:211;;;;;:::o;941:262::-;;1049:2;1037:9;1028:7;1024:23;1020:32;1017:2;;;1065:1;1062;1055:12;1017:2;1108:1;1133:53;1178:7;1169:6;1158:9;1154:22;1133:53;:::i;:::-;1123:63;;1079:117;1007:196;;;;:::o;1209:375::-;;1327:2;1315:9;1306:7;1302:23;1298:32;1295:2;;;1343:1;1340;1333:12;1295:2;1414:1;1403:9;1399:17;1386:31;1444:18;1436:6;1433:30;1430:2;;;1476:1;1473;1466:12;1430:2;1504:63;1559:7;1550:6;1539:9;1535:22;1504:63;:::i;:::-;1494:73;;1357:220;1285:299;;;;:::o;1590:520::-;;;1725:2;1713:9;1704:7;1700:23;1696:32;1693:2;;;1741:1;1738;1731:12;1693:2;1812:1;1801:9;1797:17;1784:31;1842:18;1834:6;1831:30;1828:2;;;1874:1;1871;1864:12;1828:2;1902:63;1957:7;1948:6;1937:9;1933:22;1902:63;:::i;:::-;1892:73;;1755:220;2014:2;2040:53;2085:7;2076:6;2065:9;2061:22;2040:53;:::i;:::-;2030:63;;1985:118;1683:427;;;;;:::o;2116:520::-;;;2251:2;2239:9;2230:7;2226:23;2222:32;2219:2;;;2267:1;2264;2257:12;2219:2;2338:1;2327:9;2323:17;2310:31;2368:18;2360:6;2357:30;2354:2;;;2400:1;2397;2390:12;2354:2;2428:63;2483:7;2474:6;2463:9;2459:22;2428:63;:::i;:::-;2418:73;;2281:220;2540:2;2566:53;2611:7;2602:6;2591:9;2587:22;2566:53;:::i;:::-;2556:63;;2511:118;2209:427;;;;;:::o;2642:118::-;2729:24;2747:5;2729:24;:::i;:::-;2724:3;2717:37;2707:53;;:::o;2766:109::-;2847:21;2862:5;2847:21;:::i;:::-;2842:3;2835:34;2825:50;;:::o;2881:364::-;;2997:39;3030:5;2997:39;:::i;:::-;3052:71;3116:6;3111:3;3052:71;:::i;:::-;3045:78;;3132:52;3177:6;3172:3;3165:4;3158:5;3154:16;3132:52;:::i;:::-;3209:29;3231:6;3209:29;:::i;:::-;3204:3;3200:39;3193:46;;2973:272;;;;;:::o;3251:377::-;;3385:39;3418:5;3385:39;:::i;:::-;3440:89;3522:6;3517:3;3440:89;:::i;:::-;3433:96;;3538:52;3583:6;3578:3;3571:4;3564:5;3560:16;3538:52;:::i;:::-;3615:6;3610:3;3606:16;3599:23;;3361:267;;;;;:::o;3634:366::-;;3797:67;3861:2;3856:3;3797:67;:::i;:::-;3790:74;;3873:93;3962:3;3873:93;:::i;:::-;3991:2;3986:3;3982:12;3975:19;;3780:220;;;:::o;4006:366::-;;4169:67;4233:2;4228:3;4169:67;:::i;:::-;4162:74;;4245:93;4334:3;4245:93;:::i;:::-;4363:2;4358:3;4354:12;4347:19;;4152:220;;;:::o;4378:366::-;;4541:67;4605:2;4600:3;4541:67;:::i;:::-;4534:74;;4617:93;4706:3;4617:93;:::i;:::-;4735:2;4730:3;4726:12;4719:19;;4524:220;;;:::o;4750:366::-;;4913:67;4977:2;4972:3;4913:67;:::i;:::-;4906:74;;4989:93;5078:3;4989:93;:::i;:::-;5107:2;5102:3;5098:12;5091:19;;4896:220;;;:::o;5122:366::-;;5285:67;5349:2;5344:3;5285:67;:::i;:::-;5278:74;;5361:93;5450:3;5361:93;:::i;:::-;5479:2;5474:3;5470:12;5463:19;;5268:220;;;:::o;5494:366::-;;5657:67;5721:2;5716:3;5657:67;:::i;:::-;5650:74;;5733:93;5822:3;5733:93;:::i;:::-;5851:2;5846:3;5842:12;5835:19;;5640:220;;;:::o;5866:366::-;;6029:67;6093:2;6088:3;6029:67;:::i;:::-;6022:74;;6105:93;6194:3;6105:93;:::i;:::-;6223:2;6218:3;6214:12;6207:19;;6012:220;;;:::o;6238:275::-;;6392:95;6483:3;6474:6;6392:95;:::i;:::-;6385:102;;6504:3;6497:10;;6374:139;;;;:::o;6519:222::-;;6650:2;6639:9;6635:18;6627:26;;6663:71;6731:1;6720:9;6716:17;6707:6;6663:71;:::i;:::-;6617:124;;;;:::o;6747:210::-;;6872:2;6861:9;6857:18;6849:26;;6885:65;6947:1;6936:9;6932:17;6923:6;6885:65;:::i;:::-;6839:118;;;;:::o;6963:320::-;;7116:2;7105:9;7101:18;7093:26;;7129:65;7191:1;7180:9;7176:17;7167:6;7129:65;:::i;:::-;7204:72;7272:2;7261:9;7257:18;7248:6;7204:72;:::i;:::-;7083:200;;;;;:::o;7289:423::-;;7468:2;7457:9;7453:18;7445:26;;7517:9;7511:4;7507:20;7503:1;7492:9;7488:17;7481:47;7545:78;7618:4;7609:6;7545:78;:::i;:::-;7537:86;;7633:72;7701:2;7690:9;7686:18;7677:6;7633:72;:::i;:::-;7435:277;;;;;:::o;7718:533::-;;7925:2;7914:9;7910:18;7902:26;;7974:9;7968:4;7964:20;7960:1;7949:9;7945:17;7938:47;8002:78;8075:4;8066:6;8002:78;:::i;:::-;7994:86;;8090:72;8158:2;8147:9;8143:18;8134:6;8090:72;:::i;:::-;8172;8240:2;8229:9;8225:18;8216:6;8172:72;:::i;:::-;7892:359;;;;;;:::o;8257:521::-;;8458:2;8447:9;8443:18;8435:26;;8507:9;8501:4;8497:20;8493:1;8482:9;8478:17;8471:47;8535:78;8608:4;8599:6;8535:78;:::i;:::-;8527:86;;8623:72;8691:2;8680:9;8676:18;8667:6;8623:72;:::i;:::-;8705:66;8767:2;8756:9;8752:18;8743:6;8705:66;:::i;:::-;8425:353;;;;;;:::o;8784:419::-;;8988:2;8977:9;8973:18;8965:26;;9037:9;9031:4;9027:20;9023:1;9012:9;9008:17;9001:47;9065:131;9191:4;9065:131;:::i;:::-;9057:139;;8955:248;;;:::o;9209:419::-;;9413:2;9402:9;9398:18;9390:26;;9462:9;9456:4;9452:20;9448:1;9437:9;9433:17;9426:47;9490:131;9616:4;9490:131;:::i;:::-;9482:139;;9380:248;;;:::o;9634:419::-;;9838:2;9827:9;9823:18;9815:26;;9887:9;9881:4;9877:20;9873:1;9862:9;9858:17;9851:47;9915:131;10041:4;9915:131;:::i;:::-;9907:139;;9805:248;;;:::o;10059:419::-;;10263:2;10252:9;10248:18;10240:26;;10312:9;10306:4;10302:20;10298:1;10287:9;10283:17;10276:47;10340:131;10466:4;10340:131;:::i;:::-;10332:139;;10230:248;;;:::o;10484:419::-;;10688:2;10677:9;10673:18;10665:26;;10737:9;10731:4;10727:20;10723:1;10712:9;10708:17;10701:47;10765:131;10891:4;10765:131;:::i;:::-;10757:139;;10655:248;;;:::o;10909:419::-;;11113:2;11102:9;11098:18;11090:26;;11162:9;11156:4;11152:20;11148:1;11137:9;11133:17;11126:47;11190:131;11316:4;11190:131;:::i;:::-;11182:139;;11080:248;;;:::o;11334:419::-;;11538:2;11527:9;11523:18;11515:26;;11587:9;11581:4;11577:20;11573:1;11562:9;11558:17;11551:47;11615:131;11741:4;11615:131;:::i;:::-;11607:139;;11505:248;;;:::o;11759:129::-;;11820:20;;:::i;:::-;11810:30;;11849:33;11877:4;11869:6;11849:33;:::i;:::-;11800:88;;;:::o;11894:75::-;;11960:2;11954:9;11944:19;;11934:35;:::o;11975:308::-;;12127:18;12119:6;12116:30;12113:2;;;12149:18;;:::i;:::-;12113:2;12187:29;12209:6;12187:29;:::i;:::-;12179:37;;12271:4;12265;12261:15;12253:23;;12042:241;;;:::o;12289:99::-;;12375:5;12369:12;12359:22;;12348:40;;;:::o;12394:169::-;;12512:6;12507:3;12500:19;12552:4;12547:3;12543:14;12528:29;;12490:73;;;;:::o;12569:148::-;;12708:3;12693:18;;12683:34;;;;:::o;12723:96::-;;12789:24;12807:5;12789:24;:::i;:::-;12778:35;;12768:51;;;:::o;12825:90::-;;12902:5;12895:13;12888:21;12877:32;;12867:48;;;:::o;12921:77::-;;12987:5;12976:16;;12966:32;;;:::o;13004:126::-;;13081:42;13074:5;13070:54;13059:65;;13049:81;;;:::o;13136:154::-;13220:6;13215:3;13210;13197:30;13282:1;13273:6;13268:3;13264:16;13257:27;13187:103;;;:::o;13296:307::-;13364:1;13374:113;13388:6;13385:1;13382:13;13374:113;;;13473:1;13468:3;13464:11;13458:18;13454:1;13449:3;13445:11;13438:39;13410:2;13407:1;13403:10;13398:15;;13374:113;;;13505:6;13502:1;13499:13;13496:2;;;13585:1;13576:6;13571:3;13567:16;13560:27;13496:2;13345:258;;;;:::o;13609:320::-;;13690:1;13684:4;13680:12;13670:22;;13737:1;13731:4;13727:12;13758:18;13748:2;;13814:4;13806:6;13802:17;13792:27;;13748:2;13876;13868:6;13865:14;13845:18;13842:38;13839:2;;;13895:18;;:::i;:::-;13839:2;13660:269;;;;:::o;13935:281::-;14018:27;14040:4;14018:27;:::i;:::-;14010:6;14006:40;14148:6;14136:10;14133:22;14112:18;14100:10;14097:34;14094:62;14091:2;;;14159:18;;:::i;:::-;14091:2;14199:10;14195:2;14188:22;13978:238;;;:::o;14222:180::-;14270:77;14267:1;14260:88;14367:4;14364:1;14357:15;14391:4;14388:1;14381:15;14408:180;14456:77;14453:1;14446:88;14553:4;14550:1;14543:15;14577:4;14574:1;14567:15;14594:102;;14686:2;14682:7;14677:2;14670:5;14666:14;14662:28;14652:38;;14642:54;;;:::o;14702:170::-;14842:22;14838:1;14830:6;14826:14;14819:46;14808:64;:::o;14878:225::-;15018:34;15014:1;15006:6;15002:14;14995:58;15087:8;15082:2;15074:6;15070:15;15063:33;14984:119;:::o;15109:231::-;15249:34;15245:1;15237:6;15233:14;15226:58;15318:14;15313:2;15305:6;15301:15;15294:39;15215:125;:::o;15346:166::-;15486:18;15482:1;15474:6;15470:14;15463:42;15452:60;:::o;15518:182::-;15658:34;15654:1;15646:6;15642:14;15635:58;15624:76;:::o;15706:231::-;15846:34;15842:1;15834:6;15830:14;15823:58;15915:14;15910:2;15902:6;15898:15;15891:39;15812:125;:::o;15943:181::-;16083:33;16079:1;16071:6;16067:14;16060:57;16049:75;:::o;16130:122::-;16203:24;16221:5;16203:24;:::i;:::-;16196:5;16193:35;16183:2;;16242:1;16239;16232:12;16183:2;16173:79;:::o;16258:122::-;16331:24;16349:5;16331:24;:::i;:::-;16324:5;16321:35;16311:2;;16370:1;16367;16360:12;16311:2;16301:79;:::o"},"methodIdentifiers":{"gpus(string)":"88e26b20","owner()":"8da5cb5b","pause()":"8456cb59","paused()":"5c975abb","registerGPU(string,bytes32)":"1c3d06ef","renounceOwnership()":"715018a6","transferGPU(string,address)":"e71a3641","transferOwnership(address)":"f2fde38b","unpause()":"3f4ba83a","verifyGPU(string)":"601cf7b6"}},"metadata":"{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uniqueIdentifier\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"GPURegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uniqueIdentifier\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"GPUTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"gpus\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"uniqueIdentifier\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isRegistered\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_uniqueIdentifier\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"signature\",\"type\":\"bytes32\"}],\"name\":\"registerGPU\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_uniqueIdentifier\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferGPU\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_uniqueIdentifier\",\"type\":\"string\"}],\"name\":\"verifyGPU\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GPURegistration.sol\":\"GPURegistration\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/interfaces/IERC1271.sol\":{\"keccak256\":\"0x0705a4b1b86d7b0bd8432118f226ba139c44b9dcaba0a6eafba2dd7d0639c544\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c45b821ef9e882e57c256697a152e108f0f2ad6997609af8904cae99c9bd422e\",\"dweb:/ipfs/QmRKCJW6jjzR5UYZcLpGnhEJ75UVbH6EHkEa49sWx2SKng\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce501a941f4aa1555c04dabb5e07992503bb6a9b32ff8f7cdcefdb4a742210cb\",\"dweb:/ipfs/QmeScPrUpdrGYs9BytV3Z5ZWJcBXtuAgCW4BLHua4xFUxx\"]},\"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":{\"keccak256\":\"0xbc8d1f66b26e211a1f6f40a17453e9d5020ec96749014379205cff100809884c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b9c056a3068bb6fe41b28239bd71acd3a5249d23ed089c874182a4e3d7e47df1\",\"dweb:/ipfs/QmdFFG7dxiZ5jBaaYDXPMiKVG9rNoMhvR7cBt5997E2pat\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"contracts/GPURegistration.sol\":{\"keccak256\":\"0xa023b8ca6aed5cd12ca22856342c24968275e3fa901ffd250d6a3f04f7016baa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9a3b8cddeb38158a9fb9eb861d8dbdfda77afc02a4b2862c5982a105015312d0\",\"dweb:/ipfs/QmUaJuqVFr57AQzRFLCypoNg1NEE69fdwkKD2uP4QFpYff\"]}},\"version\":1}"}}}}}